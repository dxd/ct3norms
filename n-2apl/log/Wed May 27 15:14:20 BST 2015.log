2015-05-27 15:14:21,703 CONFIG [com.gigaspaces.logger] - Log file: /Users/dxd/git/ct3/logs/2015-05-27~15.14-gigaspaces-service-128.243.23.149-39584.log
-------------------------last log tuples start--------------------------------
Time [clock=2, time=2015-05-27 15:12:23.645]
Prohibition [subject=a10, prohibition=[rejectRequests], sanction=[reduce(a10, 500)], clock=2, time=2015-05-27 15:12:28.767]
Response [id=5087, response=accepted, clock=7, time=2015-05-27 15:13:15.149]
Time [clock=3, time=2015-05-27 15:12:33.648]
Group [name=g, ra=a10, clock=0, time=2015-05-27 15:12:28.734]
Proposal [id=5087, agent=a20, agent2=a30, clock=7, time=2015-05-27 15:13:14.759]
Prohibition [subject=a10, prohibition=[moveTooFast], sanction=[reduce(a10, 300)], clock=2, time=2015-05-27 15:12:28.78]
Position [subject=a20, id=null, cell=Cell [x=0, y=5], time=2015-05-27 15:13:54.993, clock=11]
Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-27 15:12:28.367, clock=0]
Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-27 15:12:28.448, clock=0]
Prohibition [subject=a40, prohibition=[moveTooFast], sanction=[reduce(a40, 300)], clock=2, time=2015-05-27 15:12:28.797]
Goal [id=null, cell=Cell [x=3, y=3], agent=null, time=2015-05-27 15:12:28.575, clock=0]
Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-27 15:12:28.373, clock=0]
Prohibition [subject=a30, prohibition=[moveTooFast], sanction=[reduce(a30, 300)], clock=2, time=2015-05-27 15:12:28.795]
Time [clock=4, time=2015-05-27 15:12:43.651]
Time [clock=12, time=2015-05-27 15:14:03.675]
Prohibition [subject=a20, prohibition=[moveTooFast], sanction=[reduce(a20, 300)], clock=2, time=2015-05-27 15:12:28.79]
Time [clock=10, time=2015-05-27 15:13:43.669]
Time [clock=9, time=2015-05-27 15:13:33.667]
Time [clock=8, time=2015-05-27 15:13:23.662]
Time [clock=11, time=2015-05-27 15:13:53.671]
Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-27 15:12:28.502, clock=0]
Prohibition [subject=a30, prohibition=[rejectRequests], sanction=[reduce(a30, 500)], clock=2, time=2015-05-27 15:12:28.773]
Time [clock=5, time=2015-05-27 15:12:53.655]
Time [clock=7, time=2015-05-27 15:13:13.66]
Time [clock=1, time=2015-05-27 15:12:13.63]
Time [clock=6, time=2015-05-27 15:13:03.657]
Prohibition [subject=a20, prohibition=[rejectRequests], sanction=[reduce(a20, 500)], clock=2, time=2015-05-27 15:12:28.77]
Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-27 15:12:28.385, clock=0]
Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-27 15:12:28.413, clock=0]
Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-27 15:12:28.391, clock=0]
Prohibition [subject=a40, prohibition=[rejectRequests], sanction=[reduce(a40, 500)], clock=2, time=2015-05-27 15:12:28.775]
Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-27 15:12:28.267, clock=0]
Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-27 15:12:28.387, clock=0]
Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-27 15:12:28.272, clock=0]
Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-27 15:12:28.394, clock=0]
Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-27 15:12:28.281, clock=0]
Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-27 15:12:28.408, clock=0]
Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-27 15:12:28.304, clock=0]
Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-27 15:12:28.35, clock=0]
Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-27 15:12:28.31, clock=0]
Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-27 15:12:28.371, clock=0]
Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-27 15:12:28.341, clock=0]
Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-27 15:12:28.397, clock=0]
Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-27 15:12:28.347, clock=0]
Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-27 15:12:28.307, clock=0]
Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-27 15:12:28.335, clock=0]
Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-27 15:12:28.279, clock=0]
Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-27 15:12:28.253, clock=0]
Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-27 15:12:28.382, clock=0]
Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-27 15:12:28.269, clock=0]
Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-27 15:12:28.251, clock=0]
Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-27 15:12:28.239, clock=0]
Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-27 15:12:28.259, clock=0]
Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-27 15:12:28.344, clock=0]
Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-27 15:12:28.301, clock=0]
Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-27 15:12:28.41, clock=0]
Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-27 15:12:28.235, clock=0]
Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-27 15:12:28.431, clock=0]
Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-27 15:12:28.249, clock=0]
Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-27 15:12:28.497, clock=0]
Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-27 15:12:28.265, clock=0]
Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-27 15:12:28.227, clock=0]
Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-27 15:12:28.21, clock=0]
Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-27 15:12:28.247, clock=0]
Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-27 15:12:28.241, clock=0]
Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-27 15:12:28.243, clock=0]
Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-27 15:12:28.224, clock=0]
Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-27 15:12:28.218, clock=0]
Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-27 15:12:28.263, clock=0]
Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-27 15:12:28.22, clock=0]
Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-27 15:12:28.213, clock=0]
Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-27 15:12:28.167, clock=0]
Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-27 15:12:28.207, clock=0]
-------------------------last log tuples end----------------------------------
[CTAH] started agent 10
[CTAH] Added a new agent to the game by the name of 10.
[ENV] added agent a10
[CTAH] started agent 30
[CTAH] Added a new agent to the game by the name of 30.
[ENV] added agent a30
[CTAH] started agent 40
[CTAH] Added a new agent to the game by the name of 40.
[ENV] added agent a40
object notification: Time [clock=1, time=2015-05-27 15:14:32.756]
object notification: Time [clock=1, time=2015-05-27 15:14:32.756]
object notification: Time [clock=1, time=2015-05-27 15:14:32.756]
org notification: Time [clock=1, time=2015-05-27 15:14:32.756]
[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


Event processed UpdateClock(1)
Event processed UpdateClock(1)
Event processed UpdateClock(1)
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
}


[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
}


[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
}


#########################Game started
#########################Game started
#########################Game started
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[CTAH] Array of Terms: [Lapapl.data.Term;@6e5da364
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[CTAH] Array of Terms: [Lapapl.data.Term;@50b2e9be
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@44fd2254
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
org notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-27 15:14:35.156, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-27 15:14:35.156, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-27 15:14:35.156, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-27 15:14:35.156, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-27 15:14:35.198, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-27 15:14:35.198, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-27 15:14:35.198, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-27 15:14:35.198, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-27 15:14:35.2, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-27 15:14:35.2, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-27 15:14:35.2, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-27 15:14:35.2, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-27 15:14:35.211, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-27 15:14:35.211, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-27 15:14:35.211, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-27 15:14:35.211, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-27 15:14:35.215, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-27 15:14:35.215, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-27 15:14:35.215, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-27 15:14:35.215, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-27 15:14:35.22, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-27 15:14:35.22, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-27 15:14:35.22, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-27 15:14:35.22, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-27 15:14:35.224, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-27 15:14:35.224, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-27 15:14:35.224, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-27 15:14:35.224, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-27 15:14:35.227, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-27 15:14:35.227, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-27 15:14:35.227, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-27 15:14:35.227, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-27 15:14:35.233, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-27 15:14:35.233, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-27 15:14:35.233, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-27 15:14:35.233, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-27 15:14:35.237, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-27 15:14:35.237, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-27 15:14:35.237, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-27 15:14:35.237, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-27 15:14:35.241, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-27 15:14:35.241, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-27 15:14:35.241, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-27 15:14:35.241, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-27 15:14:35.246, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-27 15:14:35.246, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-27 15:14:35.246, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-27 15:14:35.246, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-27 15:14:35.251, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-27 15:14:35.251, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-27 15:14:35.251, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-27 15:14:35.251, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-27 15:14:35.258, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-27 15:14:35.258, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-27 15:14:35.258, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-27 15:14:35.258, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-27 15:14:35.263, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-27 15:14:35.263, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-27 15:14:35.263, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-27 15:14:35.263, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-27 15:14:35.27, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-27 15:14:35.27, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-27 15:14:35.27, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-27 15:14:35.27, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-27 15:14:35.276, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-27 15:14:35.276, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-27 15:14:35.276, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-27 15:14:35.276, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-27 15:14:35.28, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-27 15:14:35.28, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-27 15:14:35.28, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-27 15:14:35.28, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-27 15:14:35.283, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-27 15:14:35.283, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-27 15:14:35.283, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-27 15:14:35.283, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-27 15:14:35.288, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-27 15:14:35.288, clock=0]
Event processed UpdateTile(brown, 0, 0)
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-27 15:14:35.288, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-27 15:14:35.288, clock=0]
Event processed UpdateTile(brown, 0, 1)
Event processed UpdateTile(white, 0, 2)
org notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-27 15:14:35.298, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-27 15:14:35.298, clock=0]
Event processed UpdateTile(yellow, 0, 3)
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-27 15:14:35.298, clock=0]
Event processed UpdateTile(brown, 0, 4)
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-27 15:14:35.298, clock=0]
Event processed UpdateTile(blue, 0, 5)
Event processed UpdateTile(brown, 0, 6)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(yellow, 1, 1)
Event processed UpdateTile(white, 1, 2)
Event processed UpdateTile(white, 1, 3)
Event processed UpdateTile(blue, 1, 4)
Event processed UpdateTile(brown, 1, 5)
Event processed UpdateTile(yellow, 1, 6)
Event processed UpdateTile(white, 2, 0)
org notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-27 15:14:35.349, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-27 15:14:35.349, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-27 15:14:35.349, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-27 15:14:35.349, clock=0]
Event processed UpdateTile(white, 2, 1)
org notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-27 15:14:35.356, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-27 15:14:35.356, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-27 15:14:35.356, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-27 15:14:35.356, clock=0]
Event processed UpdateTile(brown, 2, 2)
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-27 15:14:35.362, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-27 15:14:35.362, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-27 15:14:35.362, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-27 15:14:35.362, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-27 15:14:35.368, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-27 15:14:35.368, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-27 15:14:35.368, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-27 15:14:35.368, clock=0]
Event processed UpdateTile(blue, 2, 3)
Event processed UpdateTile(white, 2, 4)
Event processed UpdateTile(brown, 2, 5)
Event processed UpdateTile(brown, 0, 0)
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-27 15:14:35.386, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-27 15:14:35.386, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-27 15:14:35.386, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-27 15:14:35.386, clock=0]
Event processed UpdateTile(brown, 0, 1)
Event processed UpdateTile(brown, 2, 6)
Event processed UpdateTile(white, 0, 2)
Event processed UpdateTile(white, 3, 0)
Event processed UpdateTile(yellow, 0, 3)
Event processed UpdateTile(yellow, 3, 1)
Event processed UpdateTile(brown, 0, 4)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(blue, 0, 5)
Event processed UpdateTile(blue, 3, 3)
Event processed UpdateTile(brown, 0, 6)
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(yellow, 1, 1)
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-27 15:14:35.403, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-27 15:14:35.403, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-27 15:14:35.403, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-27 15:14:35.403, clock=0]
Event processed UpdateTile(white, 1, 2)
Event processed UpdateTile(white, 1, 3)
Event processed UpdateTile(blue, 1, 4)
Event processed UpdateTile(brown, 1, 5)
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-27 15:14:35.413, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-27 15:14:35.413, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-27 15:14:35.413, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-27 15:14:35.413, clock=0]
Event processed UpdateTile(yellow, 1, 6)
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-27 15:14:35.419, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-27 15:14:35.419, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-27 15:14:35.419, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-27 15:14:35.419, clock=0]
Event processed UpdateTile(white, 2, 0)
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-27 15:14:35.424, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-27 15:14:35.424, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-27 15:14:35.424, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-27 15:14:35.424, clock=0]
Event processed UpdateTile(white, 2, 1)
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-27 15:14:35.429, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-27 15:14:35.429, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-27 15:14:35.429, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-27 15:14:35.429, clock=0]
Event processed UpdateTile(brown, 2, 2)
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-27 15:14:35.433, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-27 15:14:35.433, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-27 15:14:35.433, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-27 15:14:35.433, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-27 15:14:35.437, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-27 15:14:35.437, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-27 15:14:35.437, clock=0]
Event processed UpdateTile(blue, 2, 3)
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-27 15:14:35.437, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-27 15:14:35.441, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-27 15:14:35.441, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-27 15:14:35.441, clock=0]
Event processed UpdateTile(white, 2, 4)
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-27 15:14:35.441, clock=0]
Event processed UpdateTile(brown, 2, 5)
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-27 15:14:35.444, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-27 15:14:35.444, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-27 15:14:35.444, clock=0]
Event processed UpdateTile(brown, 2, 6)
Event processed UpdateTile(white, 3, 0)
org notification: Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-27 15:14:35.444, clock=0]
Event processed UpdateTile(yellow, 3, 1)
org notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-27 15:14:35.448, clock=0]
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(blue, 3, 3)
Event processed UpdateTile(yellow, 3, 4)
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-27 15:14:35.448, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-27 15:14:35.448, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-27 15:14:35.448, clock=0]
Event processed UpdateTile(yellow, 3, 5)
org notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-27 15:14:35.455, clock=0]
Event processed UpdateTile(white, 3, 6)
Event processed UpdateTile(brown, 4, 0)
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-27 15:14:35.455, clock=0]
Event processed UpdateTile(blue, 4, 1)
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-27 15:14:35.455, clock=0]
Event processed UpdateTile(yellow, 4, 2)
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-27 15:14:35.455, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-27 15:14:35.468, clock=0]
Event processed UpdateTile(blue, 4, 3)
Event processed UpdateTile(brown, 4, 4)
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-27 15:14:35.468, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-27 15:14:35.468, clock=0]
Event processed UpdateTile(yellow, 4, 5)
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-27 15:14:35.468, clock=0]
Event processed UpdateTile(brown, 4, 6)
org notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-27 15:14:35.48, clock=0]
Event processed UpdateTile(yellow, 5, 0)
Event processed UpdateTile(white, 5, 1)
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-27 15:14:35.48, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-27 15:14:35.48, clock=0]
Event processed UpdateTile(brown, 5, 2)
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-27 15:14:35.48, clock=0]
Event processed UpdateTile(yellow, 5, 3)
org notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-27 15:14:35.494, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-27 15:14:35.494, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-27 15:14:35.494, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-27 15:14:35.494, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-27 15:14:35.506, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-27 15:14:35.506, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-27 15:14:35.506, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-27 15:14:35.506, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-27 15:14:35.511, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-27 15:14:35.511, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-27 15:14:35.511, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-27 15:14:35.511, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-27 15:14:35.516, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-27 15:14:35.516, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-27 15:14:35.516, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-27 15:14:35.516, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-27 15:14:35.522, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-27 15:14:35.522, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-27 15:14:35.522, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-27 15:14:35.522, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-27 15:14:35.527, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-27 15:14:35.527, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-27 15:14:35.527, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-27 15:14:35.527, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-27 15:14:35.533, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-27 15:14:35.533, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-27 15:14:35.533, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-27 15:14:35.533, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-27 15:14:35.538, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-27 15:14:35.538, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-27 15:14:35.538, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-27 15:14:35.538, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-27 15:14:35.542, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-27 15:14:35.542, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-27 15:14:35.542, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-27 15:14:35.542, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-27 15:14:35.548, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-27 15:14:35.548, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-27 15:14:35.548, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-27 15:14:35.548, clock=0]
org notification: Goal [id=null, cell=Cell [x=3, y=3], agent=null, time=2015-05-27 15:14:35.591, clock=0]
Event processed UpdateTile(brown, 0, 0)
Event processed UpdateTile(brown, 0, 1)
Event processed UpdateTile(white, 0, 2)
Event processed UpdateTile(yellow, 0, 3)
Event processed UpdateTile(brown, 0, 4)
Event processed UpdateTile(blue, 0, 5)
Event processed UpdateTile(brown, 0, 6)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(yellow, 1, 1)
Event processed UpdateTile(white, 1, 2)
Event processed UpdateTile(white, 1, 3)
Event processed UpdateTile(blue, 1, 4)
Event processed UpdateTile(brown, 1, 5)
Event processed UpdateTile(yellow, 1, 6)
org notification: Group [name=g, ra=a10, clock=0, time=2015-05-27 15:14:35.688]
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(white, 2, 1)
Event processed UpdateTile(brown, 2, 2)
Event processed UpdateTile(blue, 2, 3)
Event processed UpdateTile(white, 2, 4)
Event processed UpdateTile(brown, 2, 5)
Event processed UpdateTile(brown, 2, 6)
Event processed UpdateTile(white, 3, 0)
Event processed UpdateTile(yellow, 3, 1)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(blue, 3, 3)
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(yellow, 3, 5)
Event processed UpdateTile(white, 3, 6)
Event processed UpdateTile(brown, 4, 0)
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(blue, 4, 3)
Event processed UpdateTile(brown, 4, 4)
Event processed UpdateTile(yellow, 4, 5)
Event processed UpdateTile(brown, 4, 6)
Event processed UpdateTile(yellow, 5, 0)
Event processed UpdateTile(white, 5, 1)
Event processed UpdateTile(brown, 5, 2)
Event processed UpdateTile(yellow, 5, 3)
Event processed UpdateTile(blue, 5, 4)
Event processed UpdateTile(brown, 5, 5)
Event processed UpdateTile(white, 5, 6)
Event processed UpdateTile(blue, 6, 0)
Event processed UpdateTile(brown, 6, 1)
Event processed UpdateTile(white, 6, 2)
Event processed UpdateTile(brown, 6, 3)
Event processed UpdateTile(white, 6, 4)
Event processed UpdateTile(brown, 6, 5)
Event processed UpdateTile(white, 6, 6)
object notification: Obligation [subject=a10, obligation=[surround(3, 3)], sanction=[reduce(g, 700)], deadline=31, time=2015-05-27 15:14:35.774, clock=1]
object notification: Prohibition [subject=a10, prohibition=[rejectRequests], sanction=[reduce(a10, 500)], clock=1, time=2015-05-27 15:14:35.831]
object notification: Prohibition [subject=a10, prohibition=[moveTooFast], sanction=[reduce(a10, 300)], clock=1, time=2015-05-27 15:14:35.895]
object notification: Prohibition [subject=a40, prohibition=[rejectRequests], sanction=[reduce(a40, 500)], clock=1, time=2015-05-27 15:14:35.875]
object notification: Prohibition [subject=a40, prohibition=[moveTooFast], sanction=[reduce(a40, 300)], clock=1, time=2015-05-27 15:14:35.903]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateTile(brown, 0, 0), UpdateTile(brown, 0, 1), UpdateTile(white, 0, 2), UpdateTile(yellow, 0, 3), UpdateTile(brown, 0, 4), UpdateTile(blue, 0, 5), UpdateTile(brown, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(yellow, 1, 1), UpdateTile(white, 1, 2), UpdateTile(white, 1, 3), UpdateTile(blue, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(yellow, 1, 6), UpdateTile(white, 2, 0), UpdateTile(white, 2, 1), UpdateTile(brown, 2, 2), UpdateTile(blue, 2, 3), UpdateTile(white, 2, 4), UpdateTile(brown, 2, 5), UpdateTile(brown, 2, 6), UpdateTile(white, 3, 0), UpdateTile(yellow, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(blue, 3, 3), UpdateTile(yellow, 3, 4)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
}


object notification: Prohibition [subject=a30, prohibition=[rejectRequests], sanction=[reduce(a30, 500)], clock=1, time=2015-05-27 15:14:35.872]
object notification: Prohibition [subject=a30, prohibition=[moveTooFast], sanction=[reduce(a30, 300)], clock=1, time=2015-05-27 15:14:35.9]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateTile(brown, 0, 0), UpdateTile(brown, 0, 1), UpdateTile(white, 0, 2), UpdateTile(yellow, 0, 3), UpdateTile(brown, 0, 4), UpdateTile(blue, 0, 5), UpdateTile(brown, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(yellow, 1, 1), UpdateTile(white, 1, 2), UpdateTile(white, 1, 3), UpdateTile(blue, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(yellow, 1, 6), UpdateTile(white, 2, 0), UpdateTile(white, 2, 1), UpdateTile(brown, 2, 2), UpdateTile(blue, 2, 3), UpdateTile(white, 2, 4), UpdateTile(brown, 2, 5), UpdateTile(brown, 2, 6), UpdateTile(white, 3, 0), UpdateTile(yellow, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(blue, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(yellow, 3, 5), UpdateTile(white, 3, 6), UpdateTile(brown, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(blue, 4, 3), UpdateTile(brown, 4, 4), UpdateTile(yellow, 4, 5), UpdateTile(brown, 4, 6), UpdateTile(yellow, 5, 0), UpdateTile(white, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(yellow, 5, 3)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateTile(brown, 0, 0), UpdateTile(brown, 0, 1), UpdateTile(white, 0, 2), UpdateTile(yellow, 0, 3), UpdateTile(brown, 0, 4), UpdateTile(blue, 0, 5), UpdateTile(brown, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(yellow, 1, 1), UpdateTile(white, 1, 2), UpdateTile(white, 1, 3), UpdateTile(blue, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(yellow, 1, 6), UpdateTile(white, 2, 0), UpdateTile(white, 2, 1), UpdateTile(brown, 2, 2), UpdateTile(blue, 2, 3), UpdateTile(white, 2, 4), UpdateTile(brown, 2, 5), UpdateTile(brown, 2, 6), UpdateTile(white, 3, 0), UpdateTile(yellow, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(blue, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(yellow, 3, 5), UpdateTile(white, 3, 6), UpdateTile(brown, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(blue, 4, 3), UpdateTile(brown, 4, 4), UpdateTile(yellow, 4, 5), UpdateTile(brown, 4, 6), UpdateTile(yellow, 5, 0), UpdateTile(white, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(yellow, 5, 3), UpdateTile(blue, 5, 4), UpdateTile(brown, 5, 5), UpdateTile(white, 5, 6), UpdateTile(blue, 6, 0), UpdateTile(brown, 6, 1), UpdateTile(white, 6, 2), UpdateTile(brown, 6, 3), UpdateTile(white, 6, 4), UpdateTile(brown, 6, 5), UpdateTile(white, 6, 6)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
}


#########################Game Initialized
AGENT Thread-11: current phase name: Norm Phase
we have 1 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
#########################Game Initialized
AGENT Thread-15: current phase name: Norm Phase
we have 1 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
#########################Game Initialized
AGENT Thread-13: current phase name: Norm Phase
we have 1 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
Event processed UpdateTile(yellow, 3, 5)
Event processed UpdateTile(white, 3, 6)
Event processed UpdateTile(brown, 4, 0)
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(blue, 4, 3)
Event processed UpdateTile(brown, 4, 4)
Event processed UpdateTile(yellow, 4, 5)
Event processed UpdateTile(brown, 4, 6)
Event processed UpdateTile(yellow, 5, 0)
Event processed UpdateTile(white, 5, 1)
Event processed UpdateTile(brown, 5, 2)
Event processed UpdateTile(yellow, 5, 3)
Event processed UpdateTile(blue, 5, 4)
Event processed UpdateTile(brown, 5, 5)
Event processed UpdateTile(white, 5, 6)
Event processed UpdateTile(blue, 6, 0)
Event processed UpdateTile(brown, 6, 1)
Event processed UpdateTile(white, 6, 2)
Event processed UpdateTile(brown, 6, 3)
Event processed UpdateTile(white, 6, 4)
Event processed UpdateTile(brown, 6, 5)
Event processed UpdateTile(white, 6, 6)
Event processed adoptObligation(surround(3, 3), 31, reduce(g, 700))
Event processed adoptProhibition(rejectRequests, reduce(a10, 500))
Event processed adoptProhibition(moveTooFast, reduce(a10, 300))
Event processed UpdateTile(blue, 5, 4)
Event processed UpdateTile(brown, 5, 5)
Event processed UpdateTile(white, 5, 6)
Event processed UpdateTile(blue, 6, 0)
Event processed UpdateTile(brown, 6, 1)
Event processed UpdateTile(white, 6, 2)
Event processed UpdateTile(brown, 6, 3)
Event processed UpdateTile(white, 6, 4)
Event processed UpdateTile(brown, 6, 5)
Event processed adoptProhibition(rejectRequests, reduce(a30, 500))
Event processed UpdateTile(white, 6, 6)
Event processed adoptProhibition(moveTooFast, reduce(a30, 300))
Event processed adoptProhibition(rejectRequests, reduce(a40, 500))
Event processed adoptProhibition(moveTooFast, reduce(a40, 300))
[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
},
{	adoptProhibition(rejectRequests, reduce(a40, 500))
},
{	adoptProhibition(moveTooFast, reduce(a40, 300))
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized), UpdateTile(blue, 5, 4), UpdateTile(brown, 5, 5), UpdateTile(white, 5, 6), UpdateTile(blue, 6, 0), UpdateTile(brown, 6, 1), UpdateTile(white, 6, 2), UpdateTile(brown, 6, 3), UpdateTile(white, 6, 4), UpdateTile(brown, 6, 5), UpdateTile(white, 6, 6), adoptProhibition(rejectRequests, reduce(a40, 500)), adoptProhibition(moveTooFast, reduce(a40, 300))]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
},
{	adoptProhibition(rejectRequests, reduce(a40, 500))
},
{	adoptProhibition(moveTooFast, reduce(a40, 300))
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	adoptProhibition(rejectRequests, reduce(a30, 500))
},
{	adoptProhibition(moveTooFast, reduce(a30, 300))
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized), adoptProhibition(rejectRequests, reduce(a30, 500)), adoptProhibition(moveTooFast, reduce(a30, 300))]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	adoptProhibition(rejectRequests, reduce(a30, 500))
},
{	adoptProhibition(moveTooFast, reduce(a30, 300))
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
},
{	adoptObligation(surround(3, 3), 31, reduce(g, 700))
},
{	adoptProhibition(rejectRequests, reduce(a10, 500))
},
{	adoptProhibition(moveTooFast, reduce(a10, 300))
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateTile(yellow, 3, 5), UpdateTile(white, 3, 6), UpdateTile(brown, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(blue, 4, 3), UpdateTile(brown, 4, 4), UpdateTile(yellow, 4, 5), UpdateTile(brown, 4, 6), UpdateTile(yellow, 5, 0), UpdateTile(white, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(yellow, 5, 3), UpdateTile(blue, 5, 4), UpdateTile(brown, 5, 5), UpdateTile(white, 5, 6), UpdateTile(blue, 6, 0), UpdateTile(brown, 6, 1), UpdateTile(white, 6, 2), UpdateTile(brown, 6, 3), UpdateTile(white, 6, 4), UpdateTile(brown, 6, 5), UpdateTile(white, 6, 6), adoptObligation(surround(3, 3), 31, reduce(g, 700)), adoptProhibition(rejectRequests, reduce(a10, 500)), adoptProhibition(moveTooFast, reduce(a10, 300))]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
},
{	adoptObligation(surround(3, 3), 31, reduce(g, 700))
},
{	adoptProhibition(rejectRequests, reduce(a10, 500))
},
{	adoptProhibition(moveTooFast, reduce(a10, 300))
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos, AdoptP(rejectRequests(500)); aprohibition(rejectRequests(500) -> reduce(500), priority 0), AdoptP(movedTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[Initialize, @ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos, AdoptP(rejectRequests(500)); aprohibition(rejectRequests(500) -> reduce(500), priority 0), AdoptP(movedTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	Initialize
},
{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	adoptz(surround(3, 3, 700) : 27 May 2015 14:31:17 GMT, priority 10)
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized), adoptz(surround(3, 3, 700) : 27 May 2015 14:31:17 GMT, priority 10), AdoptP(rejectRequests(500)); aprohibition(rejectRequests(500) -> reduce(500), priority 0), AdoptP(movedTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	adoptz(surround(3, 3, 700) : 27 May 2015 14:31:17 GMT, priority 10)
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos, aprohibition(rejectRequests(500) -> reduce(500), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[GetAgentId(2); B(agentId(ID)); getRole(ID); getPos, aprohibition(rejectRequests(500) -> reduce(500), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(3); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[Initialize, @ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos, aprohibition(rejectRequests(500) -> reduce(500), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	Initialize
},
{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	getRole(2);
	getPos
}


[new scheduled]:[getRole(2); getPos]
[After]:{	getRole(2);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(0); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(2),L1,0); B(L1=[actionresult(X)]); GetRole(2, X); getPos]
[After]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[Planbase]:{	getRole(3);
	getPos
}


[new scheduled]:[getRole(3); getPos]
[After]:{	getRole(3);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(3),L1,0); B(L1=[actionresult(X)]); GetRole(3, X); getPos]
[After]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[Planbase]:{	GetRole(2, none);
	getPos
}


[new scheduled]:[GetRole(2, none); getPos]
[After]:{	GetRole(2, none);
	getPos
}


[Planbase]:{	getRole(0);
	getPos
}


[new scheduled]:[getRole(0); getPos]
[After]:{	getRole(0);
	getPos
}


[Planbase]:{	GetRole(3, none);
	getPos
}


[new scheduled]:[GetRole(3, none); getPos]
[After]:{	GetRole(3, none);
	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(0),L1,0); B(L1=[actionresult(X)]); GetRole(0, X); getPos]
[After]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[CTAH] Agentposition: [6,6]
[Planbase]:{	GetRole(0, ra);
	getPos
}


[new scheduled]:[GetRole(0, ra); getPos]
[After]:{	GetRole(0, ra);
	getPos
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	B(clock(C));
	GetAgentPos(6, 6, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(6, 6, C)]
[After]:{	B(clock(C));
	GetAgentPos(6, 6, C)
}


[CTAH] Agentposition: [0,6]
[Planbase]:{	getPos
}


[new scheduled]:[Surround(3, 3); sendSouth(a10, 3, 3, 100); sendWest(a20, 3, 3, 100); sendEast(a30, 3, 3, 100); sendNorth(a40, 3, 3, 100); color(white, a10, yes, 1000); color(white, a20, yes, 1000); color(white, a30, yes, 1000); color(white, a40, yes, 1000); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), getPos]
[After]:{	Surround(3, 3);
	sendSouth(a10, 3, 3, 100);
	sendWest(a20, 3, 3, 100);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 1000);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	getPos
}


[Planbase]:{	B(clock(C));
	GetAgentPos(0, 6, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(0, 6, C)]
[After]:{	B(clock(C));
	GetAgentPos(0, 6, C)
}


[Planbase]:{	GetAgentPos(6, 6, 1)
}


[new scheduled]:[GetAgentPos(6, 6, 1)]
[After]:{	GetAgentPos(6, 6, 1)
}


[Planbase]:{	sendSouth(a10, 3, 3, 100);
	sendWest(a20, 3, 3, 100);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 1000);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[sendSouth(a10, 3, 3, 100); sendWest(a20, 3, 3, 100); sendEast(a30, 3, 3, 100); sendNorth(a40, 3, 3, 100); color(white, a10, yes, 1000); color(white, a20, yes, 1000); color(white, a30, yes, 1000); color(white, a40, yes, 1000); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), @ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	sendSouth(a10, 3, 3, 100);
	sendWest(a20, 3, 3, 100);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 1000);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	GetAgentPos(0, 6, 1)
}


[new scheduled]:[GetAgentPos(0, 6, 1)]
[After]:{	GetAgentPos(0, 6, 1)
}


[Planbase]:


[new scheduled]:[]
[After]:


[CTAH] Agentposition: [0,0]
[Planbase]:{	@ctenv(setGoal(a10, 3, 2, 3, 3, 100),L,0);
	sendWest(a20, 3, 3, 100);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 1000);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	B(clock(C));
	GetAgentPos(0, 0, C)
}


[new scheduled]:[@ctenv(setGoal(a10, 3, 2, 3, 3, 100),L,0); sendWest(a20, 3, 3, 100); sendEast(a30, 3, 3, 100); sendNorth(a40, 3, 3, 100); color(white, a10, yes, 1000); color(white, a20, yes, 1000); color(white, a30, yes, 1000); color(white, a40, yes, 1000); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), B(clock(C)); GetAgentPos(0, 0, C)]
[After]:{	@ctenv(setGoal(a10, 3, 2, 3, 3, 100),L,0);
	sendWest(a20, 3, 3, 100);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 1000);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	B(clock(C));
	GetAgentPos(0, 0, C)
}


[Planbase]:


[new scheduled]:[]
[After]:


agent writes: SetGoal [id=null, agent=a10, cell=Cell [x=3, y=2], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 15:14:39.365]
org notification: SetGoal [id=null, agent=a10, cell=Cell [x=3, y=2], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 15:14:39.365]
object notification: Obligation [subject=a10, obligation=[at(3, 2, a10)], sanction=[reduce(a10, 700)], deadline=27, time=2015-05-27 15:14:39.386, clock=1]
Event processed adoptObligation(at(3, 2, a10), 27, reduce(a10, 700))
[Planbase]:{	@ctenv(setGoal(a20, 2, 3, 3, 3, 100),L,0);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 1000);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	GetAgentPos(0, 0, 1)
},
{	adoptObligation(at(3, 2, a10), 27, reduce(a10, 700))
}


[new scheduled]:[@ctenv(setGoal(a20, 2, 3, 3, 3, 100),L,0); sendEast(a30, 3, 3, 100); sendNorth(a40, 3, 3, 100); color(white, a10, yes, 1000); color(white, a20, yes, 1000); color(white, a30, yes, 1000); color(white, a40, yes, 1000); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), GetAgentPos(0, 0, 1), adoptObligation(at(3, 2, a10), 27, reduce(a10, 700))]
[After]:{	@ctenv(setGoal(a20, 2, 3, 3, 3, 100),L,0);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 1000);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	GetAgentPos(0, 0, 1)
},
{	adoptObligation(at(3, 2, a10), 27, reduce(a10, 700))
}


agent writes: SetGoal [id=null, agent=a20, cell=Cell [x=2, y=3], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 15:14:39.466]
org notification: SetGoal [id=null, agent=a20, cell=Cell [x=2, y=3], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 15:14:39.466]
[Planbase]:{	@ctenv(setGoal(a30, 4, 3, 3, 3, 100),L,0);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 1000);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptz(at(3, 2, 700) : 27 May 2015 14:31:19 GMT, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a30, 4, 3, 3, 3, 100),L,0); sendNorth(a40, 3, 3, 100); color(white, a10, yes, 1000); color(white, a20, yes, 1000); color(white, a30, yes, 1000); color(white, a40, yes, 1000); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), adoptz(at(3, 2, 700) : 27 May 2015 14:31:19 GMT, priority 10)]
[After]:{	@ctenv(setGoal(a30, 4, 3, 3, 3, 100),L,0);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 1000);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptz(at(3, 2, 700) : 27 May 2015 14:31:19 GMT, priority 10)
}


agent writes: SetGoal [id=null, agent=a30, cell=Cell [x=4, y=3], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 15:14:39.538]
[Planbase]:{	@ctenv(setGoal(a40, 3, 4, 3, 3, 100),L,0);
	color(white, a10, yes, 1000);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a40, 3, 4, 3, 3, 100),L,0); color(white, a10, yes, 1000); color(white, a20, yes, 1000); color(white, a30, yes, 1000); color(white, a40, yes, 1000); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setGoal(a40, 3, 4, 3, 3, 100),L,0);
	color(white, a10, yes, 1000);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


agent writes: SetGoal [id=null, agent=a40, cell=Cell [x=3, y=4], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 15:14:39.6]
[Planbase]:{	@ctenv(setColor(a10, white, yes, 1000),L,0);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a10, white, yes, 1000),L,0); color(white, a20, yes, 1000); color(white, a30, yes, 1000); color(white, a40, yes, 1000); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a10, white, yes, 1000),L,0);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=white, agent=a10, type=yes, sanction=1000, time=2015-05-27 15:14:39.666, clock=1]
org notification: SetGoal [id=null, agent=a30, cell=Cell [x=4, y=3], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 15:14:39.538]
[Planbase]:{	@ctenv(setColor(a20, white, yes, 1000),L,0);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a20, white, yes, 1000),L,0); color(white, a30, yes, 1000); color(white, a40, yes, 1000); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a20, white, yes, 1000),L,0);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=white, agent=a20, type=yes, sanction=1000, time=2015-05-27 15:14:39.739, clock=1]
[Planbase]:{	@ctenv(setColor(a30, white, yes, 1000),L,0);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a30, white, yes, 1000),L,0); color(white, a40, yes, 1000); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a30, white, yes, 1000),L,0);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=white, agent=a30, type=yes, sanction=1000, time=2015-05-27 15:14:39.805, clock=1]
[Planbase]:{	@ctenv(setColor(a40, white, yes, 1000),L,0);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a40, white, yes, 1000),L,0); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a40, white, yes, 1000),L,0);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=white, agent=a40, type=yes, sanction=1000, time=2015-05-27 15:14:39.867, clock=1]
org notification: SetGoal [id=null, agent=a40, cell=Cell [x=3, y=4], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 15:14:39.6]
[Planbase]:{	@ctenv(setColor(a10, blue, no, 100),L,0);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a10, blue, no, 100),L,0); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a10, blue, no, 100),L,0);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=blue, agent=a10, type=no, sanction=100, time=2015-05-27 15:14:39.933, clock=1]
[Planbase]:{	@ctenv(setColor(a20, blue, no, 100),L,0);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a20, blue, no, 100),L,0); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a20, blue, no, 100),L,0);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=blue, agent=a20, type=no, sanction=100, time=2015-05-27 15:14:39.991, clock=1]
[Planbase]:{	@ctenv(setColor(a30, blue, no, 100),L,0);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a30, blue, no, 100),L,0); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a30, blue, no, 100),L,0);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=blue, agent=a30, type=no, sanction=100, time=2015-05-27 15:14:40.051, clock=1]
[Planbase]:{	@ctenv(setColor(a40, blue, no, 100),L,0);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a40, blue, no, 100),L,0); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a40, blue, no, 100),L,0);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=blue, agent=a40, type=no, sanction=100, time=2015-05-27 15:14:40.124, clock=1]
[Planbase]:


[new scheduled]:[]
[After]:


org notification: Color [id=null, color=white, agent=a10, type=yes, sanction=1000, time=2015-05-27 15:14:39.666, clock=1]
object notification: Obligation [subject=a30, obligation=[at(4, 3, a30)], sanction=[reduce(a30, 700)], deadline=27, time=2015-05-27 15:14:39.687, clock=1]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed adoptObligation(at(4, 3, a30), 27, reduce(a30, 700))
[Planbase]:{	adoptObligation(at(4, 3, a30), 27, reduce(a30, 700))
}


[new scheduled]:[adoptObligation(at(4, 3, a30), 27, reduce(a30, 700))]
[After]:{	adoptObligation(at(4, 3, a30), 27, reduce(a30, 700))
}


[Planbase]:{	adoptz(at(4, 3, 700) : 27 May 2015 14:31:23 GMT, priority 10)
}


[new scheduled]:[adoptz(at(4, 3, 700) : 27 May 2015 14:31:23 GMT, priority 10)]
[After]:{	adoptz(at(4, 3, 700) : 27 May 2015 14:31:23 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Color [id=null, color=white, agent=a20, type=yes, sanction=1000, time=2015-05-27 15:14:39.739, clock=1]
org notification: Color [id=null, color=white, agent=a30, type=yes, sanction=1000, time=2015-05-27 15:14:39.805, clock=1]
setPhases in ClientGameStatus, the current phase is Communication Phase
setPhases in ClientGameStatus, the current phase is Communication Phase
setPhases in ClientGameStatus, the current phase is Communication Phase
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[CTAH] Array of Terms: [Lapapl.data.Term;@174a1c22
[CTAH] The created APLList : [phasechange]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@1be514e4
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@15ea9246
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(communicationphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(communicationphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(communicationphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0) else if B(tile(neco, X, Y)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0) else if B(tile(neco, X, Y)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:{	Updated
},
{	@ctenv(moveStepToGoalTest(neco, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[Updated, @ctenv(moveStepToGoalTest(neco, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	Updated
},
{	@ctenv(moveStepToGoalTest(neco, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	Updated
},
{	@ctenv(moveStepToGoalTest(neco, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[Updated, @ctenv(moveStepToGoalTest(neco, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	Updated
},
{	@ctenv(moveStepToGoalTest(neco, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] going goal: 3,2 color: neco
a30[CTAH] going goal: 4,3 color: neco
[Planbase]:


[new scheduled]:[]
[After]:


org notification: Color [id=null, color=white, agent=a40, type=yes, sanction=1000, time=2015-05-27 15:14:39.867, clock=1]
object notification: Obligation [subject=a40, obligation=[at(3, 4, a40)], sanction=[reduce(a40, 700)], deadline=27, time=2015-05-27 15:14:39.874, clock=1]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed adoptObligation(at(3, 4, a40), 27, reduce(a40, 700))
[Planbase]:{	adoptObligation(at(3, 4, a40), 27, reduce(a40, 700))
}


[new scheduled]:[adoptObligation(at(3, 4, a40), 27, reduce(a40, 700))]
[After]:{	adoptObligation(at(3, 4, a40), 27, reduce(a40, 700))
}


[Planbase]:{	adoptz(at(3, 4, 700) : 27 May 2015 14:31:46 GMT, priority 10)
}


[new scheduled]:[adoptz(at(3, 4, 700) : 27 May 2015 14:31:46 GMT, priority 10)]
[After]:{	adoptz(at(3, 4, 700) : 27 May 2015 14:31:46 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0) else if B(tile(neco, X, Y)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a40[CTAH] going goal: 3,4 color: neco
org notification: Color [id=null, color=blue, agent=a10, type=no, sanction=100, time=2015-05-27 15:14:39.933, clock=1]
org notification: Color [id=null, color=blue, agent=a20, type=no, sanction=100, time=2015-05-27 15:14:39.991, clock=1]
a30[CTAH] paths: 1000
Need to wait 1 more seconds
a10[CTAH] paths: 1000
Need to wait 2 more seconds
a40[CTAH] paths: 1000
Need to wait 3 more seconds
org notification: Color [id=null, color=blue, agent=a30, type=no, sanction=100, time=2015-05-27 15:14:40.051, clock=1]
object notification: Time [clock=2, time=2015-05-27 15:14:42.775]
object notification: Time [clock=2, time=2015-05-27 15:14:42.775]
object notification: Time [clock=2, time=2015-05-27 15:14:42.775]
org notification: Time [clock=2, time=2015-05-27 15:14:42.775]
object notification: Obligation [subject=a10, obligation=[color(white, a10)], sanction=[reduce(a10, 1000)], deadline=21, time=2015-05-27 15:14:43.397, clock=2]
object notification: Time [clock=3, time=2015-05-27 15:14:52.776]
object notification: Time [clock=3, time=2015-05-27 15:14:52.776]
object notification: Time [clock=3, time=2015-05-27 15:14:52.776]
org notification: Time [clock=3, time=2015-05-27 15:14:52.776]
org notification: Color [id=null, color=blue, agent=a40, type=no, sanction=100, time=2015-05-27 15:14:40.124, clock=1]
a30[CTAH] path: 0
a30[CTAH] path: Path: [6][6] [6][5] [5][5] [4][5] [4][4] [4][3]

a30[CTAH] moveStepToGoalTest nopoints: []
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:6,C:5)
a30[CTAH] moveStepToGoalTest sent proposal for: [6,5,1,3546]
object notification: Time [clock=4, time=2015-05-27 15:15:02.779]
object notification: Obligation [subject=a30, obligation=[color(white, a30)], sanction=[reduce(a30, 1000)], deadline=21, time=2015-05-27 15:14:53.274, clock=3]
object notification: Time [clock=4, time=2015-05-27 15:15:02.779]
org notification: Time [clock=4, time=2015-05-27 15:15:02.779]
object notification: Time [clock=4, time=2015-05-27 15:15:02.779]
object notification: Prohibition [subject=a10, prohibition=[color(blue, a10)], sanction=[reduce(a10, 100)], clock=4, time=2015-05-27 15:15:11.016]
object notification: Time [clock=5, time=2015-05-27 15:15:12.785]
object notification: Time [clock=5, time=2015-05-27 15:15:12.785]
object notification: Time [clock=5, time=2015-05-27 15:15:12.785]
object notification: Prohibition [subject=a30, prohibition=[color(blue, a30)], sanction=[reduce(a30, 100)], clock=5, time=2015-05-27 15:15:14.722]
object notification: Obligation [subject=a40, obligation=[color(white, a40)], sanction=[reduce(a40, 1000)], deadline=21, time=2015-05-27 15:15:06.803, clock=4]
object notification: Prohibition [subject=a40, prohibition=[color(blue, a40)], sanction=[reduce(a40, 100)], clock=5, time=2015-05-27 15:15:14.749]
org notification: Time [clock=5, time=2015-05-27 15:15:12.785]
org notification: Proposal [id=3546, agent=a30, agent2=a20, clock=3, time=2015-05-27 15:15:14.871]
a10[CTAH] path: 0
a10[CTAH] path: Path: [0][0] [0][1] [1][1] [2][1] [2][2] [3][2]

a10[CTAH] moveStepToGoalTest nopoints: []
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:0,C:1)
a10[CTAH] moveStepToGoalTest sent proposal for: [0,1,1,269]
org notification: Proposal [id=269, agent=a10, agent2=a20, clock=5, time=2015-05-27 15:15:16.073]
a40[CTAH] path: 0
a40[CTAH] path: Path: [6][0] [6][1] [6][2] [6][3] [5][3] [4][3] [4][4] [3][4]

a40[CTAH] moveStepToGoalTest nopoints: []
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:6,C:1)
a40[CTAH] moveStepToGoalTest sent proposal for: [6,1,1,6425]
org notification: Proposal [id=6425, agent=a40, agent2=a20, clock=5, time=2015-05-27 15:15:17.134]
Event processed UpdateClock(2)
Event processed UpdateClock(3)
Event processed adoptObligation(color(white, a30), 21, reduce(a30, 1000))
Event processed UpdateClock(4)
Event processed UpdateClock(5)
Event processed adoptProhibition(color(blue, a30), reduce(a30, 100))
Event processed UpdateClock(2)
Event processed adoptObligation(color(white, a10), 21, reduce(a10, 1000))
Event processed UpdateClock(3)
Event processed UpdateClock(4)
Event processed adoptProhibition(color(blue, a10), reduce(a10, 100))
Event processed UpdateClock(5)
Event processed UpdateClock(2)
Event processed UpdateClock(3)
Event processed UpdateClock(4)
Event processed UpdateClock(5)
Event processed adoptObligation(color(white, a40), 21, reduce(a40, 1000))
Event processed adoptProhibition(color(blue, a40), reduce(a40, 100))
[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 5))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 3546=no)
							then	{	NextStep(6, 5, 3546)
								}
							else	{	NextStep(6, 5)
								}
						}
				}
			else	{	if	B(not 3546=no)
					then	{	NextStep(6, 5, 3546)
						}
					else	{	NextStep(6, 5)
						}
				}
		};
	if	B(not 3546=no)
	then	{	Sent(3546, 1, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(2)
},
{	UpdateClock(3)
},
{	adoptObligation(color(white, a30), 21, reduce(a30, 1000))
},
{	UpdateClock(4)
},
{	UpdateClock(5)
},
{	adoptProhibition(color(blue, a30), reduce(a30, 100))
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 6, 5)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not 3546=no) then NextStep(6, 5, 3546) else NextStep(6, 5) else if B(not 3546=no) then NextStep(6, 5, 3546) else NextStep(6, 5); if B(not 3546=no) then Sent(3546, 1, open, Clock); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(2), UpdateClock(3), adoptObligation(color(white, a30), 21, reduce(a30, 1000)), UpdateClock(4), UpdateClock(5), adoptProhibition(color(blue, a30), reduce(a30, 100))]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 5))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 3546=no)
							then	{	NextStep(6, 5, 3546)
								}
							else	{	NextStep(6, 5)
								}
						}
				}
			else	{	if	B(not 3546=no)
					then	{	NextStep(6, 5, 3546)
						}
					else	{	NextStep(6, 5)
						}
				}
		};
	if	B(not 3546=no)
	then	{	Sent(3546, 1, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(2)
},
{	UpdateClock(3)
},
{	adoptObligation(color(white, a30), 21, reduce(a30, 1000))
},
{	UpdateClock(4)
},
{	UpdateClock(5)
},
{	adoptProhibition(color(blue, a30), reduce(a30, 100))
}


[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 0, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 269=no)
							then	{	NextStep(0, 1, 269)
								}
							else	{	NextStep(0, 1)
								}
						}
				}
			else	{	if	B(not 269=no)
					then	{	NextStep(0, 1, 269)
						}
					else	{	NextStep(0, 1)
						}
				}
		};
	if	B(not 269=no)
	then	{	Sent(269, 1, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(2)
},
{	adoptObligation(color(white, a10), 21, reduce(a10, 1000))
},
{	UpdateClock(3)
},
{	UpdateClock(4)
},
{	adoptProhibition(color(blue, a10), reduce(a10, 100))
},
{	UpdateClock(5)
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 0, 1)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not 269=no) then NextStep(0, 1, 269) else NextStep(0, 1) else if B(not 269=no) then NextStep(0, 1, 269) else NextStep(0, 1); if B(not 269=no) then Sent(269, 1, open, Clock); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(2), adoptObligation(color(white, a10), 21, reduce(a10, 1000)), UpdateClock(3), UpdateClock(4), adoptProhibition(color(blue, a10), reduce(a10, 100)), UpdateClock(5)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 0, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 269=no)
							then	{	NextStep(0, 1, 269)
								}
							else	{	NextStep(0, 1)
								}
						}
				}
			else	{	if	B(not 269=no)
					then	{	NextStep(0, 1, 269)
						}
					else	{	NextStep(0, 1)
						}
				}
		};
	if	B(not 269=no)
	then	{	Sent(269, 1, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(2)
},
{	adoptObligation(color(white, a10), 21, reduce(a10, 1000))
},
{	UpdateClock(3)
},
{	UpdateClock(4)
},
{	adoptProhibition(color(blue, a10), reduce(a10, 100))
},
{	UpdateClock(5)
}


[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 6425=no)
							then	{	NextStep(6, 1, 6425)
								}
							else	{	NextStep(6, 1)
								}
						}
				}
			else	{	if	B(not 6425=no)
					then	{	NextStep(6, 1, 6425)
						}
					else	{	NextStep(6, 1)
						}
				}
		};
	if	B(not 6425=no)
	then	{	Sent(6425, 1, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(2)
},
{	UpdateClock(3)
},
{	UpdateClock(4)
},
{	UpdateClock(5)
},
{	adoptObligation(color(white, a40), 21, reduce(a40, 1000))
},
{	adoptProhibition(color(blue, a40), reduce(a40, 100))
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 6, 1)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not 6425=no) then NextStep(6, 1, 6425) else NextStep(6, 1) else if B(not 6425=no) then NextStep(6, 1, 6425) else NextStep(6, 1); if B(not 6425=no) then Sent(6425, 1, open, Clock); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(2), UpdateClock(3), UpdateClock(4), UpdateClock(5), adoptObligation(color(white, a40), 21, reduce(a40, 1000)), adoptProhibition(color(blue, a40), reduce(a40, 100))]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 6425=no)
							then	{	NextStep(6, 1, 6425)
								}
							else	{	NextStep(6, 1)
								}
						}
				}
			else	{	if	B(not 6425=no)
					then	{	NextStep(6, 1, 6425)
						}
					else	{	NextStep(6, 1)
						}
				}
		};
	if	B(not 6425=no)
	then	{	Sent(6425, 1, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(2)
},
{	UpdateClock(3)
},
{	UpdateClock(4)
},
{	UpdateClock(5)
},
{	adoptObligation(color(white, a40), 21, reduce(a40, 1000))
},
{	adoptProhibition(color(blue, a40), reduce(a40, 100))
}


[Planbase]:{	if	B(tile(Color1, 6, 5))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 3546=no)
							then	{	NextStep(6, 5, 3546)
								}
							else	{	NextStep(6, 5)
								}
						}
				}
			else	{	if	B(not 3546=no)
					then	{	NextStep(6, 5, 3546)
						}
					else	{	NextStep(6, 5)
						}
				}
		};
	if	B(not 3546=no)
	then	{	Sent(3546, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[if B(tile(Color1, 6, 5)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not 3546=no) then NextStep(6, 5, 3546) else NextStep(6, 5) else if B(not 3546=no) then NextStep(6, 5, 3546) else NextStep(6, 5); if B(not 3546=no) then Sent(3546, 1, open, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10), AdoptP(useColor(blue, 100)); aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	if	B(tile(Color1, 6, 5))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 3546=no)
							then	{	NextStep(6, 5, 3546)
								}
							else	{	NextStep(6, 5)
								}
						}
				}
			else	{	if	B(not 3546=no)
					then	{	NextStep(6, 5, 3546)
						}
					else	{	NextStep(6, 5)
						}
				}
		};
	if	B(not 3546=no)
	then	{	Sent(3546, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[Planbase]:{	if	B(tile(Color1, 0, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 269=no)
							then	{	NextStep(0, 1, 269)
								}
							else	{	NextStep(0, 1)
								}
						}
				}
			else	{	if	B(not 269=no)
					then	{	NextStep(0, 1, 269)
						}
					else	{	NextStep(0, 1)
						}
				}
		};
	if	B(not 269=no)
	then	{	Sent(269, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[if B(tile(Color1, 0, 1)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not 269=no) then NextStep(0, 1, 269) else NextStep(0, 1) else if B(not 269=no) then NextStep(0, 1, 269) else NextStep(0, 1); if B(not 269=no) then Sent(269, 1, open, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10), AdoptP(useColor(blue, 100)); aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	if	B(tile(Color1, 0, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 269=no)
							then	{	NextStep(0, 1, 269)
								}
							else	{	NextStep(0, 1)
								}
						}
				}
			else	{	if	B(not 269=no)
					then	{	NextStep(0, 1, 269)
						}
					else	{	NextStep(0, 1)
						}
				}
		};
	if	B(not 269=no)
	then	{	Sent(269, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[Planbase]:{	if	B(tile(Color1, 6, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 6425=no)
							then	{	NextStep(6, 1, 6425)
								}
							else	{	NextStep(6, 1)
								}
						}
				}
			else	{	if	B(not 6425=no)
					then	{	NextStep(6, 1, 6425)
						}
					else	{	NextStep(6, 1)
						}
				}
		};
	if	B(not 6425=no)
	then	{	Sent(6425, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[if B(tile(Color1, 6, 1)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not 6425=no) then NextStep(6, 1, 6425) else NextStep(6, 1) else if B(not 6425=no) then NextStep(6, 1, 6425) else NextStep(6, 1); if B(not 6425=no) then Sent(6425, 1, open, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10), AdoptP(useColor(blue, 100)); aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	if	B(tile(Color1, 6, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 6425=no)
							then	{	NextStep(6, 1, 6425)
								}
							else	{	NextStep(6, 1)
								}
						}
				}
			else	{	if	B(not 6425=no)
					then	{	NextStep(6, 1, 6425)
						}
					else	{	NextStep(6, 1)
						}
				}
		};
	if	B(not 6425=no)
	then	{	Sent(6425, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[Planbase]:{	if	B(prohibition(useColor(brown, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not 3546=no)
					then	{	NextStep(6, 5, 3546)
						}
					else	{	NextStep(6, 5)
						}
				}
		}
	else	{	if	B(not 3546=no)
			then	{	NextStep(6, 5, 3546)
				}
			else	{	NextStep(6, 5)
				}
		};
	if	B(not 3546=no)
	then	{	Sent(3546, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[if B(prohibition(useColor(brown, V2))) then if B(700>V2) then if B(not 3546=no) then NextStep(6, 5, 3546) else NextStep(6, 5) else if B(not 3546=no) then NextStep(6, 5, 3546) else NextStep(6, 5); if B(not 3546=no) then Sent(3546, 1, open, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10), aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	if	B(prohibition(useColor(brown, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not 3546=no)
					then	{	NextStep(6, 5, 3546)
						}
					else	{	NextStep(6, 5)
						}
				}
		}
	else	{	if	B(not 3546=no)
			then	{	NextStep(6, 5, 3546)
				}
			else	{	NextStep(6, 5)
				}
		};
	if	B(not 3546=no)
	then	{	Sent(3546, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[Planbase]:{	if	B(prohibition(useColor(brown, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not 269=no)
					then	{	NextStep(0, 1, 269)
						}
					else	{	NextStep(0, 1)
						}
				}
		}
	else	{	if	B(not 269=no)
			then	{	NextStep(0, 1, 269)
				}
			else	{	NextStep(0, 1)
				}
		};
	if	B(not 269=no)
	then	{	Sent(269, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[if B(tile(white, 0, 0)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), if B(prohibition(useColor(brown, V2))) then if B(700>V2) then if B(not 269=no) then NextStep(0, 1, 269) else NextStep(0, 1) else if B(not 269=no) then NextStep(0, 1, 269) else NextStep(0, 1); if B(not 269=no) then Sent(269, 1, open, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	if	B(prohibition(useColor(brown, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not 269=no)
					then	{	NextStep(0, 1, 269)
						}
					else	{	NextStep(0, 1)
						}
				}
		}
	else	{	if	B(not 269=no)
			then	{	NextStep(0, 1, 269)
				}
			else	{	NextStep(0, 1)
				}
		};
	if	B(not 269=no)
	then	{	Sent(269, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[Planbase]:{	if	B(prohibition(useColor(brown, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not 6425=no)
					then	{	NextStep(6, 1, 6425)
						}
					else	{	NextStep(6, 1)
						}
				}
		}
	else	{	if	B(not 6425=no)
			then	{	NextStep(6, 1, 6425)
				}
			else	{	NextStep(6, 1)
				}
		};
	if	B(not 6425=no)
	then	{	Sent(6425, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[if B(tile(white, 0, 6)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), if B(prohibition(useColor(brown, V2))) then if B(700>V2) then if B(not 6425=no) then NextStep(6, 1, 6425) else NextStep(6, 1) else if B(not 6425=no) then NextStep(6, 1, 6425) else NextStep(6, 1); if B(not 6425=no) then Sent(6425, 1, open, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	if	B(prohibition(useColor(brown, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not 6425=no)
					then	{	NextStep(6, 1, 6425)
						}
					else	{	NextStep(6, 1)
						}
				}
		}
	else	{	if	B(not 6425=no)
			then	{	NextStep(6, 1, 6425)
				}
			else	{	NextStep(6, 1)
				}
		};
	if	B(not 6425=no)
	then	{	Sent(6425, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[Planbase]:{	if	B(not 3546=no)
	then	{	NextStep(6, 5, 3546)
		}
	else	{	NextStep(6, 5)
		};
	if	B(not 3546=no)
	then	{	Sent(3546, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(not 3546=no) then NextStep(6, 5, 3546) else NextStep(6, 5); if B(not 3546=no) then Sent(3546, 1, open, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(not 3546=no)
	then	{	NextStep(6, 5, 3546)
		}
	else	{	NextStep(6, 5)
		};
	if	B(not 3546=no)
	then	{	Sent(3546, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	if	B(not 269=no)
	then	{	NextStep(0, 1, 269)
		}
	else	{	NextStep(0, 1)
		};
	if	B(not 269=no)
	then	{	Sent(269, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 0)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), if B(not 269=no) then NextStep(0, 1, 269) else NextStep(0, 1); if B(not 269=no) then Sent(269, 1, open, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	if	B(not 269=no)
	then	{	NextStep(0, 1, 269)
		}
	else	{	NextStep(0, 1)
		};
	if	B(not 269=no)
	then	{	Sent(269, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	if	B(not 6425=no)
	then	{	NextStep(6, 1, 6425)
		}
	else	{	NextStep(6, 1)
		};
	if	B(not 6425=no)
	then	{	Sent(6425, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 6)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), if B(not 6425=no) then NextStep(6, 1, 6425) else NextStep(6, 1); if B(not 6425=no) then Sent(6425, 1, open, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	if	B(not 6425=no)
	then	{	NextStep(6, 1, 6425)
		}
	else	{	NextStep(6, 1)
		};
	if	B(not 6425=no)
	then	{	Sent(6425, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NextStep(6, 5, 3546);
	if	B(not 3546=no)
	then	{	Sent(3546, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[NextStep(6, 5, 3546); if B(not 3546=no) then Sent(3546, 1, open, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	NextStep(6, 5, 3546);
	if	B(not 3546=no)
	then	{	Sent(3546, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	NextStep(6, 1, 6425);
	if	B(not 6425=no)
	then	{	Sent(6425, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 6)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), NextStep(6, 1, 6425); if B(not 6425=no) then Sent(6425, 1, open, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	NextStep(6, 1, 6425);
	if	B(not 6425=no)
	then	{	Sent(6425, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	NextStep(0, 1, 269);
	if	B(not 269=no)
	then	{	Sent(269, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 0)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), NextStep(0, 1, 269); if B(not 269=no) then Sent(269, 1, open, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	NextStep(0, 1, 269);
	if	B(not 269=no)
	then	{	Sent(269, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 3546=no)
	then	{	Sent(3546, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(not 3546=no) then Sent(3546, 1, open, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(not 3546=no)
	then	{	Sent(3546, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	if	B(not 6425=no)
	then	{	Sent(6425, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 6)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), if B(not 6425=no) then Sent(6425, 1, open, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	if	B(not 6425=no)
	then	{	Sent(6425, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	if	B(not 269=no)
	then	{	Sent(269, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 0)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), if B(not 269=no) then Sent(269, 1, open, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	if	B(not 269=no)
	then	{	Sent(269, 1, open, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	Sent(3546, 1, open, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[Sent(3546, 1, open, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	Sent(3546, 1, open, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	Sent(6425, 1, open, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 6)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), Sent(6425, 1, open, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	Sent(6425, 1, open, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	Sent(269, 1, open, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 0)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), Sent(269, 1, open, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	Sent(269, 1, open, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 6)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 0)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000)]
[After]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000)]
[After]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
org notification: Response [id=269, response=accepted, clock=5, time=2015-05-27 15:15:18.539]
Event processed @ctenv(functionToList(message(response, 269, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(response, 269, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(message(response, 269, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(response, 269, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@6e5b02d6
[CTAH] The created APLList : [response,269,accept]
[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 1, 6425);
			ReceivedMessage(noresponse, 6425)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 1, 6425); ReceivedMessage(noresponse, 6425)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 1, 6425);
			ReceivedMessage(noresponse, 6425)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(0, 1, 269);
			ReceivedMessage(noresponse, 269)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,269,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,269,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,269,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(0, 1, 269); ReceivedMessage(noresponse, 269)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([response,269,accept])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([response,269,accept])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([response,269,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(0, 1, 269);
			ReceivedMessage(noresponse, 269)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,269,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,269,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,269,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 6)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 269)
		}
}


[new scheduled]:[if B(tile(white, 0, 0)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(response=response) then ReceivedMessage(accept, 269)]
[After]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 269)
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 269)
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 269)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 269)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
org notification: Response [id=6425, response=accepted, clock=5, time=2015-05-27 15:15:19.068]
Event processed @ctenv(functionToList(message(response, 6425, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 1, 6425);
			ReceivedMessage(noresponse, 6425)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(response, 6425, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 1, 6425); ReceivedMessage(noresponse, 6425)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(message(response, 6425, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 1, 6425);
			ReceivedMessage(noresponse, 6425)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(response, 6425, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(white, 0, 1),L2,0);
	if	B(L2=[actionresult([0,1])])
	then	{	B(clock(Clock));
			UpdatePosition(0, 1, Clock)
		};
	NoNextStep(0, 1, 269)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(white, 0, 1),L2,0); if B(L2=[actionresult([0,1])]) then {B(clock(Clock)); UpdatePosition(0, 1, Clock)}; NoNextStep(0, 1, 269), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoal(white, 0, 1),L2,0);
	if	B(L2=[actionresult([0,1])])
	then	{	B(clock(Clock));
			UpdatePosition(0, 1, Clock)
		};
	NoNextStep(0, 1, 269)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@5cb6e589
[CTAH] The created APLList : [response,6425,accept]
a10[CTAH] moveStepToGoal returns: false
org notification: Position [subject=a10, id=null, cell=Cell [x=0, y=1], time=2015-05-27 15:15:19.182, clock=5]
object notification: Position [subject=a10, id=null, cell=Cell [x=0, y=1], time=2015-05-27 15:15:19.182, clock=5]
Event processed UpdatePosition(0, 1, 5)
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,6425,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,6425,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,6425,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 6)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([response,6425,accept])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([response,6425,accept])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([response,6425,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,6425,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,6425,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,6425,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	NoNextStep(0, 1, 269)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(0, 1, 5)
}


[new scheduled]:[NoNextStep(0, 1, 269), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdatePosition(0, 1, 5)]
[After]:{	NoNextStep(0, 1, 269)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(0, 1, 5)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 6425)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(response=response) then ReceivedMessage(accept, 6425)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 6425)
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 6425)
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 6425)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 6425)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 1, 6425);
			ReceivedMessage(noresponse, 6425)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 1, 6425); ReceivedMessage(noresponse, 6425)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 1, 6425);
			ReceivedMessage(noresponse, 6425)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 6)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0) else if B(tile(white, X, Y)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	@ctenv(moveStepToGoalTest(white, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(white, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(white, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] going goal: 3,2 color: white
[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	@ctenv(moveStepToGoal(white, 6, 1),L2,0);
	if	B(L2=[actionresult([6,1])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 1, Clock)
		};
	NoNextStep(6, 1, 6425)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(white, 6, 1),L2,0); if B(L2=[actionresult([6,1])]) then {B(clock(Clock)); UpdatePosition(6, 1, Clock)}; NoNextStep(6, 1, 6425), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoal(white, 6, 1),L2,0);
	if	B(L2=[actionresult([6,1])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 1, Clock)
		};
	NoNextStep(6, 1, 6425)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


Need to wait 3 more seconds
object notification: Position [subject=a40, id=null, cell=Cell [x=6, y=1], time=2015-05-27 15:15:19.955, clock=5]
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


org notification: Position [subject=a40, id=null, cell=Cell [x=6, y=1], time=2015-05-27 15:15:19.955, clock=5]
[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


object notification: Time [clock=6, time=2015-05-27 15:15:22.788]
object notification: Time [clock=6, time=2015-05-27 15:15:22.788]
object notification: Time [clock=6, time=2015-05-27 15:15:22.788]
org notification: Time [clock=6, time=2015-05-27 15:15:22.788]
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


Event processed UpdateClock(6)
[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	UpdateClock(6)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10), UpdateClock(6)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	UpdateClock(6)
}


[Planbase]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(5>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(5>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


a40[CTAH] moveStepToGoal returns: [6,1]
[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


Event processed UpdatePosition(6, 1, 5)
Event processed UpdateClock(6)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(6, 1, Clock);
	NoNextStep(6, 1, 6425)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(6, 1, 5)
},
{	UpdateClock(6)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(6, 1, Clock); NoNextStep(6, 1, 6425), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdatePosition(6, 1, 5), UpdateClock(6)]
[After]:{	B(clock(Clock));
	UpdatePosition(6, 1, Clock);
	NoNextStep(6, 1, 6425)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(6, 1, 5)
},
{	UpdateClock(6)
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	UpdatePosition(6, 1, 5);
	NoNextStep(6, 1, 6425)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[UpdatePosition(6, 1, 5); NoNextStep(6, 1, 6425), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	UpdatePosition(6, 1, 5);
	NoNextStep(6, 1, 6425)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	NoNextStep(6, 1, 6425)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NoNextStep(6, 1, 6425), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NoNextStep(6, 1, 6425)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0) else if B(tile(white, X, Y)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	@ctenv(moveStepToGoalTest(white, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(white, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(white, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


a40[CTAH] going goal: 3,4 color: white
[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


a10[CTAH] paths: 1000
a10[CTAH] path: 0
a10[CTAH] path: Path: [0][1] [1][1] [2][1] [2][2] [3][2]

a10[CTAH] moveStepToGoalTest nopoints: []
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:1,C:1)
a10[CTAH] moveStepToGoalTest sent proposal for: [1,1,3,8282]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
org notification: Proposal [id=8282, agent=a10, agent2=a40, clock=6, time=2015-05-27 15:15:24.748]
Received a proposal creating event
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


Event processed UpdateClock(6)
[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 1, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 8282=no)
							then	{	NextStep(1, 1, 8282)
								}
							else	{	NextStep(1, 1)
								}
						}
				}
			else	{	if	B(not 8282=no)
					then	{	NextStep(1, 1, 8282)
						}
					else	{	NextStep(1, 1)
						}
				}
		};
	if	B(not 8282=no)
	then	{	Sent(8282, 3, open, Clock)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(6)
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 1, 1)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 8282=no) then NextStep(1, 1, 8282) else NextStep(1, 1) else if B(not 8282=no) then NextStep(1, 1, 8282) else NextStep(1, 1); if B(not 8282=no) then Sent(8282, 3, open, Clock), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(6)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 1, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 8282=no)
							then	{	NextStep(1, 1, 8282)
								}
							else	{	NextStep(1, 1)
								}
						}
				}
			else	{	if	B(not 8282=no)
					then	{	NextStep(1, 1, 8282)
						}
					else	{	NextStep(1, 1)
						}
				}
		};
	if	B(not 8282=no)
	then	{	Sent(8282, 3, open, Clock)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(6)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(tile(Color1, 1, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 8282=no)
							then	{	NextStep(1, 1, 8282)
								}
							else	{	NextStep(1, 1)
								}
						}
				}
			else	{	if	B(not 8282=no)
					then	{	NextStep(1, 1, 8282)
						}
					else	{	NextStep(1, 1)
						}
				}
		};
	if	B(not 8282=no)
	then	{	Sent(8282, 3, open, 5)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(Color1, 1, 1)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 8282=no) then NextStep(1, 1, 8282) else NextStep(1, 1) else if B(not 8282=no) then NextStep(1, 1, 8282) else NextStep(1, 1); if B(not 8282=no) then Sent(8282, 3, open, 5), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(Color1, 1, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 8282=no)
							then	{	NextStep(1, 1, 8282)
								}
							else	{	NextStep(1, 1)
								}
						}
				}
			else	{	if	B(not 8282=no)
					then	{	NextStep(1, 1, 8282)
						}
					else	{	NextStep(1, 1)
						}
				}
		};
	if	B(not 8282=no)
	then	{	Sent(8282, 3, open, 5)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 8282=no)
					then	{	NextStep(1, 1, 8282)
						}
					else	{	NextStep(1, 1)
						}
				}
		}
	else	{	if	B(not 8282=no)
			then	{	NextStep(1, 1, 8282)
				}
			else	{	NextStep(1, 1)
				}
		};
	if	B(not 8282=no)
	then	{	Sent(8282, 3, open, 5)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(1000>V2) then if B(not 8282=no) then NextStep(1, 1, 8282) else NextStep(1, 1) else if B(not 8282=no) then NextStep(1, 1, 8282) else NextStep(1, 1); if B(not 8282=no) then Sent(8282, 3, open, 5), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 8282=no)
					then	{	NextStep(1, 1, 8282)
						}
					else	{	NextStep(1, 1)
						}
				}
		}
	else	{	if	B(not 8282=no)
			then	{	NextStep(1, 1, 8282)
				}
			else	{	NextStep(1, 1)
				}
		};
	if	B(not 8282=no)
	then	{	Sent(8282, 3, open, 5)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(not 8282=no)
	then	{	NextStep(1, 1, 8282)
		}
	else	{	NextStep(1, 1)
		};
	if	B(not 8282=no)
	then	{	Sent(8282, 3, open, 5)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 8282=no) then NextStep(1, 1, 8282) else NextStep(1, 1); if B(not 8282=no) then Sent(8282, 3, open, 5), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 8282=no)
	then	{	NextStep(1, 1, 8282)
		}
	else	{	NextStep(1, 1)
		};
	if	B(not 8282=no)
	then	{	Sent(8282, 3, open, 5)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	NextStep(1, 1, 8282);
	if	B(not 8282=no)
	then	{	Sent(8282, 3, open, 5)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NextStep(1, 1, 8282); if B(not 8282=no) then Sent(8282, 3, open, 5), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NextStep(1, 1, 8282);
	if	B(not 8282=no)
	then	{	Sent(8282, 3, open, 5)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(not 8282=no)
	then	{	Sent(8282, 3, open, 5)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 8282=no) then Sent(8282, 3, open, 5), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 8282=no)
	then	{	Sent(8282, 3, open, 5)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	Sent(8282, 3, open, 5)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[Sent(8282, 3, open, 5), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	Sent(8282, 3, open, 5)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(6>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(6>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(6>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(6>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(6>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


a40[CTAH] paths: 1000
Need to wait 2 more seconds
[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(6>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(6>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(6>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(6>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(6>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


a40[CTAH] path: 0
a40[CTAH] path: Path: [6][1] [6][2] [6][3] [5][3] [5][4] [4][4] [3][4]

a40[CTAH] moveStepToGoalTest nopoints: []
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:6,C:2)
a40[CTAH] moveStepToGoalTest sent proposal for: [6,2,0,8460]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
org notification: Proposal [id=8460, agent=a40, agent2=a10, clock=6, time=2015-05-27 15:15:29.899]
Received a proposal creating event
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
Event processed @ctenv(functionToList(proposal(proposal, 0, 8282, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(proposal(proposal, 3, 8460, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 8460=no)
							then	{	NextStep(6, 2, 8460)
								}
							else	{	NextStep(6, 2)
								}
						}
				}
			else	{	if	B(not 8460=no)
					then	{	NextStep(6, 2, 8460)
						}
					else	{	NextStep(6, 2)
						}
				}
		};
	if	B(not 8460=no)
	then	{	Sent(8460, 0, open, Clock)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 0, 8282, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 6, 2)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 8460=no) then NextStep(6, 2, 8460) else NextStep(6, 2) else if B(not 8460=no) then NextStep(6, 2, 8460) else NextStep(6, 2); if B(not 8460=no) then Sent(8460, 0, open, Clock), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(proposal(proposal, 0, 8282, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 8460=no)
							then	{	NextStep(6, 2, 8460)
								}
							else	{	NextStep(6, 2)
								}
						}
				}
			else	{	if	B(not 8460=no)
					then	{	NextStep(6, 2, 8460)
						}
					else	{	NextStep(6, 2)
						}
				}
		};
	if	B(not 8460=no)
	then	{	Sent(8460, 0, open, Clock)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 0, 8282, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 3, 8460, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(proposal(proposal, 3, 8460, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 3, 8460, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@40cef164
[CTAH] The created APLList : [proposal,0,8282,open]
[CTAH] Array of Terms: [Lapapl.data.Term;@76099057
[CTAH] The created APLList : [proposal,3,8460,open]
[Planbase]:{	if	B(tile(Color1, 6, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 8460=no)
							then	{	NextStep(6, 2, 8460)
								}
							else	{	NextStep(6, 2)
								}
						}
				}
			else	{	if	B(not 8460=no)
					then	{	NextStep(6, 2, 8460)
						}
					else	{	NextStep(6, 2)
						}
				}
		};
	if	B(not 8460=no)
	then	{	Sent(8460, 0, open, 6)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,8282,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,0,8282,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,0,8282,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(tile(Color1, 6, 2)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 8460=no) then NextStep(6, 2, 8460) else NextStep(6, 2) else if B(not 8460=no) then NextStep(6, 2, 8460) else NextStep(6, 2); if B(not 8460=no) then Sent(8460, 0, open, 6), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,0,8282,open])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([proposal,0,8282,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,0,8282,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(tile(Color1, 6, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 8460=no)
							then	{	NextStep(6, 2, 8460)
								}
							else	{	NextStep(6, 2)
								}
						}
				}
			else	{	if	B(not 8460=no)
					then	{	NextStep(6, 2, 8460)
						}
					else	{	NextStep(6, 2)
						}
				}
		};
	if	B(not 8460=no)
	then	{	Sent(8460, 0, open, 6)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,8282,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,0,8282,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,0,8282,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,8460,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,3,8460,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,3,8460,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,3,8460,open])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([proposal,3,8460,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,3,8460,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,8460,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,3,8460,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,3,8460,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 8460=no)
					then	{	NextStep(6, 2, 8460)
						}
					else	{	NextStep(6, 2)
						}
				}
		}
	else	{	if	B(not 8460=no)
			then	{	NextStep(6, 2, 8460)
				}
			else	{	NextStep(6, 2)
				}
		};
	if	B(not 8460=no)
	then	{	Sent(8460, 0, open, 6)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,8282,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,8282,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(1000>V2) then if B(not 8460=no) then NextStep(6, 2, 8460) else NextStep(6, 2) else if B(not 8460=no) then NextStep(6, 2, 8460) else NextStep(6, 2); if B(not 8460=no) then Sent(8460, 0, open, 6), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,0,8282,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,0,8282,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 8460=no)
					then	{	NextStep(6, 2, 8460)
						}
					else	{	NextStep(6, 2)
						}
				}
		}
	else	{	if	B(not 8460=no)
			then	{	NextStep(6, 2, 8460)
				}
			else	{	NextStep(6, 2)
				}
		};
	if	B(not 8460=no)
	then	{	Sent(8460, 0, open, 6)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,8282,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,8282,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,8460,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,8460,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(6>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,3,8460,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,3,8460,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,8460,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,8460,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(not 8460=no)
	then	{	NextStep(6, 2, 8460)
		}
	else	{	NextStep(6, 2)
		};
	if	B(not 8460=no)
	then	{	Sent(8460, 0, open, 6)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,8282,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B(not 8460=no) then NextStep(6, 2, 8460) else NextStep(6, 2); if B(not 8460=no) then Sent(8460, 0, open, 6), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,0,8282,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(not 8460=no)
	then	{	NextStep(6, 2, 8460)
		}
	else	{	NextStep(6, 2)
		};
	if	B(not 8460=no)
	then	{	Sent(8460, 0, open, 6)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,8282,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,8460,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,3,8460,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,8460,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	NextStep(6, 2, 8460);
	if	B(not 8460=no)
	then	{	Sent(8460, 0, open, 6)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 8282, open)
		}
}


[new scheduled]:[NextStep(6, 2, 8460); if B(not 8460=no) then Sent(8460, 0, open, 6), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(proposal=proposal) then ReceivedProposal(0, 8282, open)]
[After]:{	NextStep(6, 2, 8460);
	if	B(not 8460=no)
	then	{	Sent(8460, 0, open, 6)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 8282, open)
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 8460, open)
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(proposal=proposal) then ReceivedProposal(3, 8460, open)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 8460, open)
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(not 8460=no)
	then	{	Sent(8460, 0, open, 6)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(0, 8282, open)
}


[new scheduled]:[if B(not 8460=no) then Sent(8460, 0, open, 6), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedProposal(0, 8282, open)]
[After]:{	if	B(not 8460=no)
	then	{	Sent(8460, 0, open, 6)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(0, 8282, open)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(3, 8460, open)
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedProposal(3, 8460, open)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(3, 8460, open)
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	Sent(8460, 0, open, 6)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[getScoreAfterExchange(3, 8282); if G(at(A, B, C)) then skip else makeResponse(8282, accept), Sent(8460, 0, open, 6), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	getScoreAfterExchange(3, 8282);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(8282, accept)
		}
},
{	Sent(8460, 0, open, 6)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[getScoreAfterExchange(0, 8460); if G(at(A, B, C)) then skip else makeResponse(8460, accept), if B(6>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	getScoreAfterExchange(0, 8460);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(8460, accept)
		}
},
{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	GetScoreAfterExchange(8282, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(8282, accept)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), GetScoreAfterExchange(8282, yes); if G(at(A, B, C)) then skip else makeResponse(8282, accept), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	GetScoreAfterExchange(8282, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(8282, accept)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	GetScoreAfterExchange(8460, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(8460, accept)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), GetScoreAfterExchange(8460, yes); if G(at(A, B, C)) then skip else makeResponse(8460, accept), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	GetScoreAfterExchange(8460, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(8460, accept)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(8282, accept)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), if G(at(A, B, C)) then skip else makeResponse(8282, accept), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(8282, accept)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(8460, accept)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), if G(at(A, B, C)) then skip else makeResponse(8460, accept), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(8460, accept)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	skip
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), skip, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	skip
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	skip
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), skip, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	skip
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(6>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(6>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(6>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(6>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(6>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(6>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(6>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(6>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(6>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(6>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(6>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(6>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=7, time=2015-05-27 15:15:32.789]
org notification: Time [clock=7, time=2015-05-27 15:15:32.789]
object notification: Time [clock=7, time=2015-05-27 15:15:32.789]
object notification: Time [clock=7, time=2015-05-27 15:15:32.789]
[Planbase]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(6>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(6>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


Event processed UpdateClock(7)
[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(7)
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(7)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(7)
}


Event processed UpdateClock(7)
Event processed UpdateClock(7)
[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(7)
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(7)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(7)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	UpdateClock(7)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10), UpdateClock(7)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	UpdateClock(7)
}


[Planbase]:{	if	B(6>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(6>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(6>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(6>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(6>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(7>1+5) then {NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(7>1+5)
	then	{	NoNextStep(6, 5, 3546);
			ReceivedMessage(noresponse, 3546)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NoNextStep(6, 5, 3546);
	ReceivedMessage(noresponse, 3546);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[NoNextStep(6, 5, 3546); ReceivedMessage(noresponse, 3546); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	NoNextStep(6, 5, 3546);
	ReceivedMessage(noresponse, 3546);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	ReceivedMessage(noresponse, 3546);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[ReceivedMessage(noresponse, 3546); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	ReceivedMessage(noresponse, 3546);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0) else if B(tile(neco, X, Y)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


a30[CTAH] going goal: 4,3 color: neco
[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [6][6] [6][5] [5][5] [4][5] [4][4] [4][3]

a30[CTAH] moveStepToGoalTest nopoints: []
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: brown
a30[CTAH] found a chip....: (R:6,C:5)
a30[CTAH] moveStepToGoalTest sent proposal for: [6,5,1,1160]
org notification: Proposal [id=1160, agent=a30, agent2=a20, clock=7, time=2015-05-27 15:15:40.066]
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 5))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 1160=no)
							then	{	NextStep(6, 5, 1160)
								}
							else	{	NextStep(6, 5)
								}
						}
				}
			else	{	if	B(not 1160=no)
					then	{	NextStep(6, 5, 1160)
						}
					else	{	NextStep(6, 5)
						}
				}
		};
	if	B(not 1160=no)
	then	{	Sent(1160, 1, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 6, 5)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not 1160=no) then NextStep(6, 5, 1160) else NextStep(6, 5) else if B(not 1160=no) then NextStep(6, 5, 1160) else NextStep(6, 5); if B(not 1160=no) then Sent(1160, 1, open, Clock); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 5))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 1160=no)
							then	{	NextStep(6, 5, 1160)
								}
							else	{	NextStep(6, 5)
								}
						}
				}
			else	{	if	B(not 1160=no)
					then	{	NextStep(6, 5, 1160)
						}
					else	{	NextStep(6, 5)
						}
				}
		};
	if	B(not 1160=no)
	then	{	Sent(1160, 1, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(tile(Color1, 6, 5))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 1160=no)
							then	{	NextStep(6, 5, 1160)
								}
							else	{	NextStep(6, 5)
								}
						}
				}
			else	{	if	B(not 1160=no)
					then	{	NextStep(6, 5, 1160)
						}
					else	{	NextStep(6, 5)
						}
				}
		};
	if	B(not 1160=no)
	then	{	Sent(1160, 1, open, 7)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(tile(Color1, 6, 5)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not 1160=no) then NextStep(6, 5, 1160) else NextStep(6, 5) else if B(not 1160=no) then NextStep(6, 5, 1160) else NextStep(6, 5); if B(not 1160=no) then Sent(1160, 1, open, 7); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(tile(Color1, 6, 5))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 1160=no)
							then	{	NextStep(6, 5, 1160)
								}
							else	{	NextStep(6, 5)
								}
						}
				}
			else	{	if	B(not 1160=no)
					then	{	NextStep(6, 5, 1160)
						}
					else	{	NextStep(6, 5)
						}
				}
		};
	if	B(not 1160=no)
	then	{	Sent(1160, 1, open, 7)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(brown, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not 1160=no)
					then	{	NextStep(6, 5, 1160)
						}
					else	{	NextStep(6, 5)
						}
				}
		}
	else	{	if	B(not 1160=no)
			then	{	NextStep(6, 5, 1160)
				}
			else	{	NextStep(6, 5)
				}
		};
	if	B(not 1160=no)
	then	{	Sent(1160, 1, open, 7)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(prohibition(useColor(brown, V2))) then if B(700>V2) then if B(not 1160=no) then NextStep(6, 5, 1160) else NextStep(6, 5) else if B(not 1160=no) then NextStep(6, 5, 1160) else NextStep(6, 5); if B(not 1160=no) then Sent(1160, 1, open, 7); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(prohibition(useColor(brown, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not 1160=no)
					then	{	NextStep(6, 5, 1160)
						}
					else	{	NextStep(6, 5)
						}
				}
		}
	else	{	if	B(not 1160=no)
			then	{	NextStep(6, 5, 1160)
				}
			else	{	NextStep(6, 5)
				}
		};
	if	B(not 1160=no)
	then	{	Sent(1160, 1, open, 7)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 1160=no)
	then	{	NextStep(6, 5, 1160)
		}
	else	{	NextStep(6, 5)
		};
	if	B(not 1160=no)
	then	{	Sent(1160, 1, open, 7)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(not 1160=no) then NextStep(6, 5, 1160) else NextStep(6, 5); if B(not 1160=no) then Sent(1160, 1, open, 7); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(not 1160=no)
	then	{	NextStep(6, 5, 1160)
		}
	else	{	NextStep(6, 5)
		};
	if	B(not 1160=no)
	then	{	Sent(1160, 1, open, 7)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NextStep(6, 5, 1160);
	if	B(not 1160=no)
	then	{	Sent(1160, 1, open, 7)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[NextStep(6, 5, 1160); if B(not 1160=no) then Sent(1160, 1, open, 7); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	NextStep(6, 5, 1160);
	if	B(not 1160=no)
	then	{	Sent(1160, 1, open, 7)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 1160=no)
	then	{	Sent(1160, 1, open, 7)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(not 1160=no) then Sent(1160, 1, open, 7); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(not 1160=no)
	then	{	Sent(1160, 1, open, 7)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	Sent(1160, 1, open, 7);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[Sent(1160, 1, open, 7); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	Sent(1160, 1, open, 7);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(7>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(7>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(7>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(7>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(7>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(7>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(7>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(7>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=8, time=2015-05-27 15:15:42.791]
org notification: Time [clock=8, time=2015-05-27 15:15:42.791]
object notification: Time [clock=8, time=2015-05-27 15:15:42.791]
object notification: Time [clock=8, time=2015-05-27 15:15:42.791]
Event processed UpdateClock(8)
Event processed UpdateClock(8)
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(8)
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(8)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(8)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	UpdateClock(8)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10), UpdateClock(8)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	UpdateClock(8)
}


Event processed UpdateClock(8)
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(8)
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(8)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(8)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(7>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(7>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=9, time=2015-05-27 15:15:52.794]
object notification: Time [clock=9, time=2015-05-27 15:15:52.794]
object notification: Time [clock=9, time=2015-05-27 15:15:52.794]
org notification: Time [clock=9, time=2015-05-27 15:15:52.794]
Event processed UpdateClock(9)
Event processed UpdateClock(9)
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(9)
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(9)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(9)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	UpdateClock(9)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10), UpdateClock(9)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	UpdateClock(9)
}


Event processed UpdateClock(9)
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(9)
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(9)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(9)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(8>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(8>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(9>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=1160, response=accepted, clock=9, time=2015-05-27 15:15:53.256]
Event processed @ctenv(functionToList(message(response, 1160, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	@ctenv(functionToList(message(response, 1160, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10), @ctenv(functionToList(message(response, 1160, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	@ctenv(functionToList(message(response, 1160, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@69aab5ed
[CTAH] The created APLList : [response,1160,accept]
[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	if	B([actionresult([response,1160,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,1160,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,1160,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10), if B([actionresult([response,1160,accept])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([response,1160,accept])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([response,1160,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	if	B([actionresult([response,1160,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,1160,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,1160,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 1160)
		}
}


[new scheduled]:[if B(9>7+5) then {NoNextStep(6, 5, 1160); ReceivedMessage(noresponse, 1160)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10), if B(response=response) then ReceivedMessage(accept, 1160)]
[After]:{	if	B(9>7+5)
	then	{	NoNextStep(6, 5, 1160);
			ReceivedMessage(noresponse, 1160)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 1160)
		}
}


[Planbase]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	ReceivedMessage(accept, 1160)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10), ReceivedMessage(accept, 1160)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	ReceivedMessage(accept, 1160)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 6, 5),L2,0);
	if	B(L2=[actionresult([6,5])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 5, Clock)
		};
	NoNextStep(6, 5, 1160);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 6, 5),L2,0); if B(L2=[actionresult([6,5])]) then {B(clock(Clock)); UpdatePosition(6, 5, Clock)}; NoNextStep(6, 5, 1160); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	@ctenv(moveStepToGoal(neco, 6, 5),L2,0);
	if	B(L2=[actionresult([6,5])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 5, Clock)
		};
	NoNextStep(6, 5, 1160);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


a30[CTAH] moveStepToGoal returns: false
org notification: Position [subject=a30, id=null, cell=Cell [x=6, y=5], time=2015-05-27 15:15:53.896, clock=9]
object notification: Position [subject=a30, id=null, cell=Cell [x=6, y=5], time=2015-05-27 15:15:53.896, clock=9]
[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed UpdatePosition(6, 5, 9)
[Planbase]:{	NoNextStep(6, 5, 1160);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	UpdatePosition(6, 5, 9)
}


[new scheduled]:[NoNextStep(6, 5, 1160); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10), UpdatePosition(6, 5, 9)]
[After]:{	NoNextStep(6, 5, 1160);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
},
{	UpdatePosition(6, 5, 9)
}


[Planbase]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:31:57 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0) else if B(tile(white, X, Y)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(white, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(white, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(white, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] going goal: 4,3 color: white
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [6][5] [6][4] [6][3] [5][3] [4][3]

a30[CTAH] moveStepToGoalTest nopoints: []
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:6,C:4)
a30[CTAH] moveStepToGoalTest sent proposal for: [6,4,0,1365]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
org notification: Proposal [id=1365, agent=a30, agent2=a10, clock=9, time=2015-05-27 15:15:59.96]
Received a proposal creating event
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
Event processed @ctenv(functionToList(proposal(proposal, 2, 1365, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 4))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 1365=no)
							then	{	NextStep(6, 4, 1365)
								}
							else	{	NextStep(6, 4)
								}
						}
				}
			else	{	if	B(not 1365=no)
					then	{	NextStep(6, 4, 1365)
						}
					else	{	NextStep(6, 4)
						}
				}
		};
	if	B(not 1365=no)
	then	{	Sent(1365, 0, open, Clock)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 6, 4)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 1365=no) then NextStep(6, 4, 1365) else NextStep(6, 4) else if B(not 1365=no) then NextStep(6, 4, 1365) else NextStep(6, 4); if B(not 1365=no) then Sent(1365, 0, open, Clock), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 4))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 1365=no)
							then	{	NextStep(6, 4, 1365)
								}
							else	{	NextStep(6, 4)
								}
						}
				}
			else	{	if	B(not 1365=no)
					then	{	NextStep(6, 4, 1365)
						}
					else	{	NextStep(6, 4)
						}
				}
		};
	if	B(not 1365=no)
	then	{	Sent(1365, 0, open, Clock)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 2, 1365, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[if B(9>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(proposal(proposal, 2, 1365, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 2, 1365, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@466b5de0
[CTAH] The created APLList : [proposal,2,1365,open]
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(tile(Color1, 6, 4))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 1365=no)
							then	{	NextStep(6, 4, 1365)
								}
							else	{	NextStep(6, 4)
								}
						}
				}
			else	{	if	B(not 1365=no)
					then	{	NextStep(6, 4, 1365)
						}
					else	{	NextStep(6, 4)
						}
				}
		};
	if	B(not 1365=no)
	then	{	Sent(1365, 0, open, 9)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(Color1, 6, 4)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 1365=no) then NextStep(6, 4, 1365) else NextStep(6, 4) else if B(not 1365=no) then NextStep(6, 4, 1365) else NextStep(6, 4); if B(not 1365=no) then Sent(1365, 0, open, 9), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(Color1, 6, 4))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 1365=no)
							then	{	NextStep(6, 4, 1365)
								}
							else	{	NextStep(6, 4)
								}
						}
				}
			else	{	if	B(not 1365=no)
					then	{	NextStep(6, 4, 1365)
						}
					else	{	NextStep(6, 4)
						}
				}
		};
	if	B(not 1365=no)
	then	{	Sent(1365, 0, open, 9)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,1365,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,2,1365,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,2,1365,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,2,1365,open])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([proposal,2,1365,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,2,1365,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,1365,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,2,1365,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,2,1365,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 1365=no)
					then	{	NextStep(6, 4, 1365)
						}
					else	{	NextStep(6, 4)
						}
				}
		}
	else	{	if	B(not 1365=no)
			then	{	NextStep(6, 4, 1365)
				}
			else	{	NextStep(6, 4)
				}
		};
	if	B(not 1365=no)
	then	{	Sent(1365, 0, open, 9)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(1000>V2) then if B(not 1365=no) then NextStep(6, 4, 1365) else NextStep(6, 4) else if B(not 1365=no) then NextStep(6, 4, 1365) else NextStep(6, 4); if B(not 1365=no) then Sent(1365, 0, open, 9), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 1365=no)
					then	{	NextStep(6, 4, 1365)
						}
					else	{	NextStep(6, 4)
						}
				}
		}
	else	{	if	B(not 1365=no)
			then	{	NextStep(6, 4, 1365)
				}
			else	{	NextStep(6, 4)
				}
		};
	if	B(not 1365=no)
	then	{	Sent(1365, 0, open, 9)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,1365,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,1365,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,2,1365,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,2,1365,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,1365,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,1365,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 1365=no)
	then	{	NextStep(6, 4, 1365)
		}
	else	{	NextStep(6, 4)
		};
	if	B(not 1365=no)
	then	{	Sent(1365, 0, open, 9)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 1365=no) then NextStep(6, 4, 1365) else NextStep(6, 4); if B(not 1365=no) then Sent(1365, 0, open, 9), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 1365=no)
	then	{	NextStep(6, 4, 1365)
		}
	else	{	NextStep(6, 4)
		};
	if	B(not 1365=no)
	then	{	Sent(1365, 0, open, 9)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,1365,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,2,1365,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,1365,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NextStep(6, 4, 1365);
	if	B(not 1365=no)
	then	{	Sent(1365, 0, open, 9)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NextStep(6, 4, 1365); if B(not 1365=no) then Sent(1365, 0, open, 9), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NextStep(6, 4, 1365);
	if	B(not 1365=no)
	then	{	Sent(1365, 0, open, 9)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 1365, open)
		}
}


[new scheduled]:[if B(9>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(proposal=proposal) then ReceivedProposal(2, 1365, open)]
[After]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 1365, open)
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 1365=no)
	then	{	Sent(1365, 0, open, 9)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 1365=no) then Sent(1365, 0, open, 9), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 1365=no)
	then	{	Sent(1365, 0, open, 9)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(2, 1365, open)
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedProposal(2, 1365, open)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(2, 1365, open)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	Sent(1365, 0, open, 9)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[Sent(1365, 0, open, 9), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	Sent(1365, 0, open, 9)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[getScoreAfterExchange(0, 1365); if G(at(A, B, C)) then skip else makeResponse(1365, accept), if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	getScoreAfterExchange(0, 1365);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(1365, accept)
		}
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	GetScoreAfterExchange(1365, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(1365, accept)
		}
},
{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[GetScoreAfterExchange(1365, yes); if G(at(A, B, C)) then skip else makeResponse(1365, accept), findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	GetScoreAfterExchange(1365, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(1365, accept)
		}
},
{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(1365, accept)
		}
},
{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(A, B, C)) then skip else makeResponse(1365, accept), if B(9>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(1365, accept)
		}
},
{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	skip
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), skip, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	skip
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>9+5) then {NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>9+5) then {NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>9+5) then {NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>9+5) then {NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(9>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(9>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=10, time=2015-05-27 15:16:02.796]
org notification: Time [clock=10, time=2015-05-27 15:16:02.796]
object notification: Time [clock=10, time=2015-05-27 15:16:02.796]
object notification: Time [clock=10, time=2015-05-27 15:16:02.796]
Event processed UpdateClock(10)
Event processed UpdateClock(10)
Event processed UpdateClock(10)
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(10)
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(10)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(10)
}


[Planbase]:{	if	B(9>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(10)
}


[new scheduled]:[if B(9>9+5) then {NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(10)]
[After]:{	if	B(9>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(10)
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(10)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(10)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>9+5) then {NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>9+5) then {NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>9+5) then {NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>9+5) then {NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Planbase]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[if B(10>9+5) then {NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@4b5043e5
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@171eca20
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@2c0641fc
[CTAH] The created APLList : [phasechange]
[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(10>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(10>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedEvent(phasechange)
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedEvent(phasechange)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedEvent(phasechange)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedEvent(phasechange)
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedEvent(phasechange)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedEvent(phasechange)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedEvent(phasechange)
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedEvent(phasechange)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedEvent(phasechange)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[update, if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	update
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[update, if B(10>9+5) then {NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	update
},
{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[update, if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	update
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated, findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated, findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated, if B(10>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), @ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated, if B(10>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), B(clock(Clock)); if B(event(phasechange)) then Updated, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>9+5) then {NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365)}, B(clock(Clock)); if B(event(phasechange)) then Updated, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), B(clock(Clock)); if B(event(phasechange)) then Updated, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), if B(event(phasechange)) then Updated, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), if B(event(phasechange)) then Updated, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), if B(event(phasechange)) then Updated, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	Updated
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, Updated, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	Updated
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	Updated
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), Updated, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	Updated
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	Updated
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, Updated, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	Updated
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>9+5) then {NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>9+5) then {NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>9+5) then {NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>9+5) then {NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>9+5) then {NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>9+5) then {NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>9+5) then {NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>9+5) then {NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>9+5) then {NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>9+5) then {NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=11, time=2015-05-27 15:16:12.798]
object notification: Time [clock=11, time=2015-05-27 15:16:12.798]
org notification: Time [clock=11, time=2015-05-27 15:16:12.798]
object notification: Time [clock=11, time=2015-05-27 15:16:12.798]
Event processed UpdateClock(11)
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(11)
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(11)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(11)
}


Event processed UpdateClock(11)
[Planbase]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(11)
}


[new scheduled]:[if B(10>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(11)]
[After]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(11)
}


Event processed UpdateClock(11)
object notification: Time [clock=12, time=2015-05-27 15:16:22.8]
object notification: Time [clock=12, time=2015-05-27 15:16:22.8]
org notification: Time [clock=12, time=2015-05-27 15:16:22.8]
object notification: Time [clock=12, time=2015-05-27 15:16:22.8]
object notification: Time [clock=13, time=2015-05-27 15:16:32.803]
object notification: Time [clock=13, time=2015-05-27 15:16:32.803]
org notification: Time [clock=13, time=2015-05-27 15:16:32.803]
object notification: Time [clock=13, time=2015-05-27 15:16:32.803]
Event processed UpdateClock(12)
Event processed UpdateClock(13)
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(11)
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(11)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(11)
}


[Planbase]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(12)
},
{	UpdateClock(13)
}


[new scheduled]:[if B(10>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(12), UpdateClock(13)]
[After]:{	if	B(10>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(12)
},
{	UpdateClock(13)
}


Event processed UpdateClock(12)
Event processed UpdateClock(13)
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(12)
},
{	UpdateClock(13)
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(12), UpdateClock(13)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(12)
},
{	UpdateClock(13)
}


Event processed UpdateClock(12)
Event processed UpdateClock(13)
[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(12)
},
{	UpdateClock(13)
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(12), UpdateClock(13)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(12)
},
{	UpdateClock(13)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>9+5) then {NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>6+5) then {NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>6+5)
	then	{	NoNextStep(6, 2, 8460);
			ReceivedMessage(noresponse, 8460)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=14, time=2015-05-27 15:16:42.805]
org notification: Time [clock=14, time=2015-05-27 15:16:42.805]
object notification: Time [clock=14, time=2015-05-27 15:16:42.805]
object notification: Time [clock=14, time=2015-05-27 15:16:42.805]
Event processed UpdateClock(14)
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(14)
}


[new scheduled]:[if B(13>5+5) then {NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(14)]
[After]:{	if	B(13>5+5)
	then	{	NoNextStep(1, 1, 8282);
			ReceivedMessage(noresponse, 8282)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(14)
}


Event processed UpdateClock(14)
[Planbase]:{	NoNextStep(6, 2, 8460);
	ReceivedMessage(noresponse, 8460)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(14)
}


[new scheduled]:[NoNextStep(6, 2, 8460); ReceivedMessage(noresponse, 8460), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(14)]
[After]:{	NoNextStep(6, 2, 8460);
	ReceivedMessage(noresponse, 8460)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(14)
}


Event processed UpdateClock(14)
[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(14)
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(14)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(14)
}


[Planbase]:{	NoNextStep(1, 1, 8282);
	ReceivedMessage(noresponse, 8282)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NoNextStep(1, 1, 8282); ReceivedMessage(noresponse, 8282), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NoNextStep(1, 1, 8282);
	ReceivedMessage(noresponse, 8282)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	ReceivedMessage(noresponse, 8460)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[ReceivedMessage(noresponse, 8460), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	ReceivedMessage(noresponse, 8460)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>9+5) then {NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	ReceivedMessage(noresponse, 8282)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[ReceivedMessage(noresponse, 8282), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	ReceivedMessage(noresponse, 8282)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=15, time=2015-05-27 15:16:52.808]
org notification: Time [clock=15, time=2015-05-27 15:16:52.808]
object notification: Time [clock=15, time=2015-05-27 15:16:52.808]
object notification: Time [clock=15, time=2015-05-27 15:16:52.808]
Event processed UpdateClock(15)
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(15)
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(15)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(15)
}


Event processed UpdateClock(15)
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(15)
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(15)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(15)
}


Event processed UpdateClock(15)
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(15)
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(15)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(15)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=16, time=2015-05-27 15:17:02.81]
object notification: Time [clock=16, time=2015-05-27 15:17:02.81]
object notification: Time [clock=16, time=2015-05-27 15:17:02.81]
org notification: Time [clock=16, time=2015-05-27 15:17:02.81]
Event processed UpdateClock(16)
[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(16)
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(16)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(16)
}


Event processed UpdateClock(16)
Event processed UpdateClock(16)
[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(16)
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0) else if B(tile(white, X, Y)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(16)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(16)
}


object notification: Time [clock=17, time=2015-05-27 15:17:12.813]
object notification: Time [clock=17, time=2015-05-27 15:17:12.813]
object notification: Time [clock=17, time=2015-05-27 15:17:12.813]
org notification: Time [clock=17, time=2015-05-27 15:17:12.813]
Event processed UpdateClock(17)
[Planbase]:{	if	B(15>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(16)
}


[new scheduled]:[if B(15>9+5) then {NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(16)]
[After]:{	if	B(15>9+5)
	then	{	NoNextStep(6, 4, 1365);
			ReceivedMessage(noresponse, 1365)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(16)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(17)
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0) else if B(tile(white, X, Y)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(17)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(17)
}


Event processed UpdateClock(17)
[Planbase]:{	@ctenv(moveStepToGoalTest(white, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(17)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(white, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(17)]
[After]:{	@ctenv(moveStepToGoalTest(white, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(17)
}


Event processed UpdateClock(17)
[Planbase]:{	NoNextStep(6, 4, 1365);
	ReceivedMessage(noresponse, 1365)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(17)
}


[new scheduled]:[NoNextStep(6, 4, 1365); ReceivedMessage(noresponse, 1365), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(17)]
[After]:{	NoNextStep(6, 4, 1365);
	ReceivedMessage(noresponse, 1365)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(17)
}


a40[CTAH] going goal: 3,4 color: white
[Planbase]:{	@ctenv(moveStepToGoalTest(white, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(white, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(white, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] going goal: 3,2 color: white
[Planbase]:{	ReceivedMessage(noresponse, 1365)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[ReceivedMessage(noresponse, 1365), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	ReceivedMessage(noresponse, 1365)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0) else if B(tile(white, X, Y)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(white, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(white, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(white, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] going goal: 4,3 color: white
a40[CTAH] paths: 1000
a40[CTAH] path: 0
a40[CTAH] path: Path: [6][1] [6][2] [6][3] [5][3] [5][4] [4][4] [3][4]

a40[CTAH] moveStepToGoalTest nopoints: []
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:6,C:2)
a40[CTAH] moveStepToGoalTest sent proposal for: [6,2,0,1385]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=1385, agent=a40, agent2=a10, clock=17, time=2015-05-27 15:17:19.498]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 1385=no)
							then	{	NextStep(6, 2, 1385)
								}
							else	{	NextStep(6, 2)
								}
						}
				}
			else	{	if	B(not 1385=no)
					then	{	NextStep(6, 2, 1385)
						}
					else	{	NextStep(6, 2)
						}
				}
		};
	if	B(not 1385=no)
	then	{	Sent(1385, 0, open, Clock)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 6, 2)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 1385=no) then NextStep(6, 2, 1385) else NextStep(6, 2) else if B(not 1385=no) then NextStep(6, 2, 1385) else NextStep(6, 2); if B(not 1385=no) then Sent(1385, 0, open, Clock), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 1385=no)
							then	{	NextStep(6, 2, 1385)
								}
							else	{	NextStep(6, 2)
								}
						}
				}
			else	{	if	B(not 1385=no)
					then	{	NextStep(6, 2, 1385)
						}
					else	{	NextStep(6, 2)
						}
				}
		};
	if	B(not 1385=no)
	then	{	Sent(1385, 0, open, Clock)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(tile(Color1, 6, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 1385=no)
							then	{	NextStep(6, 2, 1385)
								}
							else	{	NextStep(6, 2)
								}
						}
				}
			else	{	if	B(not 1385=no)
					then	{	NextStep(6, 2, 1385)
						}
					else	{	NextStep(6, 2)
						}
				}
		};
	if	B(not 1385=no)
	then	{	Sent(1385, 0, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(Color1, 6, 2)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 1385=no) then NextStep(6, 2, 1385) else NextStep(6, 2) else if B(not 1385=no) then NextStep(6, 2, 1385) else NextStep(6, 2); if B(not 1385=no) then Sent(1385, 0, open, 17), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(Color1, 6, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 1385=no)
							then	{	NextStep(6, 2, 1385)
								}
							else	{	NextStep(6, 2)
								}
						}
				}
			else	{	if	B(not 1385=no)
					then	{	NextStep(6, 2, 1385)
						}
					else	{	NextStep(6, 2)
						}
				}
		};
	if	B(not 1385=no)
	then	{	Sent(1385, 0, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 1385=no)
					then	{	NextStep(6, 2, 1385)
						}
					else	{	NextStep(6, 2)
						}
				}
		}
	else	{	if	B(not 1385=no)
			then	{	NextStep(6, 2, 1385)
				}
			else	{	NextStep(6, 2)
				}
		};
	if	B(not 1385=no)
	then	{	Sent(1385, 0, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(1000>V2) then if B(not 1385=no) then NextStep(6, 2, 1385) else NextStep(6, 2) else if B(not 1385=no) then NextStep(6, 2, 1385) else NextStep(6, 2); if B(not 1385=no) then Sent(1385, 0, open, 17), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 1385=no)
					then	{	NextStep(6, 2, 1385)
						}
					else	{	NextStep(6, 2)
						}
				}
		}
	else	{	if	B(not 1385=no)
			then	{	NextStep(6, 2, 1385)
				}
			else	{	NextStep(6, 2)
				}
		};
	if	B(not 1385=no)
	then	{	Sent(1385, 0, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 1385=no)
	then	{	NextStep(6, 2, 1385)
		}
	else	{	NextStep(6, 2)
		};
	if	B(not 1385=no)
	then	{	Sent(1385, 0, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 1385=no) then NextStep(6, 2, 1385) else NextStep(6, 2); if B(not 1385=no) then Sent(1385, 0, open, 17), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 1385=no)
	then	{	NextStep(6, 2, 1385)
		}
	else	{	NextStep(6, 2)
		};
	if	B(not 1385=no)
	then	{	Sent(1385, 0, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NextStep(6, 2, 1385);
	if	B(not 1385=no)
	then	{	Sent(1385, 0, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NextStep(6, 2, 1385); if B(not 1385=no) then Sent(1385, 0, open, 17), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NextStep(6, 2, 1385);
	if	B(not 1385=no)
	then	{	Sent(1385, 0, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 1385=no)
	then	{	Sent(1385, 0, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 1385=no) then Sent(1385, 0, open, 17), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 1385=no)
	then	{	Sent(1385, 0, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	Sent(1385, 0, open, 17)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[Sent(1385, 0, open, 17), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	Sent(1385, 0, open, 17)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] paths: 1000
Need to wait 3 more seconds
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] paths: 1000
Need to wait 4 more seconds
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=18, time=2015-05-27 15:17:22.818]
object notification: Time [clock=18, time=2015-05-27 15:17:22.818]
object notification: Time [clock=18, time=2015-05-27 15:17:22.818]
org notification: Time [clock=18, time=2015-05-27 15:17:22.818]
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed UpdateClock(18)
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(18)
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(18)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(18)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] path: 0
a10[CTAH] path: Path: [0][1] [1][1] [2][1] [2][2] [3][2]

a10[CTAH] moveStepToGoalTest nopoints: []
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:1,C:1)
a10[CTAH] moveStepToGoalTest sent proposal for: [1,1,3,3522]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
org notification: Proposal [id=3522, agent=a10, agent2=a40, clock=18, time=2015-05-27 15:17:23.3]
Received a proposal creating event
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
Event processed @ctenv(functionToList(proposal(proposal, 0, 3522, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(proposal(proposal, 3, 1385, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 0, 3522, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(proposal(proposal, 0, 3522, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 0, 3522, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


Event processed UpdateClock(18)
[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 1, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 3522=no)
							then	{	NextStep(1, 1, 3522)
								}
							else	{	NextStep(1, 1)
								}
						}
				}
			else	{	if	B(not 3522=no)
					then	{	NextStep(1, 1, 3522)
						}
					else	{	NextStep(1, 1)
						}
				}
		};
	if	B(not 3522=no)
	then	{	Sent(3522, 3, open, Clock)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 3, 1385, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateClock(18)
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 1, 1)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 3522=no) then NextStep(1, 1, 3522) else NextStep(1, 1) else if B(not 3522=no) then NextStep(1, 1, 3522) else NextStep(1, 1); if B(not 3522=no) then Sent(3522, 3, open, Clock), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(proposal(proposal, 3, 1385, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(18)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 1, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 3522=no)
							then	{	NextStep(1, 1, 3522)
								}
							else	{	NextStep(1, 1)
								}
						}
				}
			else	{	if	B(not 3522=no)
					then	{	NextStep(1, 1, 3522)
						}
					else	{	NextStep(1, 1)
						}
				}
		};
	if	B(not 3522=no)
	then	{	Sent(3522, 3, open, Clock)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 3, 1385, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateClock(18)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@6ea5efbc
[CTAH] The created APLList : [proposal,0,3522,open]
[CTAH] Array of Terms: [Lapapl.data.Term;@25330347
[CTAH] The created APLList : [proposal,3,1385,open]
[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,3522,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,0,3522,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,0,3522,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,0,3522,open])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([proposal,0,3522,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,0,3522,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,3522,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,0,3522,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,0,3522,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(tile(Color1, 1, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 3522=no)
							then	{	NextStep(1, 1, 3522)
								}
							else	{	NextStep(1, 1)
								}
						}
				}
			else	{	if	B(not 3522=no)
					then	{	NextStep(1, 1, 3522)
						}
					else	{	NextStep(1, 1)
						}
				}
		};
	if	B(not 3522=no)
	then	{	Sent(3522, 3, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,1385,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,3,1385,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,3,1385,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(tile(Color1, 1, 1)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 3522=no) then NextStep(1, 1, 3522) else NextStep(1, 1) else if B(not 3522=no) then NextStep(1, 1, 3522) else NextStep(1, 1); if B(not 3522=no) then Sent(3522, 3, open, 17), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,3,1385,open])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([proposal,3,1385,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,3,1385,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(tile(Color1, 1, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 3522=no)
							then	{	NextStep(1, 1, 3522)
								}
							else	{	NextStep(1, 1)
								}
						}
				}
			else	{	if	B(not 3522=no)
					then	{	NextStep(1, 1, 3522)
						}
					else	{	NextStep(1, 1)
						}
				}
		};
	if	B(not 3522=no)
	then	{	Sent(3522, 3, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,1385,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,3,1385,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,3,1385,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,3522,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,3522,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,0,3522,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,0,3522,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,3522,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,3522,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 3522=no)
					then	{	NextStep(1, 1, 3522)
						}
					else	{	NextStep(1, 1)
						}
				}
		}
	else	{	if	B(not 3522=no)
			then	{	NextStep(1, 1, 3522)
				}
			else	{	NextStep(1, 1)
				}
		};
	if	B(not 3522=no)
	then	{	Sent(3522, 3, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,1385,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,1385,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(1000>V2) then if B(not 3522=no) then NextStep(1, 1, 3522) else NextStep(1, 1) else if B(not 3522=no) then NextStep(1, 1, 3522) else NextStep(1, 1); if B(not 3522=no) then Sent(3522, 3, open, 17), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,3,1385,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,3,1385,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 3522=no)
					then	{	NextStep(1, 1, 3522)
						}
					else	{	NextStep(1, 1)
						}
				}
		}
	else	{	if	B(not 3522=no)
			then	{	NextStep(1, 1, 3522)
				}
			else	{	NextStep(1, 1)
				}
		};
	if	B(not 3522=no)
	then	{	Sent(3522, 3, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,1385,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,1385,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,3522,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,0,3522,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,3522,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(not 3522=no)
	then	{	NextStep(1, 1, 3522)
		}
	else	{	NextStep(1, 1)
		};
	if	B(not 3522=no)
	then	{	Sent(3522, 3, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,1385,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B(not 3522=no) then NextStep(1, 1, 3522) else NextStep(1, 1); if B(not 3522=no) then Sent(3522, 3, open, 17), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,3,1385,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(not 3522=no)
	then	{	NextStep(1, 1, 3522)
		}
	else	{	NextStep(1, 1)
		};
	if	B(not 3522=no)
	then	{	Sent(3522, 3, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,1385,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 3522, open)
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(proposal=proposal) then ReceivedProposal(0, 3522, open)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 3522, open)
		}
}


[Planbase]:{	NextStep(1, 1, 3522);
	if	B(not 3522=no)
	then	{	Sent(3522, 3, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 1385, open)
		}
}


[new scheduled]:[NextStep(1, 1, 3522); if B(not 3522=no) then Sent(3522, 3, open, 17), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(proposal=proposal) then ReceivedProposal(3, 1385, open)]
[After]:{	NextStep(1, 1, 3522);
	if	B(not 3522=no)
	then	{	Sent(3522, 3, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 1385, open)
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(0, 3522, open)
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedProposal(0, 3522, open)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(0, 3522, open)
}


[Planbase]:{	if	B(not 3522=no)
	then	{	Sent(3522, 3, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(3, 1385, open)
}


[new scheduled]:[if B(not 3522=no) then Sent(3522, 3, open, 17), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedProposal(3, 1385, open)]
[After]:{	if	B(not 3522=no)
	then	{	Sent(3522, 3, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(3, 1385, open)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[getScoreAfterExchange(3, 3522); if G(at(A, B, C)) then skip else makeResponse(3522, accept), if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	getScoreAfterExchange(3, 3522);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(3522, accept)
		}
},
{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	Sent(3522, 3, open, 17)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[getScoreAfterExchange(0, 1385); if G(at(A, B, C)) then skip else makeResponse(1385, accept), Sent(3522, 3, open, 17), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	getScoreAfterExchange(0, 1385);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(1385, accept)
		}
},
{	Sent(3522, 3, open, 17)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	GetScoreAfterExchange(3522, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(3522, accept)
		}
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[GetScoreAfterExchange(3522, yes); if G(at(A, B, C)) then skip else makeResponse(3522, accept), if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	GetScoreAfterExchange(3522, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(3522, accept)
		}
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	GetScoreAfterExchange(1385, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(1385, accept)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), GetScoreAfterExchange(1385, yes); if G(at(A, B, C)) then skip else makeResponse(1385, accept), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	GetScoreAfterExchange(1385, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(1385, accept)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(3522, accept)
		}
},
{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(A, B, C)) then skip else makeResponse(3522, accept), findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(3522, accept)
		}
},
{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(1385, accept)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), if G(at(A, B, C)) then skip else makeResponse(1385, accept), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(1385, accept)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	skip
},
{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[skip, if B(18>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	skip
},
{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	skip
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), skip, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	skip
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] path: 0
a30[CTAH] path: Path: [6][5] [6][4] [6][3] [5][3] [4][3]

a30[CTAH] moveStepToGoalTest nopoints: []
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:6,C:4)
[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] moveStepToGoalTest sent proposal for: [6,4,0,7394]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
org notification: Proposal [id=7394, agent=a30, agent2=a10, clock=18, time=2015-05-27 15:17:24.632]
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Received a proposal creating event
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
Event processed UpdateClock(18)
[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 4))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 7394=no)
							then	{	NextStep(6, 4, 7394)
								}
							else	{	NextStep(6, 4)
								}
						}
				}
			else	{	if	B(not 7394=no)
					then	{	NextStep(6, 4, 7394)
						}
					else	{	NextStep(6, 4)
						}
				}
		};
	if	B(not 7394=no)
	then	{	Sent(7394, 0, open, Clock)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(18)
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 6, 4)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 7394=no) then NextStep(6, 4, 7394) else NextStep(6, 4) else if B(not 7394=no) then NextStep(6, 4, 7394) else NextStep(6, 4); if B(not 7394=no) then Sent(7394, 0, open, Clock), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(18)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 4))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 7394=no)
							then	{	NextStep(6, 4, 7394)
								}
							else	{	NextStep(6, 4)
								}
						}
				}
			else	{	if	B(not 7394=no)
					then	{	NextStep(6, 4, 7394)
						}
					else	{	NextStep(6, 4)
						}
				}
		};
	if	B(not 7394=no)
	then	{	Sent(7394, 0, open, Clock)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(18)
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed @ctenv(functionToList(proposal(proposal, 2, 7394, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 2, 7394, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(proposal(proposal, 2, 7394, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 2, 7394, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@75895a41
[CTAH] The created APLList : [proposal,2,7394,open]
[Planbase]:{	if	B(tile(Color1, 6, 4))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 7394=no)
							then	{	NextStep(6, 4, 7394)
								}
							else	{	NextStep(6, 4)
								}
						}
				}
			else	{	if	B(not 7394=no)
					then	{	NextStep(6, 4, 7394)
						}
					else	{	NextStep(6, 4)
						}
				}
		};
	if	B(not 7394=no)
	then	{	Sent(7394, 0, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(Color1, 6, 4)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 7394=no) then NextStep(6, 4, 7394) else NextStep(6, 4) else if B(not 7394=no) then NextStep(6, 4, 7394) else NextStep(6, 4); if B(not 7394=no) then Sent(7394, 0, open, 17), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(Color1, 6, 4))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 7394=no)
							then	{	NextStep(6, 4, 7394)
								}
							else	{	NextStep(6, 4)
								}
						}
				}
			else	{	if	B(not 7394=no)
					then	{	NextStep(6, 4, 7394)
						}
					else	{	NextStep(6, 4)
						}
				}
		};
	if	B(not 7394=no)
	then	{	Sent(7394, 0, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,7394,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,2,7394,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,2,7394,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,2,7394,open])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([proposal,2,7394,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,2,7394,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,7394,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,2,7394,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,2,7394,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 7394=no)
					then	{	NextStep(6, 4, 7394)
						}
					else	{	NextStep(6, 4)
						}
				}
		}
	else	{	if	B(not 7394=no)
			then	{	NextStep(6, 4, 7394)
				}
			else	{	NextStep(6, 4)
				}
		};
	if	B(not 7394=no)
	then	{	Sent(7394, 0, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(1000>V2) then if B(not 7394=no) then NextStep(6, 4, 7394) else NextStep(6, 4) else if B(not 7394=no) then NextStep(6, 4, 7394) else NextStep(6, 4); if B(not 7394=no) then Sent(7394, 0, open, 17), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 7394=no)
					then	{	NextStep(6, 4, 7394)
						}
					else	{	NextStep(6, 4)
						}
				}
		}
	else	{	if	B(not 7394=no)
			then	{	NextStep(6, 4, 7394)
				}
			else	{	NextStep(6, 4)
				}
		};
	if	B(not 7394=no)
	then	{	Sent(7394, 0, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,7394,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,7394,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,2,7394,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,2,7394,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,7394,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,7394,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B(not 7394=no)
	then	{	NextStep(6, 4, 7394)
		}
	else	{	NextStep(6, 4)
		};
	if	B(not 7394=no)
	then	{	Sent(7394, 0, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 7394=no) then NextStep(6, 4, 7394) else NextStep(6, 4); if B(not 7394=no) then Sent(7394, 0, open, 17), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 7394=no)
	then	{	NextStep(6, 4, 7394)
		}
	else	{	NextStep(6, 4)
		};
	if	B(not 7394=no)
	then	{	Sent(7394, 0, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,7394,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,2,7394,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,7394,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	NextStep(6, 4, 7394);
	if	B(not 7394=no)
	then	{	Sent(7394, 0, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NextStep(6, 4, 7394); if B(not 7394=no) then Sent(7394, 0, open, 17), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NextStep(6, 4, 7394);
	if	B(not 7394=no)
	then	{	Sent(7394, 0, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 7394, open)
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(proposal=proposal) then ReceivedProposal(2, 7394, open)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 7394, open)
		}
}


[Planbase]:{	if	B(not 7394=no)
	then	{	Sent(7394, 0, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 7394=no) then Sent(7394, 0, open, 17), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 7394=no)
	then	{	Sent(7394, 0, open, 17)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(2, 7394, open)
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedProposal(2, 7394, open)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(2, 7394, open)
}


[Planbase]:{	Sent(7394, 0, open, 17)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[Sent(7394, 0, open, 17), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	Sent(7394, 0, open, 17)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[getScoreAfterExchange(0, 7394); if G(at(A, B, C)) then skip else makeResponse(7394, accept), if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	getScoreAfterExchange(0, 7394);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(7394, accept)
		}
},
{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	GetScoreAfterExchange(7394, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(7394, accept)
		}
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[GetScoreAfterExchange(7394, yes); if G(at(A, B, C)) then skip else makeResponse(7394, accept), if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	GetScoreAfterExchange(7394, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(7394, accept)
		}
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(7394, accept)
		}
},
{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(A, B, C)) then skip else makeResponse(7394, accept), findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(7394, accept)
		}
},
{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	skip
},
{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[skip, if B(18>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	skip
},
{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


org notification: Time [clock=19, time=2015-05-27 15:17:32.821]
object notification: Time [clock=19, time=2015-05-27 15:17:32.821]
object notification: Time [clock=19, time=2015-05-27 15:17:32.821]
object notification: Time [clock=19, time=2015-05-27 15:17:32.821]
Event processed UpdateClock(19)
Event processed UpdateClock(19)
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(19)
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(19)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(19)
}


Event processed UpdateClock(19)
[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(19)
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(19)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(19)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(19)
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(19)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(19)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=20, time=2015-05-27 15:17:42.823]
object notification: Time [clock=20, time=2015-05-27 15:17:42.823]
org notification: Time [clock=20, time=2015-05-27 15:17:42.823]
object notification: Time [clock=20, time=2015-05-27 15:17:42.823]
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed UpdateClock(20)
Event processed UpdateClock(20)
Event processed UpdateClock(20)
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(20)
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(20)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(20)
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(20)
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(20)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(20)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(20)
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(20)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(20)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=21, time=2015-05-27 15:17:52.826]
object notification: Time [clock=21, time=2015-05-27 15:17:52.826]
object notification: Time [clock=21, time=2015-05-27 15:17:52.826]
org notification: Time [clock=21, time=2015-05-27 15:17:52.826]
Event processed UpdateClock(21)
Event processed UpdateClock(21)
Event processed UpdateClock(21)
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(21)
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(21)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(21)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(21)
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(21)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(21)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(21)
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(21)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(21)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(20>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(20>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=22, time=2015-05-27 15:18:02.838]
org notification: Time [clock=22, time=2015-05-27 15:18:02.838]
object notification: Time [clock=22, time=2015-05-27 15:18:02.838]
object notification: Time [clock=22, time=2015-05-27 15:18:02.838]
object notification: Points [subject=a10, time=2015-05-27 15:18:02.858, clock=22, value=0, id=null]
object notification: Points [subject=a30, time=2015-05-27 15:18:02.872, clock=22, value=0, id=null]
object notification: Points [subject=a40, time=2015-05-27 15:18:02.876, clock=22, value=0, id=null]
Event processed UpdateClock(22)
Event processed UpdatePoints(0)
Event processed UpdateClock(22)
Event processed UpdatePoints(0)
Event processed UpdateClock(22)
Event processed UpdatePoints(0)
[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(22)
},
{	UpdatePoints(0)
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(22), UpdatePoints(0)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(22)
},
{	UpdatePoints(0)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(22)
},
{	UpdatePoints(0)
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(22), UpdatePoints(0)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(22)
},
{	UpdatePoints(0)
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(22)
},
{	UpdatePoints(0)
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(22), UpdatePoints(0)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(22)
},
{	UpdatePoints(0)
}


[Planbase]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(21>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(21>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=23, time=2015-05-27 15:18:12.843]
object notification: Time [clock=23, time=2015-05-27 15:18:12.843]
object notification: Time [clock=23, time=2015-05-27 15:18:12.843]
org notification: Time [clock=23, time=2015-05-27 15:18:12.843]
Event processed UpdateClock(23)
Event processed UpdateClock(23)
Event processed UpdateClock(23)
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(23)
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(23)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(23)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(23)
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(23)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(23)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(23)
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(23)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(23)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(22>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(22>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(23>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(23>17+5) then {NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(23>17+5)
	then	{	NoNextStep(1, 1, 3522);
			ReceivedMessage(noresponse, 3522)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(23>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(23>17+5) then {NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(23>17+5)
	then	{	NoNextStep(6, 4, 7394);
			ReceivedMessage(noresponse, 7394)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NoNextStep(1, 1, 3522);
	ReceivedMessage(noresponse, 3522)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NoNextStep(1, 1, 3522); ReceivedMessage(noresponse, 3522), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NoNextStep(1, 1, 3522);
	ReceivedMessage(noresponse, 3522)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NoNextStep(6, 4, 7394);
	ReceivedMessage(noresponse, 7394)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NoNextStep(6, 4, 7394); ReceivedMessage(noresponse, 7394), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NoNextStep(6, 4, 7394);
	ReceivedMessage(noresponse, 7394)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	ReceivedMessage(noresponse, 3522)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[ReceivedMessage(noresponse, 3522), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	ReceivedMessage(noresponse, 3522)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	ReceivedMessage(noresponse, 7394)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[ReceivedMessage(noresponse, 7394), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	ReceivedMessage(noresponse, 7394)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(23>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(23>17+5) then {NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(23>17+5)
	then	{	NoNextStep(6, 2, 1385);
			ReceivedMessage(noresponse, 1385)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NoNextStep(6, 2, 1385);
	ReceivedMessage(noresponse, 1385)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NoNextStep(6, 2, 1385); ReceivedMessage(noresponse, 1385), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NoNextStep(6, 2, 1385);
	ReceivedMessage(noresponse, 1385)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	ReceivedMessage(noresponse, 1385)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[ReceivedMessage(noresponse, 1385), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	ReceivedMessage(noresponse, 1385)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0) else if B(tile(white, X, Y)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0) else if B(tile(white, X, Y)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(white, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(white, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(white, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] going goal: 3,2 color: white
[Planbase]:{	@ctenv(moveStepToGoalTest(white, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(white, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(white, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] going goal: 4,3 color: white
[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0) else if B(tile(white, X, Y)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(white, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(white, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(white, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a40[CTAH] going goal: 3,4 color: white
a40[CTAH] paths: 1000
a40[CTAH] path: 0
a40[CTAH] path: Path: [6][1] [6][2] [6][3] [5][3] [5][4] [4][4] [3][4]

a40[CTAH] moveStepToGoalTest nopoints: []
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:6,C:2)
a40[CTAH] moveStepToGoalTest sent proposal for: [6,2,0,5996]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=5996, agent=a40, agent2=a10, clock=23, time=2015-05-27 15:18:22.708]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 5996=no)
							then	{	NextStep(6, 2, 5996)
								}
							else	{	NextStep(6, 2)
								}
						}
				}
			else	{	if	B(not 5996=no)
					then	{	NextStep(6, 2, 5996)
						}
					else	{	NextStep(6, 2)
						}
				}
		};
	if	B(not 5996=no)
	then	{	Sent(5996, 0, open, Clock)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 6, 2)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 5996=no) then NextStep(6, 2, 5996) else NextStep(6, 2) else if B(not 5996=no) then NextStep(6, 2, 5996) else NextStep(6, 2); if B(not 5996=no) then Sent(5996, 0, open, Clock), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 5996=no)
							then	{	NextStep(6, 2, 5996)
								}
							else	{	NextStep(6, 2)
								}
						}
				}
			else	{	if	B(not 5996=no)
					then	{	NextStep(6, 2, 5996)
						}
					else	{	NextStep(6, 2)
						}
				}
		};
	if	B(not 5996=no)
	then	{	Sent(5996, 0, open, Clock)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(tile(Color1, 6, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 5996=no)
							then	{	NextStep(6, 2, 5996)
								}
							else	{	NextStep(6, 2)
								}
						}
				}
			else	{	if	B(not 5996=no)
					then	{	NextStep(6, 2, 5996)
						}
					else	{	NextStep(6, 2)
						}
				}
		};
	if	B(not 5996=no)
	then	{	Sent(5996, 0, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(Color1, 6, 2)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 5996=no) then NextStep(6, 2, 5996) else NextStep(6, 2) else if B(not 5996=no) then NextStep(6, 2, 5996) else NextStep(6, 2); if B(not 5996=no) then Sent(5996, 0, open, 23), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(Color1, 6, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 5996=no)
							then	{	NextStep(6, 2, 5996)
								}
							else	{	NextStep(6, 2)
								}
						}
				}
			else	{	if	B(not 5996=no)
					then	{	NextStep(6, 2, 5996)
						}
					else	{	NextStep(6, 2)
						}
				}
		};
	if	B(not 5996=no)
	then	{	Sent(5996, 0, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=24, time=2015-05-27 15:18:22.845]
org notification: Time [clock=24, time=2015-05-27 15:18:22.845]
object notification: Time [clock=24, time=2015-05-27 15:18:22.845]
object notification: Time [clock=24, time=2015-05-27 15:18:22.845]
Event processed UpdateClock(24)
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 5996=no)
					then	{	NextStep(6, 2, 5996)
						}
					else	{	NextStep(6, 2)
						}
				}
		}
	else	{	if	B(not 5996=no)
			then	{	NextStep(6, 2, 5996)
				}
			else	{	NextStep(6, 2)
				}
		};
	if	B(not 5996=no)
	then	{	Sent(5996, 0, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(24)
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(1000>V2) then if B(not 5996=no) then NextStep(6, 2, 5996) else NextStep(6, 2) else if B(not 5996=no) then NextStep(6, 2, 5996) else NextStep(6, 2); if B(not 5996=no) then Sent(5996, 0, open, 23), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(24)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 5996=no)
					then	{	NextStep(6, 2, 5996)
						}
					else	{	NextStep(6, 2)
						}
				}
		}
	else	{	if	B(not 5996=no)
			then	{	NextStep(6, 2, 5996)
				}
			else	{	NextStep(6, 2)
				}
		};
	if	B(not 5996=no)
	then	{	Sent(5996, 0, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(24)
}


[Planbase]:{	if	B(not 5996=no)
	then	{	NextStep(6, 2, 5996)
		}
	else	{	NextStep(6, 2)
		};
	if	B(not 5996=no)
	then	{	Sent(5996, 0, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 5996=no) then NextStep(6, 2, 5996) else NextStep(6, 2); if B(not 5996=no) then Sent(5996, 0, open, 23), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 5996=no)
	then	{	NextStep(6, 2, 5996)
		}
	else	{	NextStep(6, 2)
		};
	if	B(not 5996=no)
	then	{	Sent(5996, 0, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NextStep(6, 2, 5996);
	if	B(not 5996=no)
	then	{	Sent(5996, 0, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NextStep(6, 2, 5996); if B(not 5996=no) then Sent(5996, 0, open, 23), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NextStep(6, 2, 5996);
	if	B(not 5996=no)
	then	{	Sent(5996, 0, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 5996=no)
	then	{	Sent(5996, 0, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 5996=no) then Sent(5996, 0, open, 23), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 5996=no)
	then	{	Sent(5996, 0, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	Sent(5996, 0, open, 23)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[Sent(5996, 0, open, 23), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	Sent(5996, 0, open, 23)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] paths: 1000
Need to wait 3 more seconds
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] paths: 1000
Need to wait 3 more seconds
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] path: 0
a30[CTAH] path: Path: [6][5] [6][4] [6][3] [5][3] [4][3]

a30[CTAH] moveStepToGoalTest nopoints: []
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:6,C:4)
a30[CTAH] moveStepToGoalTest sent proposal for: [6,4,0,734]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
org notification: Proposal [id=734, agent=a30, agent2=a10, clock=24, time=2015-05-27 15:18:26.228]
Received a proposal creating event
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed UpdateClock(24)
[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 4))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 734=no)
							then	{	NextStep(6, 4, 734)
								}
							else	{	NextStep(6, 4)
								}
						}
				}
			else	{	if	B(not 734=no)
					then	{	NextStep(6, 4, 734)
						}
					else	{	NextStep(6, 4)
						}
				}
		};
	if	B(not 734=no)
	then	{	Sent(734, 0, open, Clock)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(24)
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 6, 4)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 734=no) then NextStep(6, 4, 734) else NextStep(6, 4) else if B(not 734=no) then NextStep(6, 4, 734) else NextStep(6, 4); if B(not 734=no) then Sent(734, 0, open, Clock), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(24)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 4))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 734=no)
							then	{	NextStep(6, 4, 734)
								}
							else	{	NextStep(6, 4)
								}
						}
				}
			else	{	if	B(not 734=no)
					then	{	NextStep(6, 4, 734)
						}
					else	{	NextStep(6, 4)
						}
				}
		};
	if	B(not 734=no)
	then	{	Sent(734, 0, open, Clock)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(24)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(tile(Color1, 6, 4))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 734=no)
							then	{	NextStep(6, 4, 734)
								}
							else	{	NextStep(6, 4)
								}
						}
				}
			else	{	if	B(not 734=no)
					then	{	NextStep(6, 4, 734)
						}
					else	{	NextStep(6, 4)
						}
				}
		};
	if	B(not 734=no)
	then	{	Sent(734, 0, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(Color1, 6, 4)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 734=no) then NextStep(6, 4, 734) else NextStep(6, 4) else if B(not 734=no) then NextStep(6, 4, 734) else NextStep(6, 4); if B(not 734=no) then Sent(734, 0, open, 23), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(Color1, 6, 4))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 734=no)
							then	{	NextStep(6, 4, 734)
								}
							else	{	NextStep(6, 4)
								}
						}
				}
			else	{	if	B(not 734=no)
					then	{	NextStep(6, 4, 734)
						}
					else	{	NextStep(6, 4)
						}
				}
		};
	if	B(not 734=no)
	then	{	Sent(734, 0, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] path: 0
a10[CTAH] path: Path: [0][1] [1][1] [2][1] [2][2] [3][2]

a10[CTAH] moveStepToGoalTest nopoints: []
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:1,C:1)
a10[CTAH] moveStepToGoalTest sent proposal for: [1,1,3,8821]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
org notification: Proposal [id=8821, agent=a10, agent2=a40, clock=24, time=2015-05-27 15:18:26.468]
Received a proposal creating event
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 734=no)
					then	{	NextStep(6, 4, 734)
						}
					else	{	NextStep(6, 4)
						}
				}
		}
	else	{	if	B(not 734=no)
			then	{	NextStep(6, 4, 734)
				}
			else	{	NextStep(6, 4)
				}
		};
	if	B(not 734=no)
	then	{	Sent(734, 0, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(1000>V2) then if B(not 734=no) then NextStep(6, 4, 734) else NextStep(6, 4) else if B(not 734=no) then NextStep(6, 4, 734) else NextStep(6, 4); if B(not 734=no) then Sent(734, 0, open, 23), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 734=no)
					then	{	NextStep(6, 4, 734)
						}
					else	{	NextStep(6, 4)
						}
				}
		}
	else	{	if	B(not 734=no)
			then	{	NextStep(6, 4, 734)
				}
			else	{	NextStep(6, 4)
				}
		};
	if	B(not 734=no)
	then	{	Sent(734, 0, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed @ctenv(functionToList(proposal(proposal, 3, 5996, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateClock(24)
Event processed @ctenv(functionToList(proposal(proposal, 2, 734, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(proposal(proposal, 0, 8821, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 1, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 8821=no)
							then	{	NextStep(1, 1, 8821)
								}
							else	{	NextStep(1, 1)
								}
						}
				}
			else	{	if	B(not 8821=no)
					then	{	NextStep(1, 1, 8821)
						}
					else	{	NextStep(1, 1)
						}
				}
		};
	if	B(not 8821=no)
	then	{	Sent(8821, 3, open, Clock)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 3, 5996, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateClock(24)
},
{	@ctenv(functionToList(proposal(proposal, 2, 734, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 1, 1)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 8821=no) then NextStep(1, 1, 8821) else NextStep(1, 1) else if B(not 8821=no) then NextStep(1, 1, 8821) else NextStep(1, 1); if B(not 8821=no) then Sent(8821, 3, open, Clock), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(proposal(proposal, 3, 5996, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(24), @ctenv(functionToList(proposal(proposal, 2, 734, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 1, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 8821=no)
							then	{	NextStep(1, 1, 8821)
								}
							else	{	NextStep(1, 1)
								}
						}
				}
			else	{	if	B(not 8821=no)
					then	{	NextStep(1, 1, 8821)
						}
					else	{	NextStep(1, 1)
						}
				}
		};
	if	B(not 8821=no)
	then	{	Sent(8821, 3, open, Clock)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 3, 5996, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateClock(24)
},
{	@ctenv(functionToList(proposal(proposal, 2, 734, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 0, 8821, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(proposal(proposal, 0, 8821, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 0, 8821, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@41ef8646
[CTAH] Array of Terms: [Lapapl.data.Term;@54587f7b
[CTAH] The created APLList : [proposal,3,5996,open]
[CTAH] The created APLList : [proposal,2,734,open]
[CTAH] Array of Terms: [Lapapl.data.Term;@5be7ffd0
[CTAH] The created APLList : [proposal,0,8821,open]
[Planbase]:{	if	B(not 734=no)
	then	{	NextStep(6, 4, 734)
		}
	else	{	NextStep(6, 4)
		};
	if	B(not 734=no)
	then	{	Sent(734, 0, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 734=no) then NextStep(6, 4, 734) else NextStep(6, 4); if B(not 734=no) then Sent(734, 0, open, 23), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 734=no)
	then	{	NextStep(6, 4, 734)
		}
	else	{	NextStep(6, 4)
		};
	if	B(not 734=no)
	then	{	Sent(734, 0, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(tile(Color1, 1, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 8821=no)
							then	{	NextStep(1, 1, 8821)
								}
							else	{	NextStep(1, 1)
								}
						}
				}
			else	{	if	B(not 8821=no)
					then	{	NextStep(1, 1, 8821)
						}
					else	{	NextStep(1, 1)
						}
				}
		};
	if	B(not 8821=no)
	then	{	Sent(8821, 3, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,5996,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,3,5996,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,3,5996,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	if	B([actionresult([proposal,2,734,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,2,734,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,2,734,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(tile(Color1, 1, 1)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 8821=no) then NextStep(1, 1, 8821) else NextStep(1, 1) else if B(not 8821=no) then NextStep(1, 1, 8821) else NextStep(1, 1); if B(not 8821=no) then Sent(8821, 3, open, 23), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,3,5996,open])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([proposal,3,5996,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,3,5996,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), if B([actionresult([proposal,2,734,open])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([proposal,2,734,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,2,734,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(tile(Color1, 1, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 8821=no)
							then	{	NextStep(1, 1, 8821)
								}
							else	{	NextStep(1, 1)
								}
						}
				}
			else	{	if	B(not 8821=no)
					then	{	NextStep(1, 1, 8821)
						}
					else	{	NextStep(1, 1)
						}
				}
		};
	if	B(not 8821=no)
	then	{	Sent(8821, 3, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,5996,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,3,5996,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,3,5996,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	if	B([actionresult([proposal,2,734,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,2,734,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,2,734,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,8821,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,0,8821,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,0,8821,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,0,8821,open])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([proposal,0,8821,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,0,8821,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,8821,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,0,8821,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,0,8821,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	NextStep(6, 4, 734);
	if	B(not 734=no)
	then	{	Sent(734, 0, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NextStep(6, 4, 734); if B(not 734=no) then Sent(734, 0, open, 23), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NextStep(6, 4, 734);
	if	B(not 734=no)
	then	{	Sent(734, 0, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 8821=no)
					then	{	NextStep(1, 1, 8821)
						}
					else	{	NextStep(1, 1)
						}
				}
		}
	else	{	if	B(not 8821=no)
			then	{	NextStep(1, 1, 8821)
				}
			else	{	NextStep(1, 1)
				}
		};
	if	B(not 8821=no)
	then	{	Sent(8821, 3, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,5996,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,5996,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	if	B([actionresult([proposal,2,734,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,734,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(1000>V2) then if B(not 8821=no) then NextStep(1, 1, 8821) else NextStep(1, 1) else if B(not 8821=no) then NextStep(1, 1, 8821) else NextStep(1, 1); if B(not 8821=no) then Sent(8821, 3, open, 23), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,3,5996,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,3,5996,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), if B([actionresult([proposal,2,734,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,2,734,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 8821=no)
					then	{	NextStep(1, 1, 8821)
						}
					else	{	NextStep(1, 1)
						}
				}
		}
	else	{	if	B(not 8821=no)
			then	{	NextStep(1, 1, 8821)
				}
			else	{	NextStep(1, 1)
				}
		};
	if	B(not 8821=no)
	then	{	Sent(8821, 3, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,5996,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,5996,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	if	B([actionresult([proposal,2,734,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,734,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,8821,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,8821,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,0,8821,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,0,8821,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,8821,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,8821,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B(not 734=no)
	then	{	Sent(734, 0, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 734=no) then Sent(734, 0, open, 23), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 734=no)
	then	{	Sent(734, 0, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 8821=no)
	then	{	NextStep(1, 1, 8821)
		}
	else	{	NextStep(1, 1)
		};
	if	B(not 8821=no)
	then	{	Sent(8821, 3, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,5996,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
},
{	if	B([actionresult([proposal,2,734,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B(not 8821=no) then NextStep(1, 1, 8821) else NextStep(1, 1); if B(not 8821=no) then Sent(8821, 3, open, 23), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,3,5996,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), if B([actionresult([proposal,2,734,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(not 8821=no)
	then	{	NextStep(1, 1, 8821)
		}
	else	{	NextStep(1, 1)
		};
	if	B(not 8821=no)
	then	{	Sent(8821, 3, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,5996,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
},
{	if	B([actionresult([proposal,2,734,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,8821,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,0,8821,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,8821,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	Sent(734, 0, open, 23)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[Sent(734, 0, open, 23), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	Sent(734, 0, open, 23)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NextStep(1, 1, 8821);
	if	B(not 8821=no)
	then	{	Sent(8821, 3, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 5996, open)
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 734, open)
		}
}


[new scheduled]:[NextStep(1, 1, 8821); if B(not 8821=no) then Sent(8821, 3, open, 23), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(proposal=proposal) then ReceivedProposal(3, 5996, open), if B(proposal=proposal) then ReceivedProposal(2, 734, open)]
[After]:{	NextStep(1, 1, 8821);
	if	B(not 8821=no)
	then	{	Sent(8821, 3, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 5996, open)
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 734, open)
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 8821, open)
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(proposal=proposal) then ReceivedProposal(0, 8821, open)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 8821, open)
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 8821=no)
	then	{	Sent(8821, 3, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(3, 5996, open)
},
{	ReceivedProposal(2, 734, open)
}


[new scheduled]:[if B(not 8821=no) then Sent(8821, 3, open, 23), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedProposal(3, 5996, open), ReceivedProposal(2, 734, open)]
[After]:{	if	B(not 8821=no)
	then	{	Sent(8821, 3, open, 23)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(3, 5996, open)
},
{	ReceivedProposal(2, 734, open)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(0, 8821, open)
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedProposal(0, 8821, open)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(0, 8821, open)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	Sent(8821, 3, open, 23)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[getScoreAfterExchange(0, 5996); if G(at(A, B, C)) then skip else makeResponse(5996, accept), Sent(8821, 3, open, 23), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	getScoreAfterExchange(0, 5996);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(5996, accept)
		}
},
{	Sent(8821, 3, open, 23)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[getScoreAfterExchange(3, 8821); if G(at(A, B, C)) then skip else makeResponse(8821, accept), if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	getScoreAfterExchange(3, 8821);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(8821, accept)
		}
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	GetScoreAfterExchange(5996, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(5996, accept)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), GetScoreAfterExchange(5996, yes); if G(at(A, B, C)) then skip else makeResponse(5996, accept), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	GetScoreAfterExchange(5996, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(5996, accept)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	GetScoreAfterExchange(8821, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(8821, accept)
		}
},
{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[GetScoreAfterExchange(8821, yes); if G(at(A, B, C)) then skip else makeResponse(8821, accept), findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	GetScoreAfterExchange(8821, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(8821, accept)
		}
},
{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(5996, accept)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), if G(at(A, B, C)) then skip else makeResponse(5996, accept), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(5996, accept)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(8821, accept)
		}
},
{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(A, B, C)) then skip else makeResponse(8821, accept), if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(8821, accept)
		}
},
{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	skip
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), skip, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	skip
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	skip
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), skip, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	skip
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[getScoreAfterExchange(0, 734); if G(at(A, B, C)) then skip else makeResponse(734, accept), if B(24>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	getScoreAfterExchange(0, 734);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(734, accept)
		}
},
{	if	B(24>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	GetScoreAfterExchange(734, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(734, accept)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), GetScoreAfterExchange(734, yes); if G(at(A, B, C)) then skip else makeResponse(734, accept), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	GetScoreAfterExchange(734, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(734, accept)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(734, accept)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), if G(at(A, B, C)) then skip else makeResponse(734, accept), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(734, accept)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	skip
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), skip, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	skip
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=25, time=2015-05-27 15:18:32.848]
org notification: Time [clock=25, time=2015-05-27 15:18:32.848]
object notification: Time [clock=25, time=2015-05-27 15:18:32.848]
object notification: Time [clock=25, time=2015-05-27 15:18:32.848]
Event processed UpdateClock(25)
Event processed UpdateClock(25)
Event processed UpdateClock(25)
[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(25)
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(25)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(25)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(25)
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(25)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(25)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(25)
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(25)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(25)
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(24>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(24>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=26, time=2015-05-27 15:18:42.851]
object notification: Time [clock=26, time=2015-05-27 15:18:42.851]
org notification: Time [clock=26, time=2015-05-27 15:18:42.851]
object notification: Time [clock=26, time=2015-05-27 15:18:42.851]
Event processed UpdateClock(26)
Event processed UpdateClock(26)
Event processed UpdateClock(26)
[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(26)
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(26)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(26)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(26)
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(26)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(26)
}


[Planbase]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(26)
}


[new scheduled]:[if B(25>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(26)]
[After]:{	if	B(25>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(26)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=27, time=2015-05-27 15:18:52.854]
object notification: Time [clock=27, time=2015-05-27 15:18:52.854]
org notification: Time [clock=27, time=2015-05-27 15:18:52.854]
object notification: Time [clock=27, time=2015-05-27 15:18:52.854]
Event processed UpdateClock(27)
Event processed UpdateClock(27)
Event processed UpdateClock(27)
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(27)
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(27)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(27)
}


[Planbase]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(27)
}


[new scheduled]:[if B(26>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(27)]
[After]:{	if	B(26>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(27)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(27)
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(27)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(27)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=28, time=2015-05-27 15:19:02.857]
object notification: Time [clock=28, time=2015-05-27 15:19:02.857]
object notification: Time [clock=28, time=2015-05-27 15:19:02.857]
org notification: Time [clock=28, time=2015-05-27 15:19:02.857]
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed UpdateClock(28)
Event processed UpdateClock(28)
Event processed UpdateClock(28)
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(28)
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(28)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(28)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(28)
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(28)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(28)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(28)
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(28)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(28)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(27>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(27>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=29, time=2015-05-27 15:19:12.859]
object notification: Time [clock=29, time=2015-05-27 15:19:12.859]
org notification: Time [clock=29, time=2015-05-27 15:19:12.859]
object notification: Time [clock=29, time=2015-05-27 15:19:12.859]
Event processed UpdateClock(29)
Event processed UpdateClock(29)
Event processed UpdateClock(29)
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(29)
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(29)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(29)
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(29)
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(29)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(29)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(29)
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(29)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(29)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(28>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(28>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(29>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(29>23+5) then {NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(29>23+5)
	then	{	NoNextStep(6, 4, 734);
			ReceivedMessage(noresponse, 734)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(29>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(29>23+5) then {NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(29>23+5)
	then	{	NoNextStep(6, 2, 5996);
			ReceivedMessage(noresponse, 5996)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NoNextStep(6, 4, 734);
	ReceivedMessage(noresponse, 734)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NoNextStep(6, 4, 734); ReceivedMessage(noresponse, 734), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NoNextStep(6, 4, 734);
	ReceivedMessage(noresponse, 734)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NoNextStep(6, 2, 5996);
	ReceivedMessage(noresponse, 5996)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NoNextStep(6, 2, 5996); ReceivedMessage(noresponse, 5996), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NoNextStep(6, 2, 5996);
	ReceivedMessage(noresponse, 5996)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	ReceivedMessage(noresponse, 734)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[ReceivedMessage(noresponse, 734), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	ReceivedMessage(noresponse, 734)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(29>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(29>23+5) then {NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(29>23+5)
	then	{	NoNextStep(1, 1, 8821);
			ReceivedMessage(noresponse, 8821)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	ReceivedMessage(noresponse, 5996)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[ReceivedMessage(noresponse, 5996), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	ReceivedMessage(noresponse, 5996)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NoNextStep(1, 1, 8821);
	ReceivedMessage(noresponse, 8821)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NoNextStep(1, 1, 8821); ReceivedMessage(noresponse, 8821), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NoNextStep(1, 1, 8821);
	ReceivedMessage(noresponse, 8821)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	ReceivedMessage(noresponse, 8821)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[ReceivedMessage(noresponse, 8821), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	ReceivedMessage(noresponse, 8821)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0) else if B(tile(white, X, Y)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0) else if B(tile(white, X, Y)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(white, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(white, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(white, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(white, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(white, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(white, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] going goal: 4,3 color: white
a40[CTAH] going goal: 3,4 color: white
[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0) else if B(tile(white, X, Y)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(white, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(white, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(white, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] going goal: 3,2 color: white
object notification: Time [clock=30, time=2015-05-27 15:19:22.863]
org notification: Time [clock=30, time=2015-05-27 15:19:22.863]
object notification: Time [clock=30, time=2015-05-27 15:19:22.863]
object notification: Time [clock=30, time=2015-05-27 15:19:22.863]
a40[CTAH] paths: 1000
a40[CTAH] path: 0
a40[CTAH] path: Path: [6][1] [6][2] [6][3] [5][3] [5][4] [4][4] [3][4]

a40[CTAH] moveStepToGoalTest nopoints: []
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:6,C:2)
a40[CTAH] moveStepToGoalTest sent proposal for: [6,2,0,6612]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
org notification: Proposal [id=6612, agent=a40, agent2=a10, clock=30, time=2015-05-27 15:19:24.161]
Received a proposal creating event
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
Event processed UpdateClock(30)
[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 6612=no)
							then	{	NextStep(6, 2, 6612)
								}
							else	{	NextStep(6, 2)
								}
						}
				}
			else	{	if	B(not 6612=no)
					then	{	NextStep(6, 2, 6612)
						}
					else	{	NextStep(6, 2)
						}
				}
		};
	if	B(not 6612=no)
	then	{	Sent(6612, 0, open, Clock)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(30)
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 6, 2)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 6612=no) then NextStep(6, 2, 6612) else NextStep(6, 2) else if B(not 6612=no) then NextStep(6, 2, 6612) else NextStep(6, 2); if B(not 6612=no) then Sent(6612, 0, open, Clock), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(30)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 6612=no)
							then	{	NextStep(6, 2, 6612)
								}
							else	{	NextStep(6, 2)
								}
						}
				}
			else	{	if	B(not 6612=no)
					then	{	NextStep(6, 2, 6612)
						}
					else	{	NextStep(6, 2)
						}
				}
		};
	if	B(not 6612=no)
	then	{	Sent(6612, 0, open, Clock)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(30)
}


[Planbase]:{	if	B(tile(Color1, 6, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 6612=no)
							then	{	NextStep(6, 2, 6612)
								}
							else	{	NextStep(6, 2)
								}
						}
				}
			else	{	if	B(not 6612=no)
					then	{	NextStep(6, 2, 6612)
						}
					else	{	NextStep(6, 2)
						}
				}
		};
	if	B(not 6612=no)
	then	{	Sent(6612, 0, open, 29)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(Color1, 6, 2)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 6612=no) then NextStep(6, 2, 6612) else NextStep(6, 2) else if B(not 6612=no) then NextStep(6, 2, 6612) else NextStep(6, 2); if B(not 6612=no) then Sent(6612, 0, open, 29), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(Color1, 6, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 6612=no)
							then	{	NextStep(6, 2, 6612)
								}
							else	{	NextStep(6, 2)
								}
						}
				}
			else	{	if	B(not 6612=no)
					then	{	NextStep(6, 2, 6612)
						}
					else	{	NextStep(6, 2)
						}
				}
		};
	if	B(not 6612=no)
	then	{	Sent(6612, 0, open, 29)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 6612=no)
					then	{	NextStep(6, 2, 6612)
						}
					else	{	NextStep(6, 2)
						}
				}
		}
	else	{	if	B(not 6612=no)
			then	{	NextStep(6, 2, 6612)
				}
			else	{	NextStep(6, 2)
				}
		};
	if	B(not 6612=no)
	then	{	Sent(6612, 0, open, 29)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(1000>V2) then if B(not 6612=no) then NextStep(6, 2, 6612) else NextStep(6, 2) else if B(not 6612=no) then NextStep(6, 2, 6612) else NextStep(6, 2); if B(not 6612=no) then Sent(6612, 0, open, 29), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 6612=no)
					then	{	NextStep(6, 2, 6612)
						}
					else	{	NextStep(6, 2)
						}
				}
		}
	else	{	if	B(not 6612=no)
			then	{	NextStep(6, 2, 6612)
				}
			else	{	NextStep(6, 2)
				}
		};
	if	B(not 6612=no)
	then	{	Sent(6612, 0, open, 29)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 6612=no)
	then	{	NextStep(6, 2, 6612)
		}
	else	{	NextStep(6, 2)
		};
	if	B(not 6612=no)
	then	{	Sent(6612, 0, open, 29)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 6612=no) then NextStep(6, 2, 6612) else NextStep(6, 2); if B(not 6612=no) then Sent(6612, 0, open, 29), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 6612=no)
	then	{	NextStep(6, 2, 6612)
		}
	else	{	NextStep(6, 2)
		};
	if	B(not 6612=no)
	then	{	Sent(6612, 0, open, 29)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NextStep(6, 2, 6612);
	if	B(not 6612=no)
	then	{	Sent(6612, 0, open, 29)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NextStep(6, 2, 6612); if B(not 6612=no) then Sent(6612, 0, open, 29), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NextStep(6, 2, 6612);
	if	B(not 6612=no)
	then	{	Sent(6612, 0, open, 29)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 6612=no)
	then	{	Sent(6612, 0, open, 29)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 6612=no) then Sent(6612, 0, open, 29), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 6612=no)
	then	{	Sent(6612, 0, open, 29)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	Sent(6612, 0, open, 29)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[Sent(6612, 0, open, 29), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	Sent(6612, 0, open, 29)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] paths: 1000
Need to wait 4 more seconds
[Planbase]:{	if	B(30>29+5)
	then	{	NoNextStep(6, 2, 6612);
			ReceivedMessage(noresponse, 6612)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(30>29+5) then {NoNextStep(6, 2, 6612); ReceivedMessage(noresponse, 6612)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(30>29+5)
	then	{	NoNextStep(6, 2, 6612);
			ReceivedMessage(noresponse, 6612)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(30>29+5)
	then	{	NoNextStep(6, 2, 6612);
			ReceivedMessage(noresponse, 6612)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(30>29+5) then {NoNextStep(6, 2, 6612); ReceivedMessage(noresponse, 6612)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(30>29+5)
	then	{	NoNextStep(6, 2, 6612);
			ReceivedMessage(noresponse, 6612)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] paths: 1000
Need to wait 4 more seconds
[Planbase]:{	if	B(30>29+5)
	then	{	NoNextStep(6, 2, 6612);
			ReceivedMessage(noresponse, 6612)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(30>29+5) then {NoNextStep(6, 2, 6612); ReceivedMessage(noresponse, 6612)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(30>29+5)
	then	{	NoNextStep(6, 2, 6612);
			ReceivedMessage(noresponse, 6612)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(30>29+5)
	then	{	NoNextStep(6, 2, 6612);
			ReceivedMessage(noresponse, 6612)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(30>29+5) then {NoNextStep(6, 2, 6612); ReceivedMessage(noresponse, 6612)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(30>29+5)
	then	{	NoNextStep(6, 2, 6612);
			ReceivedMessage(noresponse, 6612)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(30>29+5)
	then	{	NoNextStep(6, 2, 6612);
			ReceivedMessage(noresponse, 6612)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(30>29+5) then {NoNextStep(6, 2, 6612); ReceivedMessage(noresponse, 6612)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(30>29+5)
	then	{	NoNextStep(6, 2, 6612);
			ReceivedMessage(noresponse, 6612)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(30>29+5)
	then	{	NoNextStep(6, 2, 6612);
			ReceivedMessage(noresponse, 6612)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(30>29+5) then {NoNextStep(6, 2, 6612); ReceivedMessage(noresponse, 6612)}, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(30>29+5)
	then	{	NoNextStep(6, 2, 6612);
			ReceivedMessage(noresponse, 6612)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


