2015-06-04 07:00:01,009 CONFIG [com.gigaspaces.logger] - Log file: /Users/dxd/git/ct3/logs/2015-06-04~07.00-gigaspaces-service-192.168.1.101-66093.log
-------------------------last log tuples start--------------------------------
Group [name=g, ra=a20, type=raaa, clock=0, time=2015-06-04 06:56:07.884]
Color [id=null, color=blue, agent=a20, type=yes, sanction=50, time=2015-06-04 06:57:08.936, clock=12]
Goal [id=null, cell=Cell [x=3, y=4], agent=null, time=2015-06-04 06:56:07.733, clock=0]
Time [clock=24, time=2015-06-04 06:59:04.497]
Prohibition [subject=a40, prohibition=[rejectRequests(a40)], sanction=[reduce(a40, 200)], clock=9, time=2015-06-04 06:56:39.322]
Time [clock=25, time=2015-06-04 06:59:14.5]
SetGoal [id=null, agent=a10, cell=Cell [x=2, y=4], goal=Cell [x=-1, y=-1], sanction=100, clock=11, time=2015-06-04 06:57:04.075]
Time [clock=5, time=2015-06-04 06:55:54.42]
Obligation [subject=a20, obligation=[group_acceptCRequests], sanction=[reduce(g, 50)], deadline=35, time=2015-06-04 06:57:18.668, clock=13]
Time [clock=15, time=2015-06-04 06:57:34.459]
SetGoal [id=null, agent=a20, cell=Cell [x=3, y=5], goal=Cell [x=-1, y=-1], sanction=100, clock=10, time=2015-06-04 06:56:47.667]
SetGoal [id=null, agent=a40, cell=Cell [x=3, y=3], goal=Cell [x=-1, y=-1], sanction=100, clock=10, time=2015-06-04 06:56:52.653]
SetGoal [id=null, agent=a30, cell=Cell [x=4, y=4], goal=Cell [x=-1, y=-1], sanction=100, clock=11, time=2015-06-04 06:56:58.61]
GroupObl [id=null, obligation=acceptCRequests, sanction=50, clock=13, time=2015-06-04 06:57:18.651]
Time [clock=4, time=2015-06-04 06:55:44.417]
Prohibition [subject=a30, prohibition=[moveTooFast(a30)], sanction=[reduce(a30, 300)], clock=9, time=2015-06-04 06:56:39.341]
Time [clock=14, time=2015-06-04 06:57:24.454]
Prohibition [subject=a40, prohibition=[moveTooFast(a40)], sanction=[reduce(a40, 300)], clock=9, time=2015-06-04 06:56:39.355]
Obligation [subject=a20, obligation=[color(blue, a20)], sanction=[reduce(a20, 50)], deadline=27, time=2015-06-04 06:57:08.949, clock=12]
Prohibition [subject=a20, prohibition=[moveTooFast(a20)], sanction=[reduce(a20, 300)], clock=9, time=2015-06-04 06:56:39.339]
Prohibition [subject=a20, prohibition=[rejectRequests(a20)], sanction=[reduce(a20, 200)], clock=9, time=2015-06-04 06:56:39.312]
Time [clock=16, time=2015-06-04 06:57:44.462]
Time [clock=13, time=2015-06-04 06:57:14.45]
Prohibition [subject=a10, prohibition=[rejectRequests(a10)], sanction=[reduce(a10, 200)], clock=9, time=2015-06-04 06:56:39.265]
Prohibition [subject=a30, prohibition=[rejectRequests(a30)], sanction=[reduce(a30, 200)], clock=9, time=2015-06-04 06:56:39.316]
Time [clock=22, time=2015-06-04 06:58:44.489]
Time [clock=12, time=2015-06-04 06:57:04.447]
Tile [id=null, cell=Cell [x=2, y=5], subject=yellow, time=2015-06-04 06:56:07.642, clock=0]
Prohibition [subject=a10, prohibition=[moveTooFast(a10)], sanction=[reduce(a10, 300)], clock=9, time=2015-06-04 06:56:39.335]
Tile [id=null, cell=Cell [x=5, y=0], subject=brown, time=2015-06-04 06:56:07.678, clock=0]
Tile [id=null, cell=Cell [x=2, y=1], subject=blue, time=2015-06-04 06:56:07.631, clock=0]
Time [clock=1, time=2015-06-04 06:55:14.391]
Time [clock=8, time=2015-06-04 06:56:24.433]
Time [clock=11, time=2015-06-04 06:56:54.444]
Time [clock=6, time=2015-06-04 06:56:04.424]
Obligation [subject=a20, obligation=[surround(3, 4)], sanction=[reduce(g, 700)], deadline=29, time=2015-06-04 06:56:39.38, clock=9]
Time [clock=23, time=2015-06-04 06:58:54.493]
Time [clock=10, time=2015-06-04 06:56:44.44]
Time [clock=19, time=2015-06-04 06:58:14.477]
Time [clock=20, time=2015-06-04 06:58:24.481]
Time [clock=9, time=2015-06-04 06:56:34.437]
Time [clock=7, time=2015-06-04 06:56:14.429]
Time [clock=3, time=2015-06-04 06:55:34.412]
Time [clock=17, time=2015-06-04 06:57:54.466]
Time [clock=2, time=2015-06-04 06:55:24.409]
Time [clock=21, time=2015-06-04 06:58:34.485]
Time [clock=18, time=2015-06-04 06:58:04.473]
Tile [id=null, cell=Cell [x=1, y=2], subject=brown, time=2015-06-04 06:56:07.616, clock=0]
Tile [id=null, cell=Cell [x=1, y=3], subject=brown, time=2015-06-04 06:56:07.619, clock=0]
Tile [id=null, cell=Cell [x=4, y=4], subject=yellow, time=2015-06-04 06:56:07.672, clock=0]
Tile [id=null, cell=Cell [x=0, y=5], subject=brown, time=2015-06-04 06:56:07.607, clock=0]
Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-04 06:56:07.609, clock=0]
Tile [id=null, cell=Cell [x=1, y=4], subject=brown, time=2015-06-04 06:56:07.622, clock=0]
Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-06-04 06:56:07.668, clock=0]
Tile [id=null, cell=Cell [x=2, y=0], subject=brown, time=2015-06-04 06:56:07.626, clock=0]
Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-06-04 06:56:07.602, clock=0]
Tile [id=null, cell=Cell [x=5, y=5], subject=yellow, time=2015-06-04 06:56:07.695, clock=0]
Tile [id=null, cell=Cell [x=4, y=0], subject=yellow, time=2015-06-04 06:56:07.66, clock=0]
Tile [id=null, cell=Cell [x=5, y=1], subject=brown, time=2015-06-04 06:56:07.682, clock=0]
Tile [id=null, cell=Cell [x=0, y=2], subject=brown, time=2015-06-04 06:56:07.594, clock=0]
Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-06-04 06:56:07.67, clock=0]
Tile [id=null, cell=Cell [x=3, y=4], subject=white, time=2015-06-04 06:56:07.656, clock=0]
Tile [id=null, cell=Cell [x=3, y=5], subject=brown, time=2015-06-04 06:56:07.658, clock=0]
Tile [id=null, cell=Cell [x=3, y=3], subject=brown, time=2015-06-04 06:56:07.653, clock=0]
Tile [id=null, cell=Cell [x=3, y=1], subject=white, time=2015-06-04 06:56:07.648, clock=0]
Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-06-04 06:56:07.651, clock=0]
Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-06-04 06:56:07.637, clock=0]
Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-06-04 06:56:07.663, clock=0]
Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-04 06:56:07.624, clock=0]
Tile [id=null, cell=Cell [x=3, y=0], subject=blue, time=2015-06-04 06:56:07.645, clock=0]
Tile [id=null, cell=Cell [x=1, y=1], subject=blue, time=2015-06-04 06:56:07.612, clock=0]
Tile [id=null, cell=Cell [x=4, y=5], subject=white, time=2015-06-04 06:56:07.675, clock=0]
Tile [id=null, cell=Cell [x=0, y=3], subject=blue, time=2015-06-04 06:56:07.599, clock=0]
Tile [id=null, cell=Cell [x=2, y=4], subject=brown, time=2015-06-04 06:56:07.64, clock=0]
Tile [id=null, cell=Cell [x=5, y=2], subject=white, time=2015-06-04 06:56:07.686, clock=0]
Tile [id=null, cell=Cell [x=5, y=3], subject=white, time=2015-06-04 06:56:07.691, clock=0]
Tile [id=null, cell=Cell [x=5, y=4], subject=brown, time=2015-06-04 06:56:07.693, clock=0]
Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-04 06:56:07.634, clock=0]
Tile [id=null, cell=Cell [x=0, y=1], subject=white, time=2015-06-04 06:56:07.592, clock=0]
Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-06-04 06:56:07.477, clock=0]
-------------------------last log tuples end----------------------------------
[CTAH] started agent 10
[CTAH] Added a new agent to the game by the name of 10.
[ENV] added agent a10
[CTAH] started agent 30
[CTAH] Added a new agent to the game by the name of 30.
[ENV] added agent a30
[CTAH] started agent 40
[CTAH] Added a new agent to the game by the name of 40.
[ENV] added agent a40
org notification: Time [clock=1, time=2015-06-04 07:00:12.157]
object notification: Time [clock=1, time=2015-06-04 07:00:12.157]
object notification: Time [clock=1, time=2015-06-04 07:00:12.157]
object notification: Time [clock=1, time=2015-06-04 07:00:12.157]
#########################Game started
#########################Game started
#########################Game started
[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


Event processed UpdateClock(1)
Event processed UpdateClock(1)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateClock(1)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@35908558
[CTAH] The created APLList : [game_initialized]
[CTAH] Array of Terms: [Lapapl.data.Term;@7b79688d
[CTAH] The created APLList : [game_initialized]
[CTAH] Array of Terms: [Lapapl.data.Term;@41b3251d
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
org notification: Tile [id=null, cell=Cell [x=0, y=0], subject=blue, time=2015-06-04 07:00:20.548, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=blue, time=2015-06-04 07:00:20.548, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=blue, time=2015-06-04 07:00:20.548, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=blue, time=2015-06-04 07:00:20.548, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-04 07:00:20.614, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-04 07:00:20.614, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-04 07:00:20.614, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-04 07:00:20.617, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-04 07:00:20.614, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-04 07:00:20.617, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-04 07:00:20.617, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-04 07:00:20.617, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=blue, time=2015-06-04 07:00:20.625, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=3], subject=blue, time=2015-06-04 07:00:20.625, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=blue, time=2015-06-04 07:00:20.625, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=blue, time=2015-06-04 07:00:20.625, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-06-04 07:00:20.639, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-06-04 07:00:20.639, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-06-04 07:00:20.639, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-06-04 07:00:20.639, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=white, time=2015-06-04 07:00:20.647, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=5], subject=white, time=2015-06-04 07:00:20.647, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=white, time=2015-06-04 07:00:20.647, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=white, time=2015-06-04 07:00:20.647, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=blue, time=2015-06-04 07:00:20.657, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=blue, time=2015-06-04 07:00:20.657, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=0], subject=blue, time=2015-06-04 07:00:20.657, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=blue, time=2015-06-04 07:00:20.657, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=white, time=2015-06-04 07:00:20.665, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=1], subject=white, time=2015-06-04 07:00:20.665, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=white, time=2015-06-04 07:00:20.665, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=white, time=2015-06-04 07:00:20.665, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=2], subject=blue, time=2015-06-04 07:00:20.671, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=blue, time=2015-06-04 07:00:20.671, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=blue, time=2015-06-04 07:00:20.671, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=blue, time=2015-06-04 07:00:20.671, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-06-04 07:00:20.68, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-06-04 07:00:20.68, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-06-04 07:00:20.68, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-06-04 07:00:20.68, clock=0]
Event processed UpdateTile(blue, 0, 0)
Event processed UpdateTile(blue, 0, 1)
Event processed UpdateTile(blue, 0, 2)
Event processed UpdateTile(blue, 0, 3)
Event processed UpdateTile(white, 0, 4)
Event processed UpdateTile(white, 0, 5)
Event processed UpdateTile(blue, 1, 0)
Event processed UpdateTile(white, 1, 1)
Event processed UpdateTile(blue, 1, 2)
org notification: Tile [id=null, cell=Cell [x=1, y=4], subject=yellow, time=2015-06-04 07:00:20.71, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=yellow, time=2015-06-04 07:00:20.71, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=yellow, time=2015-06-04 07:00:20.71, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=yellow, time=2015-06-04 07:00:20.71, clock=0]
Event processed UpdateTile(white, 1, 3)
Event processed UpdateTile(yellow, 1, 4)
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=blue, time=2015-06-04 07:00:20.729, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=5], subject=blue, time=2015-06-04 07:00:20.729, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=blue, time=2015-06-04 07:00:20.729, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=blue, time=2015-06-04 07:00:20.729, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=brown, time=2015-06-04 07:00:20.734, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=brown, time=2015-06-04 07:00:20.734, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=brown, time=2015-06-04 07:00:20.734, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=0], subject=brown, time=2015-06-04 07:00:20.734, clock=0]
Event processed UpdateTile(blue, 0, 0)
Event processed UpdateTile(blue, 0, 1)
Event processed UpdateTile(blue, 0, 2)
Event processed UpdateTile(blue, 0, 3)
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=yellow, time=2015-06-04 07:00:20.746, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=yellow, time=2015-06-04 07:00:20.746, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=1], subject=yellow, time=2015-06-04 07:00:20.746, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-04 07:00:20.751, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-04 07:00:20.751, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-06-04 07:00:20.763, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-04 07:00:20.751, clock=0]
Event processed UpdateTile(white, 0, 4)
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-06-04 07:00:20.763, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-06-04 07:00:20.763, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=yellow, time=2015-06-04 07:00:20.746, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-04 07:00:20.751, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-06-04 07:00:20.763, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-06-04 07:00:20.768, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-06-04 07:00:20.768, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-06-04 07:00:20.768, clock=0]
Event processed UpdateTile(white, 0, 5)
org notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-06-04 07:00:20.768, clock=0]
Event processed UpdateTile(blue, 1, 0)
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-06-04 07:00:20.798, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-06-04 07:00:20.798, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-06-04 07:00:20.798, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-06-04 07:00:20.798, clock=0]
Event processed UpdateTile(white, 1, 1)
Event processed UpdateTile(blue, 1, 2)
Event processed UpdateTile(white, 1, 3)
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=blue, time=2015-06-04 07:00:20.811, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=0], subject=blue, time=2015-06-04 07:00:20.811, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=blue, time=2015-06-04 07:00:20.811, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=blue, time=2015-06-04 07:00:20.811, clock=0]
Event processed UpdateTile(yellow, 1, 4)
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-04 07:00:20.818, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-04 07:00:20.818, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-04 07:00:20.818, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-04 07:00:20.818, clock=0]
Event processed UpdateTile(blue, 1, 5)
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=white, time=2015-06-04 07:00:20.825, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=white, time=2015-06-04 07:00:20.825, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=white, time=2015-06-04 07:00:20.825, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=2], subject=white, time=2015-06-04 07:00:20.825, clock=0]
Event processed UpdateTile(brown, 2, 0)
Event processed UpdateTile(yellow, 2, 1)
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-06-04 07:00:20.846, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-06-04 07:00:20.846, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-06-04 07:00:20.846, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-06-04 07:00:20.846, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=brown, time=2015-06-04 07:00:20.853, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=4], subject=brown, time=2015-06-04 07:00:20.853, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=brown, time=2015-06-04 07:00:20.853, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=brown, time=2015-06-04 07:00:20.853, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=5], subject=blue, time=2015-06-04 07:00:20.857, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=blue, time=2015-06-04 07:00:20.857, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=blue, time=2015-06-04 07:00:20.857, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=blue, time=2015-06-04 07:00:20.857, clock=0]
Event processed UpdateTile(yellow, 2, 2)
org notification: Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-06-04 07:00:20.861, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-06-04 07:00:20.861, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-06-04 07:00:20.861, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-06-04 07:00:20.861, clock=0]
Event processed UpdateTile(white, 2, 3)
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-06-04 07:00:20.865, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-06-04 07:00:20.865, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-06-04 07:00:20.865, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-06-04 07:00:20.865, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-06-04 07:00:20.87, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-06-04 07:00:20.87, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-06-04 07:00:20.87, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-06-04 07:00:20.87, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-04 07:00:20.874, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-04 07:00:20.874, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-04 07:00:20.874, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-04 07:00:20.874, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=blue, time=2015-06-04 07:00:20.878, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=blue, time=2015-06-04 07:00:20.878, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=4], subject=blue, time=2015-06-04 07:00:20.878, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=white, time=2015-06-04 07:00:20.884, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=white, time=2015-06-04 07:00:20.884, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=blue, time=2015-06-04 07:00:20.878, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=white, time=2015-06-04 07:00:20.89, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=white, time=2015-06-04 07:00:20.89, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=white, time=2015-06-04 07:00:20.884, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=white, time=2015-06-04 07:00:20.89, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=5], subject=white, time=2015-06-04 07:00:20.884, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=brown, time=2015-06-04 07:00:20.895, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=brown, time=2015-06-04 07:00:20.895, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=brown, time=2015-06-04 07:00:20.895, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=0], subject=white, time=2015-06-04 07:00:20.89, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=yellow, time=2015-06-04 07:00:20.9, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=yellow, time=2015-06-04 07:00:20.9, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=yellow, time=2015-06-04 07:00:20.9, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=1], subject=brown, time=2015-06-04 07:00:20.895, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=blue, time=2015-06-04 07:00:20.904, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=blue, time=2015-06-04 07:00:20.904, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=blue, time=2015-06-04 07:00:20.904, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-06-04 07:00:20.908, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-06-04 07:00:20.908, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-06-04 07:00:20.908, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-04 07:00:20.912, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-04 07:00:20.912, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-04 07:00:20.912, clock=0]
Event processed UpdateTile(blue, 0, 0)
Event processed UpdateTile(blue, 0, 1)
Event processed UpdateTile(blue, 0, 2)
Event processed UpdateTile(blue, 0, 3)
Event processed UpdateTile(white, 0, 4)
org notification: Tile [id=null, cell=Cell [x=5, y=2], subject=yellow, time=2015-06-04 07:00:20.9, clock=0]
Event processed UpdateTile(white, 2, 4)
Event processed UpdateTile(white, 0, 5)
Event processed UpdateTile(brown, 2, 5)
org notification: Tile [id=null, cell=Cell [x=5, y=3], subject=blue, time=2015-06-04 07:00:20.904, clock=0]
Event processed UpdateTile(blue, 1, 0)
org notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-06-04 07:00:20.908, clock=0]
Event processed UpdateTile(white, 1, 1)
org notification: Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-04 07:00:20.912, clock=0]
Event processed UpdateTile(blue, 3, 0)
Event processed UpdateTile(blue, 1, 2)
Event processed UpdateTile(white, 1, 3)
Event processed UpdateTile(brown, 3, 1)
Event processed UpdateTile(white, 3, 2)
Event processed UpdateTile(yellow, 1, 4)
Event processed UpdateTile(blue, 1, 5)
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(blue, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(blue, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(white, 0, 5)
},
{	UpdateTile(blue, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(yellow, 1, 4)
}


[new scheduled]:[Initialize, @ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, UpdateTile(blue, 0, 0), UpdateTile(blue, 0, 1), UpdateTile(blue, 0, 2), UpdateTile(blue, 0, 3), UpdateTile(white, 0, 4), UpdateTile(white, 0, 5), UpdateTile(blue, 1, 0), UpdateTile(white, 1, 1), UpdateTile(blue, 1, 2), UpdateTile(white, 1, 3), UpdateTile(yellow, 1, 4)]
[After]:{	Initialize
},
{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(blue, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(blue, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(white, 0, 5)
},
{	UpdateTile(blue, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(yellow, 1, 4)
}


Event processed UpdateTile(brown, 2, 0)
Event processed UpdateTile(blue, 3, 3)
Event processed UpdateTile(yellow, 2, 1)
Event processed UpdateTile(brown, 3, 4)
Event processed UpdateTile(blue, 3, 5)
Event processed UpdateTile(yellow, 2, 2)
Event processed UpdateTile(white, 4, 0)
Event processed UpdateTile(white, 2, 3)
Event processed UpdateTile(white, 2, 4)
Event processed UpdateTile(brown, 2, 5)
Event processed UpdateTile(blue, 3, 0)
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(white, 4, 3)
Event processed UpdateTile(blue, 4, 4)
org notification: Goal [id=null, cell=Cell [x=3, y=1], agent=null, time=2015-06-04 07:00:20.992, clock=0]
Event processed UpdateTile(brown, 3, 1)
Event processed UpdateTile(white, 4, 5)
Event processed UpdateTile(white, 3, 2)
Event processed UpdateTile(blue, 3, 3)
Event processed UpdateTile(white, 5, 0)
Event processed UpdateTile(brown, 3, 4)
Event processed UpdateTile(brown, 5, 1)
Event processed UpdateTile(blue, 3, 5)
Event processed UpdateTile(yellow, 5, 2)
Event processed UpdateTile(white, 4, 0)
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(blue, 5, 3)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(blue, 5, 4)
Event processed UpdateTile(white, 4, 3)
Event processed UpdateTile(blue, 4, 4)
Event processed UpdateTile(white, 4, 5)
Event processed UpdateTile(white, 5, 0)
Event processed UpdateTile(white, 5, 5)
Event processed UpdateTile(brown, 5, 1)
Event processed UpdateTile(yellow, 5, 2)
Event processed UpdateTile(blue, 5, 3)
Event processed UpdateTile(blue, 5, 4)
Event processed UpdateTile(white, 5, 5)
org notification: Group [name=g, ra=a30, type=raaa, clock=0, time=2015-06-04 07:00:21.367]
object notification: Prohibition [subject=a10, prohibition=[rejectRequests(a10)], sanction=[reduce(a10, 200)], clock=1, time=2015-06-04 07:00:21.397]
object notification: Obligation [subject=a30, obligation=[surround(3, 1)], sanction=[reduce(g, 700)], deadline=23, time=2015-06-04 07:00:21.391, clock=1]
object notification: Prohibition [subject=a10, prohibition=[moveTooFast(a10)], sanction=[reduce(a10, 300)], clock=1, time=2015-06-04 07:00:21.422]
object notification: Prohibition [subject=a30, prohibition=[rejectRequests(a30)], sanction=[reduce(a30, 200)], clock=1, time=2015-06-04 07:00:21.416]
object notification: Prohibition [subject=a30, prohibition=[moveTooFast(a30)], sanction=[reduce(a30, 300)], clock=1, time=2015-06-04 07:00:21.436]
object notification: Prohibition [subject=a40, prohibition=[rejectRequests(a40)], sanction=[reduce(a40, 200)], clock=1, time=2015-06-04 07:00:21.419]
object notification: Prohibition [subject=a40, prohibition=[moveTooFast(a40)], sanction=[reduce(a40, 300)], clock=1, time=2015-06-04 07:00:21.44]
#########################Game Initialized
AGENT Thread-16: current phase name: Norm Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
#########################Game Initialized
AGENT Thread-14: current phase name: Norm Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
#########################Game Initialized
AGENT Thread-11: current phase name: Norm Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
org notification: Time [clock=2, time=2015-06-04 07:00:22.18]
object notification: Time [clock=2, time=2015-06-04 07:00:22.18]
object notification: Time [clock=2, time=2015-06-04 07:00:22.18]
object notification: Time [clock=2, time=2015-06-04 07:00:22.18]
Event processed UpdateTile(blue, 1, 5)
Event processed UpdateTile(brown, 2, 0)
Event processed UpdateTile(yellow, 2, 1)
Event processed UpdateTile(yellow, 2, 2)
Event processed UpdateTile(white, 2, 3)
Event processed UpdateTile(white, 2, 4)
Event processed UpdateTile(brown, 2, 5)
Event processed UpdateTile(blue, 3, 0)
Event processed UpdateTile(brown, 3, 1)
Event processed UpdateTile(white, 3, 2)
Event processed UpdateTile(blue, 3, 3)
Event processed UpdateTile(brown, 3, 4)
Event processed UpdateTile(blue, 3, 5)
Event processed UpdateTile(white, 4, 0)
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(white, 4, 3)
Event processed UpdateTile(blue, 4, 4)
Event processed UpdateTile(white, 4, 5)
Event processed UpdateTile(white, 5, 0)
Event processed UpdateTile(brown, 5, 1)
Event processed UpdateTile(yellow, 5, 2)
Event processed UpdateTile(blue, 5, 3)
Event processed UpdateTile(blue, 5, 4)
Event processed UpdateTile(white, 5, 5)
Event processed adoptProhibition(rejectRequests(a40), reduce(a40, 200))
Event processed adoptProhibition(moveTooFast(a40), reduce(a40, 300))
Event processed UpdateClock(2)
[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(blue, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(blue, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(white, 0, 5)
},
{	UpdateTile(blue, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(yellow, 1, 4)
},
{	UpdateTile(blue, 1, 5)
},
{	UpdateTile(brown, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(blue, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(white, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(brown, 3, 4)
},
{	UpdateTile(blue, 3, 5)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(blue, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(white, 5, 0)
},
{	UpdateTile(brown, 5, 1)
},
{	UpdateTile(yellow, 5, 2)
},
{	UpdateTile(blue, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(white, 5, 5)
}


[new scheduled]:[Initialize, GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, UpdateTile(blue, 0, 0), UpdateTile(blue, 0, 1), UpdateTile(blue, 0, 2), UpdateTile(blue, 0, 3), UpdateTile(white, 0, 4), UpdateTile(white, 0, 5), UpdateTile(blue, 1, 0), UpdateTile(white, 1, 1), UpdateTile(blue, 1, 2), UpdateTile(white, 1, 3), UpdateTile(yellow, 1, 4), UpdateTile(blue, 1, 5), UpdateTile(brown, 2, 0), UpdateTile(yellow, 2, 1), UpdateTile(yellow, 2, 2), UpdateTile(white, 2, 3), UpdateTile(white, 2, 4), UpdateTile(brown, 2, 5), UpdateTile(blue, 3, 0), UpdateTile(brown, 3, 1), UpdateTile(white, 3, 2), UpdateTile(blue, 3, 3), UpdateTile(brown, 3, 4), UpdateTile(blue, 3, 5), UpdateTile(white, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(white, 4, 3), UpdateTile(blue, 4, 4), UpdateTile(white, 4, 5), UpdateTile(white, 5, 0), UpdateTile(brown, 5, 1), UpdateTile(yellow, 5, 2), UpdateTile(blue, 5, 3), UpdateTile(blue, 5, 4), UpdateTile(white, 5, 5)]
[After]:{	Initialize
},
{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(blue, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(blue, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(white, 0, 5)
},
{	UpdateTile(blue, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(yellow, 1, 4)
},
{	UpdateTile(blue, 1, 5)
},
{	UpdateTile(brown, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(blue, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(white, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(brown, 3, 4)
},
{	UpdateTile(blue, 3, 5)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(blue, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(white, 5, 0)
},
{	UpdateTile(brown, 5, 1)
},
{	UpdateTile(yellow, 5, 2)
},
{	UpdateTile(blue, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(white, 5, 5)
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(blue, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(blue, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(white, 0, 5)
},
{	UpdateTile(blue, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(yellow, 1, 4)
},
{	UpdateTile(blue, 1, 5)
},
{	UpdateTile(brown, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(blue, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(white, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(brown, 3, 4)
},
{	UpdateTile(blue, 3, 5)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(blue, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(white, 5, 0)
},
{	UpdateTile(brown, 5, 1)
},
{	UpdateTile(yellow, 5, 2)
},
{	UpdateTile(blue, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(white, 5, 5)
}


[new scheduled]:[Initialize, GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, UpdateTile(blue, 0, 0), UpdateTile(blue, 0, 1), UpdateTile(blue, 0, 2), UpdateTile(blue, 0, 3), UpdateTile(white, 0, 4), UpdateTile(white, 0, 5), UpdateTile(blue, 1, 0), UpdateTile(white, 1, 1), UpdateTile(blue, 1, 2), UpdateTile(white, 1, 3), UpdateTile(yellow, 1, 4), UpdateTile(blue, 1, 5), UpdateTile(brown, 2, 0), UpdateTile(yellow, 2, 1), UpdateTile(yellow, 2, 2), UpdateTile(white, 2, 3), UpdateTile(white, 2, 4), UpdateTile(brown, 2, 5), UpdateTile(blue, 3, 0), UpdateTile(brown, 3, 1), UpdateTile(white, 3, 2), UpdateTile(blue, 3, 3), UpdateTile(brown, 3, 4), UpdateTile(blue, 3, 5), UpdateTile(white, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(white, 4, 3), UpdateTile(blue, 4, 4), UpdateTile(white, 4, 5), UpdateTile(white, 5, 0), UpdateTile(brown, 5, 1), UpdateTile(yellow, 5, 2), UpdateTile(blue, 5, 3), UpdateTile(blue, 5, 4), UpdateTile(white, 5, 5)]
[After]:{	Initialize
},
{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(blue, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(blue, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(white, 0, 5)
},
{	UpdateTile(blue, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(yellow, 1, 4)
},
{	UpdateTile(blue, 1, 5)
},
{	UpdateTile(brown, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(blue, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(white, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(brown, 3, 4)
},
{	UpdateTile(blue, 3, 5)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(blue, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(white, 5, 0)
},
{	UpdateTile(brown, 5, 1)
},
{	UpdateTile(yellow, 5, 2)
},
{	UpdateTile(blue, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(white, 5, 5)
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(blue, 1, 5)
},
{	UpdateTile(brown, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(blue, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(white, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(brown, 3, 4)
},
{	UpdateTile(blue, 3, 5)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(blue, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(white, 5, 0)
},
{	UpdateTile(brown, 5, 1)
},
{	UpdateTile(yellow, 5, 2)
},
{	UpdateTile(blue, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	adoptProhibition(rejectRequests(a40), reduce(a40, 200))
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
},
{	UpdateClock(2)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, UpdateTile(blue, 1, 5), UpdateTile(brown, 2, 0), UpdateTile(yellow, 2, 1), UpdateTile(yellow, 2, 2), UpdateTile(white, 2, 3), UpdateTile(white, 2, 4), UpdateTile(brown, 2, 5), UpdateTile(blue, 3, 0), UpdateTile(brown, 3, 1), UpdateTile(white, 3, 2), UpdateTile(blue, 3, 3), UpdateTile(brown, 3, 4), UpdateTile(blue, 3, 5), UpdateTile(white, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(white, 4, 3), UpdateTile(blue, 4, 4), UpdateTile(white, 4, 5), UpdateTile(white, 5, 0), UpdateTile(brown, 5, 1), UpdateTile(yellow, 5, 2), UpdateTile(blue, 5, 3), UpdateTile(blue, 5, 4), UpdateTile(white, 5, 5), adoptProhibition(rejectRequests(a40), reduce(a40, 200)), adoptProhibition(moveTooFast(a40), reduce(a40, 300)), UpdateClock(2)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(blue, 1, 5)
},
{	UpdateTile(brown, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(blue, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(white, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(brown, 3, 4)
},
{	UpdateTile(blue, 3, 5)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(blue, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(white, 5, 0)
},
{	UpdateTile(brown, 5, 1)
},
{	UpdateTile(yellow, 5, 2)
},
{	UpdateTile(blue, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	adoptProhibition(rejectRequests(a40), reduce(a40, 200))
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
},
{	UpdateClock(2)
}


Event processed adoptProhibition(rejectRequests(a10), reduce(a10, 200))
Event processed adoptProhibition(moveTooFast(a10), reduce(a10, 300))
Event processed UpdateClock(2)
Event processed adoptObligation(surround(3, 1), 23, reduce(g, 700))
Event processed adoptProhibition(rejectRequests(a30), reduce(a30, 200))
Event processed adoptProhibition(moveTooFast(a30), reduce(a30, 300))
Event processed UpdateClock(2)
[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	adoptProhibition(rejectRequests(a10), reduce(a10, 200))
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
},
{	UpdateClock(2)
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos, adoptProhibition(rejectRequests(a10), reduce(a10, 200)), adoptProhibition(moveTooFast(a10), reduce(a10, 300)), UpdateClock(2)]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	adoptProhibition(rejectRequests(a10), reduce(a10, 200))
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
},
{	UpdateClock(2)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	adoptObligation(surround(3, 1), 23, reduce(g, 700))
},
{	adoptProhibition(rejectRequests(a30), reduce(a30, 200))
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
},
{	UpdateClock(2)
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos, adoptObligation(surround(3, 1), 23, reduce(g, 700)), adoptProhibition(rejectRequests(a30), reduce(a30, 200)), adoptProhibition(moveTooFast(a30), reduce(a30, 300)), UpdateClock(2)]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	adoptObligation(surround(3, 1), 23, reduce(g, 700))
},
{	adoptProhibition(rejectRequests(a30), reduce(a30, 200))
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
},
{	UpdateClock(2)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos, AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos, AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	adopta(surround(3, 1, 700) : 4 Jun 2015 06:17:04 GMT, priority 10)
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos, adopta(surround(3, 1, 700) : 4 Jun 2015 06:17:04 GMT, priority 10), AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	adopta(surround(3, 1, 700) : 4 Jun 2015 06:17:04 GMT, priority 10)
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos, aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


obligation to be adopted: surround(3, 1, 700) : 4 Jun 2015 06:17:04 GMT, priority 10
[Planbase]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[GetAgentId(0); B(agentId(ID)); getRole(ID); getPos, aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[GetAgentId(2); B(agentId(ID)); getRole(ID); getPos, aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(3); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getRole(0);
	getPos
}


[new scheduled]:[getRole(0); getPos]
[After]:{	getRole(0);
	getPos
}


[Planbase]:{	getRole(3);
	getPos
}


[new scheduled]:[getRole(3); getPos]
[After]:{	getRole(3);
	getPos
}


[Planbase]:{	getRole(2);
	getPos
}


[new scheduled]:[getRole(2); getPos]
[After]:{	getRole(2);
	getPos
}


[Planbase]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(0),L1,0); B(L1=[actionresult(X)]); GetRole(0, X); getPos]
[After]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[Planbase]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(3),L1,0); B(L1=[actionresult(X)]); GetRole(3, X); getPos]
[After]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[Planbase]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(2),L1,0); B(L1=[actionresult(X)]); GetRole(2, X); getPos]
[After]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[Planbase]:{	GetRole(2, raaa);
	getPos
}


[new scheduled]:[GetRole(2, raaa); getPos]
[After]:{	GetRole(2, raaa);
	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[Surround(3, 1); sendSouth(a10, 3, 1, 100); sendWest(a20, 3, 1, 100); sendEast(a30, 3, 1, 100); sendNorth(a40, 3, 1, 100); B(tile(C1, 1, 1)); B(tile(C2, 2, 2)); B(tile(C3, 3, 3)); B(tile(C4, 4, 4)); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(3, 1, 700) : Infinite, priority 10), getPos]
[After]:{	Surround(3, 1);
	sendSouth(a10, 3, 1, 100);
	sendWest(a20, 3, 1, 100);
	sendEast(a30, 3, 1, 100);
	sendNorth(a40, 3, 1, 100);
	B(tile(C1, 1, 1));
	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
},
{	getPos
}


[Planbase]:{	sendSouth(a10, 3, 1, 100);
	sendWest(a20, 3, 1, 100);
	sendEast(a30, 3, 1, 100);
	sendNorth(a40, 3, 1, 100);
	B(tile(C1, 1, 1));
	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
},
{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[sendSouth(a10, 3, 1, 100); sendWest(a20, 3, 1, 100); sendEast(a30, 3, 1, 100); sendNorth(a40, 3, 1, 100); B(tile(C1, 1, 1)); B(tile(C2, 2, 2)); B(tile(C3, 3, 3)); B(tile(C4, 4, 4)); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(3, 1, 700) : Infinite, priority 10), @ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	sendSouth(a10, 3, 1, 100);
	sendWest(a20, 3, 1, 100);
	sendEast(a30, 3, 1, 100);
	sendNorth(a40, 3, 1, 100);
	B(tile(C1, 1, 1));
	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
},
{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[CTAH] Agentposition: [4,5]
[Planbase]:{	@ctenv(setGoal(a10, 3, 0, 3, 1, 100),L,0);
	sendWest(a20, 3, 1, 100);
	sendEast(a30, 3, 1, 100);
	sendNorth(a40, 3, 1, 100);
	B(tile(C1, 1, 1));
	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
},
{	B(clock(C));
	GetAgentPos(4, 5, C)
}


[new scheduled]:[@ctenv(setGoal(a10, 3, 0, 3, 1, 100),L,0); sendWest(a20, 3, 1, 100); sendEast(a30, 3, 1, 100); sendNorth(a40, 3, 1, 100); B(tile(C1, 1, 1)); B(tile(C2, 2, 2)); B(tile(C3, 3, 3)); B(tile(C4, 4, 4)); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(3, 1, 700) : Infinite, priority 10), B(clock(C)); GetAgentPos(4, 5, C)]
[After]:{	@ctenv(setGoal(a10, 3, 0, 3, 1, 100),L,0);
	sendWest(a20, 3, 1, 100);
	sendEast(a30, 3, 1, 100);
	sendNorth(a40, 3, 1, 100);
	B(tile(C1, 1, 1));
	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
},
{	B(clock(C));
	GetAgentPos(4, 5, C)
}


agent writes: SetGoal [id=null, agent=a10, cell=Cell [x=3, y=0], goal=Cell [x=3, y=1], sanction=100, clock=2, time=2015-06-04 07:00:26.229]
org notification: SetGoal [id=null, agent=a10, cell=Cell [x=3, y=0], goal=Cell [x=3, y=1], sanction=100, clock=2, time=2015-06-04 07:00:26.229]
object notification: Obligation [subject=a10, obligation=[at(3, 0, a10)], sanction=[reduce(a10, 700)], deadline=20, time=2015-06-04 07:00:26.238, clock=2]
[Planbase]:{	@ctenv(setGoal(a20, 2, 1, 3, 1, 100),L,0);
	sendEast(a30, 3, 1, 100);
	sendNorth(a40, 3, 1, 100);
	B(tile(C1, 1, 1));
	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
},
{	GetAgentPos(4, 5, 2)
}


[new scheduled]:[@ctenv(setGoal(a20, 2, 1, 3, 1, 100),L,0); sendEast(a30, 3, 1, 100); sendNorth(a40, 3, 1, 100); B(tile(C1, 1, 1)); B(tile(C2, 2, 2)); B(tile(C3, 3, 3)); B(tile(C4, 4, 4)); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(3, 1, 700) : Infinite, priority 10), GetAgentPos(4, 5, 2)]
[After]:{	@ctenv(setGoal(a20, 2, 1, 3, 1, 100),L,0);
	sendEast(a30, 3, 1, 100);
	sendNorth(a40, 3, 1, 100);
	B(tile(C1, 1, 1));
	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
},
{	GetAgentPos(4, 5, 2)
}


agent writes: SetGoal [id=null, agent=a20, cell=Cell [x=2, y=1], goal=Cell [x=3, y=1], sanction=100, clock=2, time=2015-06-04 07:00:26.307]
org notification: SetGoal [id=null, agent=a20, cell=Cell [x=2, y=1], goal=Cell [x=3, y=1], sanction=100, clock=2, time=2015-06-04 07:00:26.307]
[Planbase]:{	@ctenv(setGoal(a30, 4, 1, 3, 1, 100),L,0);
	sendNorth(a40, 3, 1, 100);
	B(tile(C1, 1, 1));
	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a30, 4, 1, 3, 1, 100),L,0); sendNorth(a40, 3, 1, 100); B(tile(C1, 1, 1)); B(tile(C2, 2, 2)); B(tile(C3, 3, 3)); B(tile(C4, 4, 4)); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(3, 1, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setGoal(a30, 4, 1, 3, 1, 100),L,0);
	sendNorth(a40, 3, 1, 100);
	B(tile(C1, 1, 1));
	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
}


agent writes: SetGoal [id=null, agent=a30, cell=Cell [x=4, y=1], goal=Cell [x=3, y=1], sanction=100, clock=2, time=2015-06-04 07:00:26.401]
org notification: SetGoal [id=null, agent=a30, cell=Cell [x=4, y=1], goal=Cell [x=3, y=1], sanction=100, clock=2, time=2015-06-04 07:00:26.401]
object notification: Obligation [subject=a30, obligation=[at(4, 1, a30)], sanction=[reduce(a30, 700)], deadline=20, time=2015-06-04 07:00:26.405, clock=2]
Event processed adoptObligation(at(4, 1, a30), 20, reduce(a30, 700))
[Planbase]:{	@ctenv(setGoal(a40, 3, 2, 3, 1, 100),L,0);
	B(tile(C1, 1, 1));
	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
},
{	adoptObligation(at(4, 1, a30), 20, reduce(a30, 700))
}


[new scheduled]:[@ctenv(setGoal(a40, 3, 2, 3, 1, 100),L,0); B(tile(C1, 1, 1)); B(tile(C2, 2, 2)); B(tile(C3, 3, 3)); B(tile(C4, 4, 4)); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(3, 1, 700) : Infinite, priority 10), adoptObligation(at(4, 1, a30), 20, reduce(a30, 700))]
[After]:{	@ctenv(setGoal(a40, 3, 2, 3, 1, 100),L,0);
	B(tile(C1, 1, 1));
	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
},
{	adoptObligation(at(4, 1, a30), 20, reduce(a30, 700))
}


agent writes: SetGoal [id=null, agent=a40, cell=Cell [x=3, y=2], goal=Cell [x=3, y=1], sanction=100, clock=2, time=2015-06-04 07:00:26.474]
org notification: SetGoal [id=null, agent=a40, cell=Cell [x=3, y=2], goal=Cell [x=3, y=1], sanction=100, clock=2, time=2015-06-04 07:00:26.474]
object notification: Obligation [subject=a40, obligation=[at(3, 2, a40)], sanction=[reduce(a40, 700)], deadline=20, time=2015-06-04 07:00:26.478, clock=2]
[Planbase]:{	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
},
{	adoptz(at(4, 1, 700) : 4 Jun 2015 06:17:06 GMT, priority 10)
}


[new scheduled]:[B(tile(C2, 2, 2)); B(tile(C3, 3, 3)); B(tile(C4, 4, 4)); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(3, 1, 700) : Infinite, priority 10), adoptz(at(4, 1, 700) : 4 Jun 2015 06:17:06 GMT, priority 10)]
[After]:{	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
},
{	adoptz(at(4, 1, 700) : 4 Jun 2015 06:17:06 GMT, priority 10)
}


obligation to be adopted: at(4, 1, 700) : 4 Jun 2015 06:17:06 GMT, priority 10
[Planbase]:{	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(yellow, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[B(tile(C3, 3, 3)); B(tile(C4, 4, 4)); color(C4, a10, no, 100); color(C3, a20, no, 100); color(yellow, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(3, 1, 700) : Infinite, priority 10)]
[After]:{	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(yellow, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
}


[Planbase]:{	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(blue, a20, no, 100);
	color(yellow, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[B(tile(C4, 4, 4)); color(C4, a10, no, 100); color(blue, a20, no, 100); color(yellow, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(3, 1, 700) : Infinite, priority 10)]
[After]:{	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(blue, a20, no, 100);
	color(yellow, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
}


[Planbase]:{	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(yellow, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[color(blue, a10, no, 100); color(blue, a20, no, 100); color(yellow, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(3, 1, 700) : Infinite, priority 10)]
[After]:{	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(yellow, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
}


[Planbase]:{	@ctenv(setColor(a10, blue, no, 100),L,0);
	color(blue, a20, no, 100);
	color(yellow, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a10, blue, no, 100),L,0); color(blue, a20, no, 100); color(yellow, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(3, 1, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a10, blue, no, 100),L,0);
	color(blue, a20, no, 100);
	color(yellow, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=blue, agent=a10, type=no, sanction=100, time=2015-06-04 07:00:26.89, clock=2]
org notification: Color [id=null, color=blue, agent=a10, type=no, sanction=100, time=2015-06-04 07:00:26.89, clock=2]
object notification: Prohibition [subject=a10, prohibition=[color(blue, a10)], sanction=[reduce(a10, 100)], clock=2, time=2015-06-04 07:00:26.903]
[Planbase]:{	@ctenv(setColor(a20, blue, no, 100),L,0);
	color(yellow, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a20, blue, no, 100),L,0); color(yellow, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(3, 1, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a20, blue, no, 100),L,0);
	color(yellow, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=blue, agent=a20, type=no, sanction=100, time=2015-06-04 07:00:26.979, clock=2]
org notification: Color [id=null, color=blue, agent=a20, type=no, sanction=100, time=2015-06-04 07:00:26.979, clock=2]
[Planbase]:{	@ctenv(setColor(a30, yellow, no, 100),L,0);
	color(white, a40, no, 100);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a30, yellow, no, 100),L,0); color(white, a40, no, 100); dropgoal(surround(3, 1, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a30, yellow, no, 100),L,0);
	color(white, a40, no, 100);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=yellow, agent=a30, type=no, sanction=100, time=2015-06-04 07:00:27.04, clock=2]
org notification: Color [id=null, color=yellow, agent=a30, type=no, sanction=100, time=2015-06-04 07:00:27.04, clock=2]
object notification: Prohibition [subject=a30, prohibition=[color(yellow, a30)], sanction=[reduce(a30, 100)], clock=2, time=2015-06-04 07:00:27.043]
Event processed adoptProhibition(color(yellow, a30), reduce(a30, 100))
[Planbase]:{	@ctenv(setColor(a40, white, no, 100),L,0);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
},
{	adoptProhibition(color(yellow, a30), reduce(a30, 100))
}


[new scheduled]:[@ctenv(setColor(a40, white, no, 100),L,0); dropgoal(surround(3, 1, 700) : Infinite, priority 10), adoptProhibition(color(yellow, a30), reduce(a30, 100))]
[After]:{	@ctenv(setColor(a40, white, no, 100),L,0);
	dropgoal(surround(3, 1, 700) : Infinite, priority 10)
},
{	adoptProhibition(color(yellow, a30), reduce(a30, 100))
}


agent writes: Color [id=null, color=white, agent=a40, type=no, sanction=100, time=2015-06-04 07:00:27.09, clock=2]
org notification: Color [id=null, color=white, agent=a40, type=no, sanction=100, time=2015-06-04 07:00:27.09, clock=2]
object notification: Prohibition [subject=a40, prohibition=[color(white, a40)], sanction=[reduce(a40, 100)], clock=2, time=2015-06-04 07:00:27.094]
[Planbase]:{	AdoptP(useColor(yellow, 100));
	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[new scheduled]:[AdoptP(useColor(yellow, 100)); aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)]
[After]:{	AdoptP(useColor(yellow, 100));
	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[Planbase]:{	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[new scheduled]:[aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)]
[After]:{	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=3, time=2015-06-04 07:00:32.183]
object notification: Time [clock=3, time=2015-06-04 07:00:32.183]
object notification: Time [clock=3, time=2015-06-04 07:00:32.183]
org notification: Time [clock=3, time=2015-06-04 07:00:32.183]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(3)
[Planbase]:{	UpdateClock(3)
}


[new scheduled]:[UpdateClock(3)]
[After]:{	UpdateClock(3)
}


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=4, time=2015-06-04 07:00:42.187]
object notification: Time [clock=4, time=2015-06-04 07:00:42.187]
object notification: Time [clock=4, time=2015-06-04 07:00:42.187]
org notification: Time [clock=4, time=2015-06-04 07:00:42.187]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(4)
[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=5, time=2015-06-04 07:00:52.189]
object notification: Time [clock=5, time=2015-06-04 07:00:52.189]
object notification: Time [clock=5, time=2015-06-04 07:00:52.189]
object notification: Time [clock=5, time=2015-06-04 07:00:52.189]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(5)
[Planbase]:{	UpdateClock(5)
}


[new scheduled]:[UpdateClock(5)]
[After]:{	UpdateClock(5)
}


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=6, time=2015-06-04 07:01:02.193]
object notification: Time [clock=6, time=2015-06-04 07:01:02.193]
object notification: Time [clock=6, time=2015-06-04 07:01:02.193]
object notification: Time [clock=6, time=2015-06-04 07:01:02.193]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(6)
[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=7, time=2015-06-04 07:01:12.195]
object notification: Time [clock=7, time=2015-06-04 07:01:12.195]
object notification: Time [clock=7, time=2015-06-04 07:01:12.195]
object notification: Time [clock=7, time=2015-06-04 07:01:12.195]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(7)
[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=8, time=2015-06-04 07:01:22.197]
org notification: Time [clock=8, time=2015-06-04 07:01:22.197]
object notification: Time [clock=8, time=2015-06-04 07:01:22.197]
object notification: Time [clock=8, time=2015-06-04 07:01:22.197]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(8)
[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:


[new scheduled]:[]
[After]:


setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@53c3fdfb
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[4,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[4,1]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	Updated
},
{	B([A,B]=[4,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 4, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(yellow, no, 4, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 4, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a30[CTAH] going goal: 4,1 color: neco
org notification: Time [clock=9, time=2015-06-04 07:01:32.2]
object notification: Time [clock=9, time=2015-06-04 07:01:32.2]
object notification: Time [clock=9, time=2015-06-04 07:01:32.2]
object notification: Time [clock=9, time=2015-06-04 07:01:32.2]
a30[CTAH] paths: 1000
Need to wait 3 more seconds
a30[CTAH] path: 0
a30[CTAH] path: Path: [5][4] [5][3] [5][2] [5][1] [4][1]

a30[CTAH] moveStepToGoalTest returns I have chip: [5,3,no,no]
Event processed UpdateClock(9)
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(5, 3, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(5, 3)
		}
},
{	UpdateClock(9)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(5, 3, no); SentProposal(no, no, open, Clock)} else NextStep(5, 3), UpdateClock(9)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(5, 3, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(5, 3)
		}
},
{	UpdateClock(9)
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(5, 3, no);
			SentProposal(no, no, open, 8)
		}
	else	{	NextStep(5, 3)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(5, 3, no); SentProposal(no, no, open, 8)} else NextStep(5, 3)]
[After]:{	if	B(not no=no)
	then	{	NextStep(5, 3, no);
			SentProposal(no, no, open, 8)
		}
	else	{	NextStep(5, 3)
		}
}


[Planbase]:{	NextStep(5, 3)
}


[new scheduled]:[NextStep(5, 3)]
[After]:{	NextStep(5, 3)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 5, 3),L2,0);
	if	B(L2=[actionresult([5,3])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 3, Clock)
		};
	NoNextStep(5, 3)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 5, 3),L2,0); if B(L2=[actionresult([5,3])]) then {B(clock(Clock)); UpdatePosition(5, 3, Clock)}; NoNextStep(5, 3)]
[After]:{	@ctenv(moveStepToGoal(neco, 5, 3),L2,0);
	if	B(L2=[actionresult([5,3])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 3, Clock)
		};
	NoNextStep(5, 3)
}


Need to wait 3 more seconds
object notification: Position [subject=a30, id=null, cell=Cell [x=5, y=3], time=2015-06-04 07:01:37.011, clock=9]
org notification: Position [subject=a30, id=null, cell=Cell [x=5, y=3], time=2015-06-04 07:01:37.011, clock=9]
object notification: Obligation [subject=a30, obligation=[makeMove(5, 3, a30)], sanction=[reduce(a30, 300)], deadline=24, time=2015-06-04 07:01:37.031, clock=9]
a30[CTAH] moveStepToGoal returns: [5,3]
Event processed UpdatePosition(5, 3, 9)
Event processed adoptObligation(makeMove(5, 3, a30), 24, reduce(a30, 300))
[Planbase]:{	B(clock(Clock));
	UpdatePosition(5, 3, Clock);
	NoNextStep(5, 3)
},
{	UpdatePosition(5, 3, 9)
},
{	adoptObligation(makeMove(5, 3, a30), 24, reduce(a30, 300))
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(5, 3, Clock); NoNextStep(5, 3), UpdatePosition(5, 3, 9), adoptObligation(makeMove(5, 3, a30), 24, reduce(a30, 300))]
[After]:{	B(clock(Clock));
	UpdatePosition(5, 3, Clock);
	NoNextStep(5, 3)
},
{	UpdatePosition(5, 3, 9)
},
{	adoptObligation(makeMove(5, 3, a30), 24, reduce(a30, 300))
}


[Planbase]:{	UpdatePosition(5, 3, 9);
	NoNextStep(5, 3)
},
{	adoptz(makeMove(5, 3, 300) : 4 Jun 2015 06:18:20 GMT, priority 10)
}


[new scheduled]:[UpdatePosition(5, 3, 9); NoNextStep(5, 3), adoptz(makeMove(5, 3, 300) : 4 Jun 2015 06:18:20 GMT, priority 10)]
[After]:{	UpdatePosition(5, 3, 9);
	NoNextStep(5, 3)
},
{	adoptz(makeMove(5, 3, 300) : 4 Jun 2015 06:18:20 GMT, priority 10)
}


obligation to be adopted: makeMove(5, 3, 300) : 4 Jun 2015 06:18:20 GMT, priority 10
[Planbase]:{	NoNextStep(5, 3)
}


[new scheduled]:[NoNextStep(5, 3)]
[After]:{	NoNextStep(5, 3)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B([A,B]=[4,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[4,1]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[4,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 4, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(yellow, no, 4, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 4, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a30[CTAH] going goal: 4,1 color: neco
object notification: Time [clock=10, time=2015-06-04 07:01:42.203]
object notification: Time [clock=10, time=2015-06-04 07:01:42.203]
object notification: Time [clock=10, time=2015-06-04 07:01:42.203]
org notification: Time [clock=10, time=2015-06-04 07:01:42.203]
a30[CTAH] paths: 1000
Need to wait 2 more seconds
a30[CTAH] path: 0
a30[CTAH] path: Path: [5][3] [5][2] [5][1] [4][1]

a30[CTAH] moveStepToGoalTest returns I have chip: [5,2,no,no]
Event processed UpdateClock(10)
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(5, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(5, 2)
		}
},
{	UpdateClock(10)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(5, 2, no); SentProposal(no, no, open, Clock)} else NextStep(5, 2), UpdateClock(10)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(5, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(5, 2)
		}
},
{	UpdateClock(10)
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(5, 2, no);
			SentProposal(no, no, open, 9)
		}
	else	{	NextStep(5, 2)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(5, 2, no); SentProposal(no, no, open, 9)} else NextStep(5, 2)]
[After]:{	if	B(not no=no)
	then	{	NextStep(5, 2, no);
			SentProposal(no, no, open, 9)
		}
	else	{	NextStep(5, 2)
		}
}


[Planbase]:{	NextStep(5, 2)
}


[new scheduled]:[NextStep(5, 2)]
[After]:{	NextStep(5, 2)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 5, 2),L2,0);
	if	B(L2=[actionresult([5,2])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 2, Clock)
		};
	NoNextStep(5, 2)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 5, 2),L2,0); if B(L2=[actionresult([5,2])]) then {B(clock(Clock)); UpdatePosition(5, 2, Clock)}; NoNextStep(5, 2)]
[After]:{	@ctenv(moveStepToGoal(neco, 5, 2),L2,0);
	if	B(L2=[actionresult([5,2])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 2, Clock)
		};
	NoNextStep(5, 2)
}


Need to wait 2 more seconds
org notification: Position [subject=a30, id=null, cell=Cell [x=5, y=2], time=2015-06-04 07:01:46.211, clock=10]
object notification: Position [subject=a30, id=null, cell=Cell [x=5, y=2], time=2015-06-04 07:01:46.211, clock=10]
object notification: Points [subject=a30, time=2015-06-04 07:01:46.221, clock=10, value=900, id=null]
a30[CTAH] moveStepToGoal returns: [5,2]
Event processed UpdatePosition(5, 2, 10)
Event processed UpdatePoints(900)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(5, 2, Clock);
	NoNextStep(5, 2)
},
{	UpdatePosition(5, 2, 10)
},
{	UpdatePoints(900)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(5, 2, Clock); NoNextStep(5, 2), UpdatePosition(5, 2, 10), UpdatePoints(900)]
[After]:{	B(clock(Clock));
	UpdatePosition(5, 2, Clock);
	NoNextStep(5, 2)
},
{	UpdatePosition(5, 2, 10)
},
{	UpdatePoints(900)
}


[Planbase]:{	UpdatePosition(5, 2, 10);
	NoNextStep(5, 2)
}


[new scheduled]:[UpdatePosition(5, 2, 10); NoNextStep(5, 2)]
[After]:{	UpdatePosition(5, 2, 10);
	NoNextStep(5, 2)
}


[Planbase]:{	NoNextStep(5, 2)
}


[new scheduled]:[NoNextStep(5, 2)]
[After]:{	NoNextStep(5, 2)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B([A,B]=[4,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[4,1]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[4,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 4, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(yellow, no, 4, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 4, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a30[CTAH] going goal: 4,1 color: neco
org notification: Time [clock=11, time=2015-06-04 07:01:52.206]
object notification: Time [clock=11, time=2015-06-04 07:01:52.206]
object notification: Time [clock=11, time=2015-06-04 07:01:52.206]
object notification: Time [clock=11, time=2015-06-04 07:01:52.206]
org notification: Position [subject=a20, id=null, cell=Cell [x=5, y=4], time=2015-06-04 07:01:52.983, clock=11]
a30[CTAH] paths: 1000
Need to wait 2 more seconds
org notification: Position [subject=a20, id=null, cell=Cell [x=5, y=3], time=2015-06-04 07:01:54.217, clock=11]
a30[CTAH] path: 0
a30[CTAH] path: Path: [5][2] [5][1] [4][1]

a30[CTAH] moveStepToGoalTest returns I have chip: [5,1,no,no]
Event processed UpdateClock(11)
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(5, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(5, 1)
		}
},
{	UpdateClock(11)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(5, 1, no); SentProposal(no, no, open, Clock)} else NextStep(5, 1), UpdateClock(11)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(5, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(5, 1)
		}
},
{	UpdateClock(11)
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(5, 1, no);
			SentProposal(no, no, open, 10)
		}
	else	{	NextStep(5, 1)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(5, 1, no); SentProposal(no, no, open, 10)} else NextStep(5, 1)]
[After]:{	if	B(not no=no)
	then	{	NextStep(5, 1, no);
			SentProposal(no, no, open, 10)
		}
	else	{	NextStep(5, 1)
		}
}


[Planbase]:{	NextStep(5, 1)
}


[new scheduled]:[NextStep(5, 1)]
[After]:{	NextStep(5, 1)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 5, 1),L2,0);
	if	B(L2=[actionresult([5,1])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 1, Clock)
		};
	NoNextStep(5, 1)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 5, 1),L2,0); if B(L2=[actionresult([5,1])]) then {B(clock(Clock)); UpdatePosition(5, 1, Clock)}; NoNextStep(5, 1)]
[After]:{	@ctenv(moveStepToGoal(neco, 5, 1),L2,0);
	if	B(L2=[actionresult([5,1])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 1, Clock)
		};
	NoNextStep(5, 1)
}


Need to wait 3 more seconds
org notification: Position [subject=a30, id=null, cell=Cell [x=5, y=1], time=2015-06-04 07:01:56.201, clock=11]
object notification: Position [subject=a30, id=null, cell=Cell [x=5, y=1], time=2015-06-04 07:01:56.201, clock=11]
a30[CTAH] moveStepToGoal returns: [5,1]
Event processed UpdatePosition(5, 1, 11)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(5, 1, Clock);
	NoNextStep(5, 1)
},
{	UpdatePosition(5, 1, 11)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(5, 1, Clock); NoNextStep(5, 1), UpdatePosition(5, 1, 11)]
[After]:{	B(clock(Clock));
	UpdatePosition(5, 1, Clock);
	NoNextStep(5, 1)
},
{	UpdatePosition(5, 1, 11)
}


[Planbase]:{	UpdatePosition(5, 1, 11);
	NoNextStep(5, 1)
}


[new scheduled]:[UpdatePosition(5, 1, 11); NoNextStep(5, 1)]
[After]:{	UpdatePosition(5, 1, 11);
	NoNextStep(5, 1)
}


[Planbase]:{	NoNextStep(5, 1)
}


[new scheduled]:[NoNextStep(5, 1)]
[After]:{	NoNextStep(5, 1)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B([A,B]=[4,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[4,1]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[4,1]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 1, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 4, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(yellow, no, 4, 1, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 4, 1, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 1, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a30[CTAH] going goal: 4,1 color: neco
object notification: Time [clock=12, time=2015-06-04 07:02:02.209]
org notification: Time [clock=12, time=2015-06-04 07:02:02.209]
object notification: Time [clock=12, time=2015-06-04 07:02:02.209]
object notification: Time [clock=12, time=2015-06-04 07:02:02.209]
a30[CTAH] paths: 1000
Need to wait 2 more seconds
org notification: Position [subject=a20, id=null, cell=Cell [x=5, y=2], time=2015-06-04 07:02:08.031, clock=12]
a30[CTAH] path: 0
a30[CTAH] path: Path: [5][1] [4][1]

a30[CTAH] moveStepToGoalTest returns I have chip: [4,1,no,no]
Event processed UpdateClock(12)
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(4, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(4, 1)
		}
},
{	UpdateClock(12)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(4, 1, no); SentProposal(no, no, open, Clock)} else NextStep(4, 1), UpdateClock(12)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(4, 1, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(4, 1)
		}
},
{	UpdateClock(12)
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(4, 1, no);
			SentProposal(no, no, open, 11)
		}
	else	{	NextStep(4, 1)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(4, 1, no); SentProposal(no, no, open, 11)} else NextStep(4, 1)]
[After]:{	if	B(not no=no)
	then	{	NextStep(4, 1, no);
			SentProposal(no, no, open, 11)
		}
	else	{	NextStep(4, 1)
		}
}


[Planbase]:{	NextStep(4, 1)
}


[new scheduled]:[NextStep(4, 1)]
[After]:{	NextStep(4, 1)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 4, 1),L2,0);
	if	B(L2=[actionresult([4,1])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 1, Clock)
		};
	NoNextStep(4, 1)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 4, 1),L2,0); if B(L2=[actionresult([4,1])]) then {B(clock(Clock)); UpdatePosition(4, 1, Clock)}; NoNextStep(4, 1)]
[After]:{	@ctenv(moveStepToGoal(neco, 4, 1),L2,0);
	if	B(L2=[actionresult([4,1])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 1, Clock)
		};
	NoNextStep(4, 1)
}


Need to wait 2 more seconds
org notification: Position [subject=a30, id=null, cell=Cell [x=4, y=1], time=2015-06-04 07:02:09.008, clock=12]
object notification: Position [subject=a30, id=null, cell=Cell [x=4, y=1], time=2015-06-04 07:02:09.008, clock=12]
a30[CTAH] moveStepToGoal returns: [4,1]
Event processed UpdatePosition(4, 1, 12)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(4, 1, Clock);
	NoNextStep(4, 1)
},
{	UpdatePosition(4, 1, 12)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(4, 1, Clock); NoNextStep(4, 1), UpdatePosition(4, 1, 12)]
[After]:{	B(clock(Clock));
	UpdatePosition(4, 1, Clock);
	NoNextStep(4, 1)
},
{	UpdatePosition(4, 1, 12)
}


[Planbase]:{	UpdatePosition(4, 1, 12);
	NoNextStep(4, 1)
}


[new scheduled]:[UpdatePosition(4, 1, 12); NoNextStep(4, 1)]
[After]:{	UpdatePosition(4, 1, 12);
	NoNextStep(4, 1)
}


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=13, time=2015-06-04 07:02:12.211]
org notification: Time [clock=13, time=2015-06-04 07:02:12.211]
object notification: Time [clock=13, time=2015-06-04 07:02:12.211]
object notification: Time [clock=13, time=2015-06-04 07:02:12.211]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(13)
[Planbase]:{	UpdateClock(13)
}


[new scheduled]:[UpdateClock(13)]
[After]:{	UpdateClock(13)
}


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=14, time=2015-06-04 07:02:22.214]
object notification: Time [clock=14, time=2015-06-04 07:02:22.214]
org notification: Time [clock=14, time=2015-06-04 07:02:22.214]
object notification: Time [clock=14, time=2015-06-04 07:02:22.214]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(14)
[Planbase]:{	UpdateClock(14)
}


[new scheduled]:[UpdateClock(14)]
[After]:{	UpdateClock(14)
}


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=15, time=2015-06-04 07:02:32.219]
object notification: Time [clock=15, time=2015-06-04 07:02:32.219]
object notification: Time [clock=15, time=2015-06-04 07:02:32.219]
object notification: Time [clock=15, time=2015-06-04 07:02:32.219]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(15)
[Planbase]:{	UpdateClock(15)
}


[new scheduled]:[UpdateClock(15)]
[After]:{	UpdateClock(15)
}


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=16, time=2015-06-04 07:02:42.223]
object notification: Time [clock=16, time=2015-06-04 07:02:42.223]
object notification: Time [clock=16, time=2015-06-04 07:02:42.223]
object notification: Time [clock=16, time=2015-06-04 07:02:42.223]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(16)
[Planbase]:{	UpdateClock(16)
}


[new scheduled]:[UpdateClock(16)]
[After]:{	UpdateClock(16)
}


[Planbase]:


[new scheduled]:[]
[After]:


