2015-05-30 13:35:35,931 CONFIG [com.gigaspaces.logger] - Log file: /Users/dxd/git/ct3/logs/2015-05-30~13.35-gigaspaces-service-192.168.1.103-49024.log
-------------------------last log tuples start--------------------------------
Time [clock=9, time=2015-05-30 13:35:16.263]
Time [clock=5, time=2015-05-30 13:34:36.252]
Time [clock=2, time=2015-05-30 13:34:06.24]
Time [clock=7, time=2015-05-30 13:34:56.258]
Time [clock=1, time=2015-05-30 13:33:56.19]
Time [clock=6, time=2015-05-30 13:34:46.254]
Time [clock=3, time=2015-05-30 13:34:16.244]
Time [clock=8, time=2015-05-30 13:35:06.26]
Time [clock=4, time=2015-05-30 13:34:26.248]
Tile [id=null, cell=Cell [x=5, y=3], subject=brown, time=2015-05-30 13:33:56.144, clock=0]
Tile [id=null, cell=Cell [x=6, y=5], subject=yellow, time=2015-05-30 13:33:56.175, clock=0]
Tile [id=null, cell=Cell [x=4, y=1], subject=white, time=2015-05-30 13:33:56.099, clock=0]
Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-30 13:33:56.154, clock=0]
Tile [id=null, cell=Cell [x=1, y=1], subject=white, time=2015-05-30 13:33:55.912, clock=0]
Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-30 13:33:56.166, clock=0]
Tile [id=null, cell=Cell [x=4, y=4], subject=yellow, time=2015-05-30 13:33:56.121, clock=0]
Tile [id=null, cell=Cell [x=1, y=4], subject=white, time=2015-05-30 13:33:55.927, clock=0]
Tile [id=null, cell=Cell [x=2, y=3], subject=yellow, time=2015-05-30 13:33:55.958, clock=0]
Tile [id=null, cell=Cell [x=3, y=2], subject=brown, time=2015-05-30 13:33:56.035, clock=0]
Tile [id=null, cell=Cell [x=5, y=0], subject=blue, time=2015-05-30 13:33:56.135, clock=0]
Tile [id=null, cell=Cell [x=5, y=5], subject=blue, time=2015-05-30 13:33:56.151, clock=0]
Tile [id=null, cell=Cell [x=2, y=0], subject=brown, time=2015-05-30 13:33:55.943, clock=0]
Tile [id=null, cell=Cell [x=5, y=1], subject=yellow, time=2015-05-30 13:33:56.138, clock=0]
Tile [id=null, cell=Cell [x=3, y=5], subject=blue, time=2015-05-30 13:33:56.085, clock=0]
Tile [id=null, cell=Cell [x=0, y=5], subject=yellow, time=2015-05-30 13:33:55.886, clock=0]
Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-30 13:33:55.973, clock=0]
Tile [id=null, cell=Cell [x=6, y=3], subject=blue, time=2015-05-30 13:33:56.168, clock=0]
Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-30 13:33:56.109, clock=0]
Tile [id=null, cell=Cell [x=0, y=2], subject=yellow, time=2015-05-30 13:33:55.867, clock=0]
Tile [id=null, cell=Cell [x=6, y=6], subject=brown, time=2015-05-30 13:33:56.179, clock=0]
Tile [id=null, cell=Cell [x=4, y=6], subject=white, time=2015-05-30 13:33:56.13, clock=0]
Tile [id=null, cell=Cell [x=6, y=0], subject=white, time=2015-05-30 13:33:56.158, clock=0]
Tile [id=null, cell=Cell [x=4, y=2], subject=brown, time=2015-05-30 13:33:56.104, clock=0]
Tile [id=null, cell=Cell [x=5, y=2], subject=yellow, time=2015-05-30 13:33:56.141, clock=0]
Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-30 13:33:55.939, clock=0]
Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-30 13:33:56.163, clock=0]
Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-30 13:33:56.147, clock=0]
Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-30 13:33:55.969, clock=0]
Tile [id=null, cell=Cell [x=2, y=1], subject=blue, time=2015-05-30 13:33:55.948, clock=0]
Tile [id=null, cell=Cell [x=4, y=5], subject=brown, time=2015-05-30 13:33:56.127, clock=0]
Tile [id=null, cell=Cell [x=6, y=4], subject=brown, time=2015-05-30 13:33:56.171, clock=0]
Tile [id=null, cell=Cell [x=2, y=4], subject=yellow, time=2015-05-30 13:33:55.964, clock=0]
Tile [id=null, cell=Cell [x=3, y=6], subject=yellow, time=2015-05-30 13:33:56.089, clock=0]
Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-30 13:33:55.923, clock=0]
Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-30 13:33:56.092, clock=0]
Tile [id=null, cell=Cell [x=3, y=0], subject=brown, time=2015-05-30 13:33:55.978, clock=0]
Tile [id=null, cell=Cell [x=3, y=3], subject=yellow, time=2015-05-30 13:33:56.04, clock=0]
Tile [id=null, cell=Cell [x=2, y=2], subject=blue, time=2015-05-30 13:33:55.954, clock=0]
Tile [id=null, cell=Cell [x=3, y=1], subject=white, time=2015-05-30 13:33:55.983, clock=0]
Tile [id=null, cell=Cell [x=1, y=5], subject=yellow, time=2015-05-30 13:33:55.933, clock=0]
Tile [id=null, cell=Cell [x=3, y=4], subject=brown, time=2015-05-30 13:33:56.081, clock=0]
Tile [id=null, cell=Cell [x=1, y=2], subject=yellow, time=2015-05-30 13:33:55.917, clock=0]
Tile [id=null, cell=Cell [x=1, y=0], subject=white, time=2015-05-30 13:33:55.905, clock=0]
Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-30 13:33:55.895, clock=0]
Tile [id=null, cell=Cell [x=0, y=3], subject=blue, time=2015-05-30 13:33:55.874, clock=0]
Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-05-30 13:33:55.878, clock=0]
Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-30 13:33:55.863, clock=0]
Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-30 13:33:55.789, clock=0]
-------------------------last log tuples end----------------------------------
[CTAH] started agent 10
[CTAH] Added a new agent to the game by the name of 10.
[ENV] added agent a10
[CTAH] started agent 30
[CTAH] Added a new agent to the game by the name of 30.
[ENV] added agent a30
[CTAH] started agent 40
[CTAH] Added a new agent to the game by the name of 40.
[ENV] added agent a40
#########################Game started
#########################Game started
#########################Game started
object notification: Time [clock=1, time=2015-05-30 13:35:47.142]
org notification: Time [clock=1, time=2015-05-30 13:35:47.142]
object notification: Time [clock=1, time=2015-05-30 13:35:47.142]
object notification: Time [clock=1, time=2015-05-30 13:35:47.142]
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=white, time=2015-05-30 13:35:47.351, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=0], subject=white, time=2015-05-30 13:35:47.351, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=white, time=2015-05-30 13:35:47.351, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=white, time=2015-05-30 13:35:47.351, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-05-30 13:35:47.4, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-05-30 13:35:47.4, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-05-30 13:35:47.4, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-05-30 13:35:47.4, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=brown, time=2015-05-30 13:35:47.402, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=2], subject=brown, time=2015-05-30 13:35:47.402, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=brown, time=2015-05-30 13:35:47.402, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=brown, time=2015-05-30 13:35:47.402, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=white, time=2015-05-30 13:35:47.41, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=3], subject=white, time=2015-05-30 13:35:47.41, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=white, time=2015-05-30 13:35:47.41, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=white, time=2015-05-30 13:35:47.41, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-05-30 13:35:47.414, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-05-30 13:35:47.414, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-05-30 13:35:47.414, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-05-30 13:35:47.414, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=yellow, time=2015-05-30 13:35:47.42, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=yellow, time=2015-05-30 13:35:47.42, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=yellow, time=2015-05-30 13:35:47.42, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=yellow, time=2015-05-30 13:35:47.424, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=yellow, time=2015-05-30 13:35:47.424, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=5], subject=yellow, time=2015-05-30 13:35:47.42, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=yellow, time=2015-05-30 13:35:47.424, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-30 13:35:47.427, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-30 13:35:47.427, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-30 13:35:47.427, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=6], subject=yellow, time=2015-05-30 13:35:47.424, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-30 13:35:47.427, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=blue, time=2015-05-30 13:35:47.43, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=blue, time=2015-05-30 13:35:47.43, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=blue, time=2015-05-30 13:35:47.43, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=1], subject=blue, time=2015-05-30 13:35:47.43, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=2], subject=blue, time=2015-05-30 13:35:47.434, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=blue, time=2015-05-30 13:35:47.434, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=blue, time=2015-05-30 13:35:47.434, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=blue, time=2015-05-30 13:35:47.434, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-05-30 13:35:47.444, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-05-30 13:35:47.444, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-05-30 13:35:47.444, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-05-30 13:35:47.444, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=yellow, time=2015-05-30 13:35:47.448, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=yellow, time=2015-05-30 13:35:47.448, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=yellow, time=2015-05-30 13:35:47.448, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=4], subject=yellow, time=2015-05-30 13:35:47.448, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=white, time=2015-05-30 13:35:47.452, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=5], subject=white, time=2015-05-30 13:35:47.452, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=white, time=2015-05-30 13:35:47.452, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=white, time=2015-05-30 13:35:47.452, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-30 13:35:47.456, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-30 13:35:47.456, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-30 13:35:47.456, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-30 13:35:47.456, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-30 13:35:47.46, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-30 13:35:47.46, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-30 13:35:47.46, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-30 13:35:47.46, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=blue, time=2015-05-30 13:35:47.465, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=blue, time=2015-05-30 13:35:47.465, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=blue, time=2015-05-30 13:35:47.465, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=1], subject=blue, time=2015-05-30 13:35:47.465, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-30 13:35:47.468, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-30 13:35:47.468, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-30 13:35:47.468, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-30 13:35:47.468, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-05-30 13:35:47.474, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-05-30 13:35:47.474, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-05-30 13:35:47.474, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=white, time=2015-05-30 13:35:47.474, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=blue, time=2015-05-30 13:35:47.48, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=blue, time=2015-05-30 13:35:47.48, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=blue, time=2015-05-30 13:35:47.48, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=4], subject=blue, time=2015-05-30 13:35:47.48, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=white, time=2015-05-30 13:35:47.486, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=5], subject=white, time=2015-05-30 13:35:47.486, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=white, time=2015-05-30 13:35:47.486, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=white, time=2015-05-30 13:35:47.486, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=6], subject=yellow, time=2015-05-30 13:35:47.491, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=yellow, time=2015-05-30 13:35:47.491, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=yellow, time=2015-05-30 13:35:47.491, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=yellow, time=2015-05-30 13:35:47.491, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=yellow, time=2015-05-30 13:35:47.499, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=0], subject=yellow, time=2015-05-30 13:35:47.499, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=yellow, time=2015-05-30 13:35:47.499, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=yellow, time=2015-05-30 13:35:47.499, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-05-30 13:35:47.506, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-05-30 13:35:47.506, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-05-30 13:35:47.506, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-05-30 13:35:47.506, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=yellow, time=2015-05-30 13:35:47.512, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=2], subject=yellow, time=2015-05-30 13:35:47.512, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=yellow, time=2015-05-30 13:35:47.512, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=yellow, time=2015-05-30 13:35:47.512, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=brown, time=2015-05-30 13:35:47.519, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=3], subject=brown, time=2015-05-30 13:35:47.519, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=brown, time=2015-05-30 13:35:47.519, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=brown, time=2015-05-30 13:35:47.519, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=blue, time=2015-05-30 13:35:47.525, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=4], subject=blue, time=2015-05-30 13:35:47.525, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=blue, time=2015-05-30 13:35:47.525, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=blue, time=2015-05-30 13:35:47.525, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-30 13:35:47.533, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-30 13:35:47.533, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-30 13:35:47.533, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-30 13:35:47.533, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=brown, time=2015-05-30 13:35:47.54, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=6], subject=brown, time=2015-05-30 13:35:47.54, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=brown, time=2015-05-30 13:35:47.54, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=brown, time=2015-05-30 13:35:47.54, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-05-30 13:35:47.547, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-05-30 13:35:47.547, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-05-30 13:35:47.547, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=white, time=2015-05-30 13:35:47.547, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=white, time=2015-05-30 13:35:47.553, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=1], subject=white, time=2015-05-30 13:35:47.553, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=white, time=2015-05-30 13:35:47.553, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=white, time=2015-05-30 13:35:47.553, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-30 13:35:47.561, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-30 13:35:47.561, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-30 13:35:47.561, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-30 13:35:47.561, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=brown, time=2015-05-30 13:35:47.575, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=brown, time=2015-05-30 13:35:47.575, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=3], subject=brown, time=2015-05-30 13:35:47.575, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=white, time=2015-05-30 13:35:47.58, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=white, time=2015-05-30 13:35:47.58, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=white, time=2015-05-30 13:35:47.586, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=4], subject=white, time=2015-05-30 13:35:47.58, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=white, time=2015-05-30 13:35:47.586, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=yellow, time=2015-05-30 13:35:47.591, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=yellow, time=2015-05-30 13:35:47.591, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=blue, time=2015-05-30 13:35:47.594, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=5], subject=white, time=2015-05-30 13:35:47.586, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=6], subject=yellow, time=2015-05-30 13:35:47.591, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=0], subject=blue, time=2015-05-30 13:35:47.594, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=1], subject=blue, time=2015-05-30 13:35:47.596, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-30 13:35:47.597, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=3], subject=brown, time=2015-05-30 13:35:47.6, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=4], subject=brown, time=2015-05-30 13:35:47.602, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=5], subject=blue, time=2015-05-30 13:35:47.604, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=blue, time=2015-05-30 13:35:47.594, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=blue, time=2015-05-30 13:35:47.596, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-30 13:35:47.597, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=blue, time=2015-05-30 13:35:47.596, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=brown, time=2015-05-30 13:35:47.575, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=brown, time=2015-05-30 13:35:47.6, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-30 13:35:47.597, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=brown, time=2015-05-30 13:35:47.602, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=brown, time=2015-05-30 13:35:47.6, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=white, time=2015-05-30 13:35:47.58, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=brown, time=2015-05-30 13:35:47.602, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=white, time=2015-05-30 13:35:47.586, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=blue, time=2015-05-30 13:35:47.604, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=yellow, time=2015-05-30 13:35:47.591, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=blue, time=2015-05-30 13:35:47.604, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=yellow, time=2015-05-30 13:35:47.606, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=blue, time=2015-05-30 13:35:47.594, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=white, time=2015-05-30 13:35:47.611, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=yellow, time=2015-05-30 13:35:47.606, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-30 13:35:47.615, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=white, time=2015-05-30 13:35:47.611, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=blue, time=2015-05-30 13:35:47.596, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=blue, time=2015-05-30 13:35:47.632, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-30 13:35:47.597, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=brown, time=2015-05-30 13:35:47.6, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-30 13:35:47.615, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-30 13:35:47.636, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=brown, time=2015-05-30 13:35:47.602, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-30 13:35:47.639, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=blue, time=2015-05-30 13:35:47.632, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=blue, time=2015-05-30 13:35:47.604, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=yellow, time=2015-05-30 13:35:47.641, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-30 13:35:47.636, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=yellow, time=2015-05-30 13:35:47.606, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=yellow, time=2015-05-30 13:35:47.643, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=6], subject=yellow, time=2015-05-30 13:35:47.606, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=white, time=2015-05-30 13:35:47.611, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-30 13:35:47.639, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-30 13:35:47.615, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=0], subject=white, time=2015-05-30 13:35:47.611, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=yellow, time=2015-05-30 13:35:47.641, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=blue, time=2015-05-30 13:35:47.632, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=yellow, time=2015-05-30 13:35:47.643, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-30 13:35:47.636, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-30 13:35:47.615, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-30 13:35:47.639, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=yellow, time=2015-05-30 13:35:47.641, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=yellow, time=2015-05-30 13:35:47.643, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=2], subject=blue, time=2015-05-30 13:35:47.632, clock=0]
org notification: Goal [id=null, cell=Cell [x=3, y=3], agent=null, time=2015-05-30 13:35:47.708, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-30 13:35:47.636, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-30 13:35:47.639, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=5], subject=yellow, time=2015-05-30 13:35:47.641, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=6], subject=yellow, time=2015-05-30 13:35:47.643, clock=0]
org notification: Group [name=g, ra=a20, clock=0, time=2015-05-30 13:35:47.951]
#########################Game Initialized
#########################Game Initialized
#########################Game Initialized
object notification: Prohibition [subject=a10, prohibition=[rejectRequests(a10)], sanction=[reduce(a10, 300)], clock=1, time=2015-05-30 13:35:48.2]
AGENT Thread-16: current phase name: Norm Phase
AGENT Thread-12: current phase name: Norm Phase
we have 1 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
we have 1 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
AGENT Thread-14: current phase name: Norm Phase
we have 1 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
object notification: Prohibition [subject=a30, prohibition=[rejectRequests(a30)], sanction=[reduce(a30, 300)], clock=1, time=2015-05-30 13:35:48.214]
object notification: Prohibition [subject=a10, prohibition=[moveTooFast(a10)], sanction=[reduce(a10, 300)], clock=1, time=2015-05-30 13:35:48.242]
object notification: Prohibition [subject=a30, prohibition=[moveTooFast(a30)], sanction=[reduce(a30, 300)], clock=1, time=2015-05-30 13:35:48.259]
object notification: Prohibition [subject=a40, prohibition=[rejectRequests(a40)], sanction=[reduce(a40, 300)], clock=1, time=2015-05-30 13:35:48.236]
object notification: Prohibition [subject=a40, prohibition=[moveTooFast(a40)], sanction=[reduce(a40, 300)], clock=1, time=2015-05-30 13:35:48.286]
[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateClock(1)
Event processed UpdateTile(white, 0, 0)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateTile(blue, 0, 1)
Event processed UpdateClock(1)
Event processed UpdateTile(brown, 0, 2)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateTile(white, 0, 0)
Event processed UpdateTile(white, 0, 3)
Event processed UpdateClock(1)
Event processed UpdateTile(blue, 0, 1)
Event processed UpdateTile(white, 0, 4)
Event processed UpdateTile(white, 0, 0)
Event processed UpdateTile(brown, 0, 2)
Event processed UpdateTile(blue, 0, 1)
Event processed UpdateTile(yellow, 0, 5)
Event processed UpdateTile(white, 0, 3)
Event processed UpdateTile(brown, 0, 2)
Event processed UpdateTile(white, 0, 4)
Event processed UpdateTile(white, 0, 3)
Event processed UpdateTile(yellow, 0, 5)
Event processed UpdateTile(white, 0, 4)
Event processed UpdateTile(yellow, 0, 6)
Event processed UpdateTile(yellow, 0, 5)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(yellow, 0, 6)
Event processed UpdateTile(blue, 1, 1)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(yellow, 0, 6)
Event processed UpdateTile(blue, 1, 2)
Event processed UpdateTile(blue, 1, 1)
Event processed UpdateTile(blue, 1, 3)
Event processed UpdateTile(blue, 1, 2)
Event processed UpdateTile(yellow, 1, 4)
Event processed UpdateTile(blue, 1, 3)
Event processed UpdateTile(white, 1, 5)
Event processed UpdateTile(yellow, 1, 4)
Event processed UpdateTile(yellow, 1, 6)
Event processed UpdateTile(white, 1, 5)
Event processed UpdateTile(yellow, 1, 6)
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(blue, 2, 1)
Event processed UpdateTile(blue, 2, 1)
Event processed UpdateTile(blue, 1, 1)
Event processed UpdateTile(brown, 2, 2)
Event processed UpdateTile(brown, 2, 2)
Event processed UpdateTile(blue, 1, 2)
Event processed UpdateTile(white, 2, 3)
Event processed UpdateTile(white, 2, 3)
Event processed UpdateTile(blue, 1, 3)
Event processed UpdateTile(blue, 2, 4)
Event processed UpdateTile(blue, 2, 4)
Event processed UpdateTile(yellow, 1, 4)
Event processed UpdateTile(white, 2, 5)
Event processed UpdateTile(white, 2, 5)
Event processed UpdateTile(white, 1, 5)
Event processed UpdateTile(yellow, 2, 6)
Event processed UpdateTile(yellow, 2, 6)
Event processed UpdateTile(yellow, 1, 6)
Event processed UpdateTile(yellow, 3, 0)
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(brown, 3, 1)
Event processed UpdateTile(yellow, 3, 0)
Event processed UpdateTile(blue, 2, 1)
Event processed UpdateTile(yellow, 3, 2)
Event processed UpdateTile(brown, 2, 2)
Event processed UpdateTile(brown, 3, 3)
Event processed UpdateTile(white, 2, 3)
Event processed UpdateTile(blue, 3, 4)
Event processed UpdateTile(blue, 2, 4)
Event processed UpdateTile(yellow, 3, 5)
Event processed UpdateTile(white, 2, 5)
Event processed UpdateTile(brown, 3, 6)
Event processed UpdateTile(yellow, 2, 6)
Event processed UpdateTile(white, 4, 0)
Event processed UpdateTile(yellow, 3, 0)
Event processed UpdateTile(white, 4, 1)
Event processed UpdateTile(brown, 3, 1)
Event processed UpdateTile(brown, 3, 1)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(yellow, 3, 2)
Event processed UpdateTile(brown, 4, 3)
Event processed UpdateTile(brown, 3, 3)
Event processed UpdateTile(yellow, 3, 2)
Event processed UpdateTile(white, 4, 4)
Event processed UpdateTile(blue, 3, 4)
Event processed UpdateTile(brown, 3, 3)
Event processed UpdateTile(white, 4, 5)
Event processed UpdateTile(yellow, 3, 5)
Event processed UpdateTile(blue, 3, 4)
Event processed UpdateTile(brown, 3, 6)
Event processed UpdateTile(yellow, 4, 6)
Event processed UpdateTile(yellow, 3, 5)
Event processed UpdateTile(blue, 5, 0)
Event processed UpdateTile(white, 4, 0)
Event processed UpdateTile(brown, 3, 6)
Event processed UpdateTile(blue, 5, 1)
Event processed UpdateTile(white, 4, 1)
Event processed UpdateTile(white, 4, 0)
Event processed UpdateTile(brown, 5, 2)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(brown, 5, 3)
Event processed UpdateTile(brown, 4, 3)
Event processed UpdateTile(white, 4, 1)
Event processed UpdateTile(brown, 5, 4)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(brown, 4, 3)
Event processed UpdateTile(white, 4, 4)
Event processed UpdateTile(white, 4, 4)
Event processed UpdateTile(white, 4, 5)
Event processed UpdateTile(blue, 5, 5)
Event processed UpdateTile(white, 4, 5)
Event processed UpdateTile(yellow, 5, 6)
Event processed UpdateTile(yellow, 4, 6)
Event processed UpdateTile(white, 6, 0)
Event processed UpdateTile(blue, 5, 0)
Event processed UpdateTile(yellow, 4, 6)
Event processed UpdateTile(brown, 6, 1)
Event processed UpdateTile(blue, 5, 1)
Event processed UpdateTile(brown, 5, 2)
Event processed UpdateTile(blue, 6, 2)
Event processed UpdateTile(brown, 5, 3)
Event processed UpdateTile(brown, 5, 4)
Event processed UpdateTile(blue, 5, 5)
Event processed UpdateTile(yellow, 5, 6)
Event processed UpdateTile(white, 6, 0)
Event processed UpdateTile(brown, 6, 1)
Event processed UpdateTile(brown, 6, 3)
Event processed UpdateTile(blue, 6, 2)
Event processed UpdateTile(brown, 6, 3)
Event processed UpdateTile(white, 6, 4)
Event processed UpdateTile(yellow, 6, 5)
Event processed UpdateTile(yellow, 6, 6)
Event processed UpdateTile(blue, 5, 0)
Event processed UpdateTile(white, 6, 4)
Event processed UpdateTile(blue, 5, 1)
Event processed UpdateTile(brown, 5, 2)
Event processed UpdateTile(yellow, 6, 5)
Event processed adoptProhibition(rejectRequests(a30), reduce(a30, 300))
Event processed adoptProhibition(moveTooFast(a30), reduce(a30, 300))
Event processed UpdateTile(yellow, 6, 6)
Event processed UpdateTile(brown, 5, 3)
Event processed adoptProhibition(rejectRequests(a40), reduce(a40, 300))
Event processed UpdateTile(brown, 5, 4)
Event processed adoptProhibition(moveTooFast(a40), reduce(a40, 300))
Event processed UpdateTile(blue, 5, 5)
Event processed UpdateTile(yellow, 5, 6)
Event processed UpdateTile(white, 6, 0)
Event processed UpdateTile(brown, 6, 1)
Event processed UpdateTile(blue, 6, 2)
Event processed UpdateTile(brown, 6, 3)
Event processed UpdateTile(white, 6, 4)
Event processed UpdateTile(yellow, 6, 5)
Event processed UpdateTile(yellow, 6, 6)
Event processed adoptProhibition(rejectRequests(a10), reduce(a10, 300))
Event processed adoptProhibition(moveTooFast(a10), reduce(a10, 300))
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(1)
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(brown, 0, 2)
},
{	UpdateTile(white, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(yellow, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(yellow, 1, 4)
},
{	UpdateTile(white, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(blue, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(blue, 2, 4)
},
{	UpdateTile(white, 2, 5)
},
{	UpdateTile(yellow, 2, 6)
},
{	UpdateTile(yellow, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(yellow, 3, 2)
},
{	UpdateTile(brown, 3, 3)
},
{	UpdateTile(blue, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(brown, 3, 6)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(white, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(white, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(yellow, 4, 6)
},
{	UpdateTile(blue, 5, 0)
},
{	UpdateTile(blue, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(brown, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(blue, 5, 5)
},
{	UpdateTile(yellow, 5, 6)
},
{	UpdateTile(white, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(blue, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(yellow, 6, 5)
},
{	UpdateTile(yellow, 6, 6)
},
{	adoptProhibition(rejectRequests(a30), reduce(a30, 300))
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(1), UpdateTile(white, 0, 0), UpdateTile(blue, 0, 1), UpdateTile(brown, 0, 2), UpdateTile(white, 0, 3), UpdateTile(white, 0, 4), UpdateTile(yellow, 0, 5), UpdateTile(yellow, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(blue, 1, 1), UpdateTile(blue, 1, 2), UpdateTile(blue, 1, 3), UpdateTile(yellow, 1, 4), UpdateTile(white, 1, 5), UpdateTile(yellow, 1, 6), UpdateTile(white, 2, 0), UpdateTile(blue, 2, 1), UpdateTile(brown, 2, 2), UpdateTile(white, 2, 3), UpdateTile(blue, 2, 4), UpdateTile(white, 2, 5), UpdateTile(yellow, 2, 6), UpdateTile(yellow, 3, 0), UpdateTile(brown, 3, 1), UpdateTile(yellow, 3, 2), UpdateTile(brown, 3, 3), UpdateTile(blue, 3, 4), UpdateTile(yellow, 3, 5), UpdateTile(brown, 3, 6), UpdateTile(white, 4, 0), UpdateTile(white, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(brown, 4, 3), UpdateTile(white, 4, 4), UpdateTile(white, 4, 5), UpdateTile(yellow, 4, 6), UpdateTile(blue, 5, 0), UpdateTile(blue, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(brown, 5, 3), UpdateTile(brown, 5, 4), UpdateTile(blue, 5, 5), UpdateTile(yellow, 5, 6), UpdateTile(white, 6, 0), UpdateTile(brown, 6, 1), UpdateTile(blue, 6, 2), UpdateTile(brown, 6, 3), UpdateTile(white, 6, 4), UpdateTile(yellow, 6, 5), UpdateTile(yellow, 6, 6), adoptProhibition(rejectRequests(a30), reduce(a30, 300)), adoptProhibition(moveTooFast(a30), reduce(a30, 300))]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(1)
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(brown, 0, 2)
},
{	UpdateTile(white, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(yellow, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(yellow, 1, 4)
},
{	UpdateTile(white, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(blue, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(blue, 2, 4)
},
{	UpdateTile(white, 2, 5)
},
{	UpdateTile(yellow, 2, 6)
},
{	UpdateTile(yellow, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(yellow, 3, 2)
},
{	UpdateTile(brown, 3, 3)
},
{	UpdateTile(blue, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(brown, 3, 6)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(white, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(white, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(yellow, 4, 6)
},
{	UpdateTile(blue, 5, 0)
},
{	UpdateTile(blue, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(brown, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(blue, 5, 5)
},
{	UpdateTile(yellow, 5, 6)
},
{	UpdateTile(white, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(blue, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(yellow, 6, 5)
},
{	UpdateTile(yellow, 6, 6)
},
{	adoptProhibition(rejectRequests(a30), reduce(a30, 300))
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
}


[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(1)
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(brown, 0, 2)
},
{	UpdateTile(white, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(yellow, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(yellow, 1, 4)
},
{	UpdateTile(white, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(blue, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(blue, 2, 4)
},
{	UpdateTile(white, 2, 5)
},
{	UpdateTile(yellow, 2, 6)
},
{	UpdateTile(yellow, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(yellow, 3, 2)
},
{	UpdateTile(brown, 3, 3)
},
{	UpdateTile(blue, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(brown, 3, 6)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(white, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(white, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(yellow, 4, 6)
},
{	UpdateTile(blue, 5, 0)
},
{	UpdateTile(blue, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(brown, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(blue, 5, 5)
},
{	UpdateTile(yellow, 5, 6)
},
{	UpdateTile(white, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(blue, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(yellow, 6, 5)
},
{	UpdateTile(yellow, 6, 6)
},
{	adoptProhibition(rejectRequests(a40), reduce(a40, 300))
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(1), UpdateTile(white, 0, 0), UpdateTile(blue, 0, 1), UpdateTile(brown, 0, 2), UpdateTile(white, 0, 3), UpdateTile(white, 0, 4), UpdateTile(yellow, 0, 5), UpdateTile(yellow, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(blue, 1, 1), UpdateTile(blue, 1, 2), UpdateTile(blue, 1, 3), UpdateTile(yellow, 1, 4), UpdateTile(white, 1, 5), UpdateTile(yellow, 1, 6), UpdateTile(white, 2, 0), UpdateTile(blue, 2, 1), UpdateTile(brown, 2, 2), UpdateTile(white, 2, 3), UpdateTile(blue, 2, 4), UpdateTile(white, 2, 5), UpdateTile(yellow, 2, 6), UpdateTile(yellow, 3, 0), UpdateTile(brown, 3, 1), UpdateTile(yellow, 3, 2), UpdateTile(brown, 3, 3), UpdateTile(blue, 3, 4), UpdateTile(yellow, 3, 5), UpdateTile(brown, 3, 6), UpdateTile(white, 4, 0), UpdateTile(white, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(brown, 4, 3), UpdateTile(white, 4, 4), UpdateTile(white, 4, 5), UpdateTile(yellow, 4, 6), UpdateTile(blue, 5, 0), UpdateTile(blue, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(brown, 5, 3), UpdateTile(brown, 5, 4), UpdateTile(blue, 5, 5), UpdateTile(yellow, 5, 6), UpdateTile(white, 6, 0), UpdateTile(brown, 6, 1), UpdateTile(blue, 6, 2), UpdateTile(brown, 6, 3), UpdateTile(white, 6, 4), UpdateTile(yellow, 6, 5), UpdateTile(yellow, 6, 6), adoptProhibition(rejectRequests(a40), reduce(a40, 300)), adoptProhibition(moveTooFast(a40), reduce(a40, 300))]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(1)
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(brown, 0, 2)
},
{	UpdateTile(white, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(yellow, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(yellow, 1, 4)
},
{	UpdateTile(white, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(blue, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(blue, 2, 4)
},
{	UpdateTile(white, 2, 5)
},
{	UpdateTile(yellow, 2, 6)
},
{	UpdateTile(yellow, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(yellow, 3, 2)
},
{	UpdateTile(brown, 3, 3)
},
{	UpdateTile(blue, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(brown, 3, 6)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(white, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(white, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(yellow, 4, 6)
},
{	UpdateTile(blue, 5, 0)
},
{	UpdateTile(blue, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(brown, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(blue, 5, 5)
},
{	UpdateTile(yellow, 5, 6)
},
{	UpdateTile(white, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(blue, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(yellow, 6, 5)
},
{	UpdateTile(yellow, 6, 6)
},
{	adoptProhibition(rejectRequests(a40), reduce(a40, 300))
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
}


[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(1)
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(brown, 0, 2)
},
{	UpdateTile(white, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(yellow, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(yellow, 1, 4)
},
{	UpdateTile(white, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(blue, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(blue, 2, 4)
},
{	UpdateTile(white, 2, 5)
},
{	UpdateTile(yellow, 2, 6)
},
{	UpdateTile(yellow, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(yellow, 3, 2)
},
{	UpdateTile(brown, 3, 3)
},
{	UpdateTile(blue, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(brown, 3, 6)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(white, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(white, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(yellow, 4, 6)
},
{	UpdateTile(blue, 5, 0)
},
{	UpdateTile(blue, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(brown, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(blue, 5, 5)
},
{	UpdateTile(yellow, 5, 6)
},
{	UpdateTile(white, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(blue, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(yellow, 6, 5)
},
{	UpdateTile(yellow, 6, 6)
},
{	adoptProhibition(rejectRequests(a10), reduce(a10, 300))
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(1), UpdateTile(white, 0, 0), UpdateTile(blue, 0, 1), UpdateTile(brown, 0, 2), UpdateTile(white, 0, 3), UpdateTile(white, 0, 4), UpdateTile(yellow, 0, 5), UpdateTile(yellow, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(blue, 1, 1), UpdateTile(blue, 1, 2), UpdateTile(blue, 1, 3), UpdateTile(yellow, 1, 4), UpdateTile(white, 1, 5), UpdateTile(yellow, 1, 6), UpdateTile(white, 2, 0), UpdateTile(blue, 2, 1), UpdateTile(brown, 2, 2), UpdateTile(white, 2, 3), UpdateTile(blue, 2, 4), UpdateTile(white, 2, 5), UpdateTile(yellow, 2, 6), UpdateTile(yellow, 3, 0), UpdateTile(brown, 3, 1), UpdateTile(yellow, 3, 2), UpdateTile(brown, 3, 3), UpdateTile(blue, 3, 4), UpdateTile(yellow, 3, 5), UpdateTile(brown, 3, 6), UpdateTile(white, 4, 0), UpdateTile(white, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(brown, 4, 3), UpdateTile(white, 4, 4), UpdateTile(white, 4, 5), UpdateTile(yellow, 4, 6), UpdateTile(blue, 5, 0), UpdateTile(blue, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(brown, 5, 3), UpdateTile(brown, 5, 4), UpdateTile(blue, 5, 5), UpdateTile(yellow, 5, 6), UpdateTile(white, 6, 0), UpdateTile(brown, 6, 1), UpdateTile(blue, 6, 2), UpdateTile(brown, 6, 3), UpdateTile(white, 6, 4), UpdateTile(yellow, 6, 5), UpdateTile(yellow, 6, 6), adoptProhibition(rejectRequests(a10), reduce(a10, 300)), adoptProhibition(moveTooFast(a10), reduce(a10, 300))]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(1)
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(brown, 0, 2)
},
{	UpdateTile(white, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(yellow, 0, 5)
},
{	UpdateTile(yellow, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(blue, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(yellow, 1, 4)
},
{	UpdateTile(white, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(blue, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(white, 2, 3)
},
{	UpdateTile(blue, 2, 4)
},
{	UpdateTile(white, 2, 5)
},
{	UpdateTile(yellow, 2, 6)
},
{	UpdateTile(yellow, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(yellow, 3, 2)
},
{	UpdateTile(brown, 3, 3)
},
{	UpdateTile(blue, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(brown, 3, 6)
},
{	UpdateTile(white, 4, 0)
},
{	UpdateTile(white, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(white, 4, 4)
},
{	UpdateTile(white, 4, 5)
},
{	UpdateTile(yellow, 4, 6)
},
{	UpdateTile(blue, 5, 0)
},
{	UpdateTile(blue, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(brown, 5, 3)
},
{	UpdateTile(brown, 5, 4)
},
{	UpdateTile(blue, 5, 5)
},
{	UpdateTile(yellow, 5, 6)
},
{	UpdateTile(white, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(blue, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(yellow, 6, 5)
},
{	UpdateTile(yellow, 6, 6)
},
{	adoptProhibition(rejectRequests(a10), reduce(a10, 300))
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@6b1701fd
[CTAH] The created APLList : [game_initialized]
[CTAH] Array of Terms: [Lapapl.data.Term;@349d963f
[CTAH] The created APLList : [game_initialized]
[CTAH] Array of Terms: [Lapapl.data.Term;@961e946
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	AdoptP(rejectRequests(300));
	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), AdoptP(rejectRequests(300)); aprohibition(rejectRequests(300) -> reduce(300), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	AdoptP(rejectRequests(300));
	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	AdoptP(rejectRequests(300));
	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), AdoptP(rejectRequests(300)); aprohibition(rejectRequests(300) -> reduce(300), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	AdoptP(rejectRequests(300));
	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	AdoptP(rejectRequests(300));
	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), AdoptP(rejectRequests(300)); aprohibition(rejectRequests(300) -> reduce(300), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	AdoptP(rejectRequests(300));
	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized), aprohibition(rejectRequests(300) -> reduce(300), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized), aprohibition(rejectRequests(300) -> reduce(300), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized), aprohibition(rejectRequests(300) -> reduce(300), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	aprohibition(rejectRequests(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(3); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(2); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(0); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getRole(3);
	getPos
}


[new scheduled]:[getRole(3); getPos]
[After]:{	getRole(3);
	getPos
}


[Planbase]:{	getRole(2);
	getPos
}


[new scheduled]:[getRole(2); getPos]
[After]:{	getRole(2);
	getPos
}


[Planbase]:{	getRole(0);
	getPos
}


[new scheduled]:[getRole(0); getPos]
[After]:{	getRole(0);
	getPos
}


[Planbase]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(3),L1,0); B(L1=[actionresult(X)]); GetRole(3, X); getPos]
[After]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[Planbase]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(2),L1,0); B(L1=[actionresult(X)]); GetRole(2, X); getPos]
[After]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[Planbase]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(0),L1,0); B(L1=[actionresult(X)]); GetRole(0, X); getPos]
[After]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[Planbase]:{	GetRole(3, none);
	getPos
}


[new scheduled]:[GetRole(3, none); getPos]
[After]:{	GetRole(3, none);
	getPos
}


[Planbase]:{	GetRole(2, none);
	getPos
}


[new scheduled]:[GetRole(2, none); getPos]
[After]:{	GetRole(2, none);
	getPos
}


[Planbase]:{	GetRole(0, none);
	getPos
}


[new scheduled]:[GetRole(0, none); getPos]
[After]:{	GetRole(0, none);
	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[CTAH] Agentposition: [0,6]
[CTAH] Agentposition: [6,6]
[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[CTAH] Agentposition: [0,0]
[Planbase]:{	B(clock(C));
	GetAgentPos(0, 6, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(0, 6, C)]
[After]:{	B(clock(C));
	GetAgentPos(0, 6, C)
}


[Planbase]:{	B(clock(C));
	GetAgentPos(6, 6, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(6, 6, C)]
[After]:{	B(clock(C));
	GetAgentPos(6, 6, C)
}


[Planbase]:{	B(clock(C));
	GetAgentPos(0, 0, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(0, 0, C)]
[After]:{	B(clock(C));
	GetAgentPos(0, 0, C)
}


[Planbase]:{	GetAgentPos(0, 6, 1)
}


[new scheduled]:[GetAgentPos(0, 6, 1)]
[After]:{	GetAgentPos(0, 6, 1)
}


[Planbase]:{	GetAgentPos(6, 6, 1)
}


[new scheduled]:[GetAgentPos(6, 6, 1)]
[After]:{	GetAgentPos(6, 6, 1)
}


[Planbase]:{	GetAgentPos(0, 0, 1)
}


[new scheduled]:[GetAgentPos(0, 0, 1)]
[After]:{	GetAgentPos(0, 0, 1)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=2, time=2015-05-30 13:35:57.181]
object notification: Time [clock=2, time=2015-05-30 13:35:57.181]
object notification: Time [clock=2, time=2015-05-30 13:35:57.181]
object notification: Time [clock=2, time=2015-05-30 13:35:57.181]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(2)
Event processed UpdateClock(2)
Event processed UpdateClock(2)
[Planbase]:{	UpdateClock(2)
}


[new scheduled]:[UpdateClock(2)]
[After]:{	UpdateClock(2)
}


[Planbase]:{	UpdateClock(2)
}


[new scheduled]:[UpdateClock(2)]
[After]:{	UpdateClock(2)
}


[Planbase]:{	UpdateClock(2)
}


[new scheduled]:[UpdateClock(2)]
[After]:{	UpdateClock(2)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=3, time=2015-05-30 13:36:07.184]
org notification: Time [clock=3, time=2015-05-30 13:36:07.184]
object notification: Time [clock=3, time=2015-05-30 13:36:07.184]
object notification: Time [clock=3, time=2015-05-30 13:36:07.184]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(3)
Event processed UpdateClock(3)
Event processed UpdateClock(3)
[Planbase]:{	UpdateClock(3)
}


[new scheduled]:[UpdateClock(3)]
[After]:{	UpdateClock(3)
}


[Planbase]:{	UpdateClock(3)
}


[new scheduled]:[UpdateClock(3)]
[After]:{	UpdateClock(3)
}


[Planbase]:{	UpdateClock(3)
}


[new scheduled]:[UpdateClock(3)]
[After]:{	UpdateClock(3)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=4, time=2015-05-30 13:36:17.186]
org notification: Time [clock=4, time=2015-05-30 13:36:17.186]
object notification: Time [clock=4, time=2015-05-30 13:36:17.186]
object notification: Time [clock=4, time=2015-05-30 13:36:17.186]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(4)
Event processed UpdateClock(4)
Event processed UpdateClock(4)
[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=5, time=2015-05-30 13:36:27.19]
org notification: Time [clock=5, time=2015-05-30 13:36:27.19]
object notification: Time [clock=5, time=2015-05-30 13:36:27.19]
object notification: Time [clock=5, time=2015-05-30 13:36:27.19]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(5)
Event processed UpdateClock(5)
Event processed UpdateClock(5)
[Planbase]:{	UpdateClock(5)
}


[new scheduled]:[UpdateClock(5)]
[After]:{	UpdateClock(5)
}


[Planbase]:{	UpdateClock(5)
}


[new scheduled]:[UpdateClock(5)]
[After]:{	UpdateClock(5)
}


[Planbase]:{	UpdateClock(5)
}


[new scheduled]:[UpdateClock(5)]
[After]:{	UpdateClock(5)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=6, time=2015-05-30 13:36:37.194]
object notification: Time [clock=6, time=2015-05-30 13:36:37.194]
object notification: Time [clock=6, time=2015-05-30 13:36:37.194]
object notification: Time [clock=6, time=2015-05-30 13:36:37.194]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(6)
Event processed UpdateClock(6)
Event processed UpdateClock(6)
[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=7, time=2015-05-30 13:36:47.198]
object notification: Time [clock=7, time=2015-05-30 13:36:47.198]
object notification: Time [clock=7, time=2015-05-30 13:36:47.198]
object notification: Time [clock=7, time=2015-05-30 13:36:47.198]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(7)
Event processed UpdateClock(7)
Event processed UpdateClock(7)
[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
object notification: Time [clock=8, time=2015-05-30 13:36:57.203]
org notification: Time [clock=8, time=2015-05-30 13:36:57.203]
object notification: Time [clock=8, time=2015-05-30 13:36:57.203]
object notification: Time [clock=8, time=2015-05-30 13:36:57.203]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(8)
Event processed UpdateClock(8)
Event processed UpdateClock(8)
[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=9, time=2015-05-30 13:37:07.207]
object notification: Time [clock=9, time=2015-05-30 13:37:07.207]
org notification: Time [clock=9, time=2015-05-30 13:37:07.207]
object notification: Time [clock=9, time=2015-05-30 13:37:07.207]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(9)
Event processed UpdateClock(9)
Event processed UpdateClock(9)
[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=10, time=2015-05-30 13:37:17.208]
object notification: Time [clock=10, time=2015-05-30 13:37:17.208]
org notification: Time [clock=10, time=2015-05-30 13:37:17.208]
object notification: Time [clock=10, time=2015-05-30 13:37:17.208]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(10)
Event processed UpdateClock(10)
Event processed UpdateClock(10)
[Planbase]:{	UpdateClock(10)
}


[new scheduled]:[UpdateClock(10)]
[After]:{	UpdateClock(10)
}


[Planbase]:{	UpdateClock(10)
}


[new scheduled]:[UpdateClock(10)]
[After]:{	UpdateClock(10)
}


[Planbase]:{	UpdateClock(10)
}


[new scheduled]:[UpdateClock(10)]
[After]:{	UpdateClock(10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=11, time=2015-05-30 13:37:27.211]
object notification: Time [clock=11, time=2015-05-30 13:37:27.211]
object notification: Time [clock=11, time=2015-05-30 13:37:27.211]
object notification: Time [clock=11, time=2015-05-30 13:37:27.211]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(11)
Event processed UpdateClock(11)
Event processed UpdateClock(11)
[Planbase]:{	UpdateClock(11)
}


[new scheduled]:[UpdateClock(11)]
[After]:{	UpdateClock(11)
}


[Planbase]:{	UpdateClock(11)
}


[new scheduled]:[UpdateClock(11)]
[After]:{	UpdateClock(11)
}


[Planbase]:{	UpdateClock(11)
}


[new scheduled]:[UpdateClock(11)]
[After]:{	UpdateClock(11)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=12, time=2015-05-30 13:37:37.214]
org notification: Time [clock=12, time=2015-05-30 13:37:37.214]
object notification: Time [clock=12, time=2015-05-30 13:37:37.214]
object notification: Time [clock=12, time=2015-05-30 13:37:37.214]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(12)
Event processed UpdateClock(12)
Event processed UpdateClock(12)
[Planbase]:{	UpdateClock(12)
}


[new scheduled]:[UpdateClock(12)]
[After]:{	UpdateClock(12)
}


[Planbase]:{	UpdateClock(12)
}


[new scheduled]:[UpdateClock(12)]
[After]:{	UpdateClock(12)
}


[Planbase]:{	UpdateClock(12)
}


[new scheduled]:[UpdateClock(12)]
[After]:{	UpdateClock(12)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=9221, agent=a20, agent2=a10, clock=12, time=2015-05-30 13:37:46.086]
[Planbase]:


[new scheduled]:[]
[After]:


object notification: Obligation [subject=a10, obligation=[acceptRequest(9221)], sanction=[reduce(a10, 200)], deadline=17, time=2015-05-30 13:37:46.101, clock=12]
object notification: Obligation [subject=a10, obligation=[respondToRequest(9221)], sanction=[reduce(a10, 300)], deadline=17, time=2015-05-30 13:37:46.103, clock=12]
Event processed @ctenv(functionToList(proposal(proposal, 1, 9221, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(acceptRequest(9221), 17, reduce(a10, 200))
Event processed adoptObligation(respondToRequest(9221), 17, reduce(a10, 300))
[Planbase]:{	@ctenv(functionToList(proposal(proposal, 1, 9221, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(9221), 17, reduce(a10, 200))
},
{	adoptObligation(respondToRequest(9221), 17, reduce(a10, 300))
}


[new scheduled]:[@ctenv(functionToList(proposal(proposal, 1, 9221, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(acceptRequest(9221), 17, reduce(a10, 200)), adoptObligation(respondToRequest(9221), 17, reduce(a10, 300))]
[After]:{	@ctenv(functionToList(proposal(proposal, 1, 9221, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(acceptRequest(9221), 17, reduce(a10, 200))
},
{	adoptObligation(respondToRequest(9221), 17, reduce(a10, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@211b3c6a
[CTAH] The created APLList : [proposal,1,9221,open]
[Planbase]:{	if	B([actionresult([proposal,1,9221,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,9221,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(9221, 200) : 30 May 2015 12:54:26 GMT, priority 10)
},
{	adoptz(respondToRequest(9221, 300) : 30 May 2015 12:54:26 GMT, priority 10)
}


[new scheduled]:[if B([actionresult([proposal,1,9221,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,9221,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(acceptRequest(9221, 200) : 30 May 2015 12:54:26 GMT, priority 10), adoptz(respondToRequest(9221, 300) : 30 May 2015 12:54:26 GMT, priority 10)]
[After]:{	if	B([actionresult([proposal,1,9221,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,9221,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(acceptRequest(9221, 200) : 30 May 2015 12:54:26 GMT, priority 10)
},
{	adoptz(respondToRequest(9221, 300) : 30 May 2015 12:54:26 GMT, priority 10)
}


obligation to be adopted: acceptRequest(9221, 200) : 30 May 2015 12:54:26 GMT, priority 10
obligation to be adopted: respondToRequest(9221, 300) : 30 May 2015 12:54:26 GMT, priority 10
[Planbase]:{	if	B([actionresult([proposal,1,9221,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B([actionresult([proposal,1,9221,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([proposal,1,9221,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 9221, open)
		}
}


[new scheduled]:[if B(proposal=proposal) then ReceivedProposal(1, 9221, open)]
[After]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 9221, open)
		}
}


[Planbase]:{	ReceivedProposal(1, 9221, open)
}


[new scheduled]:[ReceivedProposal(1, 9221, open)]
[After]:{	ReceivedProposal(1, 9221, open)
}


[Planbase]:


[new scheduled]:[if B(not scoreAfterExchange(9221, Score)) then getScoreAfterExchange(9221); B(scoreAfterExchange(9221, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(9221, Answer), if B(not scoreAfterExchange(9221, Score)) then getScoreAfterExchange(9221); B(scoreAfterExchange(9221, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(9221, Answer), if G(acceptRequests(9221, V2)) then skip else if B(not receivedP(1, 9221, closed(A))) then adoptz(respondToRequest(9221, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequests(9221, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 9221, closed(A)))
			then	{	adoptz(respondToRequest(9221, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(not scoreAfterExchange(9221, Score))
	then	{	getScoreAfterExchange(9221)
		};
	B(scoreAfterExchange(9221, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, Answer)
},
{	if	B(not scoreAfterExchange(9221, Score))
	then	{	getScoreAfterExchange(9221)
		};
	B(scoreAfterExchange(9221, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, Answer)
}


[Planbase]:{	if	B(not receivedP(1, 9221, closed(A)))
	then	{	adoptz(respondToRequest(9221, 50) : Infinite, priority 10)
		}
},
{	getScoreAfterExchange(9221);
	B(scoreAfterExchange(9221, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, Answer)
},
{	getScoreAfterExchange(9221);
	B(scoreAfterExchange(9221, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, Answer)
}


[new scheduled]:[if B(not receivedP(1, 9221, closed(A))) then adoptz(respondToRequest(9221, 50) : Infinite, priority 10), getScoreAfterExchange(9221); B(scoreAfterExchange(9221, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(9221, Answer), getScoreAfterExchange(9221); B(scoreAfterExchange(9221, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(9221, Answer)]
[After]:{	if	B(not receivedP(1, 9221, closed(A)))
	then	{	adoptz(respondToRequest(9221, 50) : Infinite, priority 10)
		}
},
{	getScoreAfterExchange(9221);
	B(scoreAfterExchange(9221, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, Answer)
},
{	getScoreAfterExchange(9221);
	B(scoreAfterExchange(9221, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, Answer)
}


[Planbase]:{	adoptz(respondToRequest(9221, 50) : Infinite, priority 10)
},
{	GetScoreAfterExchange(9221, yes);
	B(scoreAfterExchange(9221, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, Answer)
},
{	GetScoreAfterExchange(9221, yes);
	B(scoreAfterExchange(9221, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, Answer)
}


[new scheduled]:[adoptz(respondToRequest(9221, 50) : Infinite, priority 10), GetScoreAfterExchange(9221, yes); B(scoreAfterExchange(9221, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(9221, Answer), GetScoreAfterExchange(9221, yes); B(scoreAfterExchange(9221, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(9221, Answer)]
[After]:{	adoptz(respondToRequest(9221, 50) : Infinite, priority 10)
},
{	GetScoreAfterExchange(9221, yes);
	B(scoreAfterExchange(9221, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, Answer)
},
{	GetScoreAfterExchange(9221, yes);
	B(scoreAfterExchange(9221, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, Answer)
}


obligation to be adopted: respondToRequest(9221, 50) : Infinite, priority 10
[Planbase]:{	B(scoreAfterExchange(9221, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, Answer)
},
{	B(scoreAfterExchange(9221, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, Answer)
}


[new scheduled]:[if B(not scoreAfterExchange(9221, Score)) then getScoreAfterExchange(9221); B(scoreAfterExchange(9221, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(9221, Answer), if G(acceptRequests(9221, V2)) then skip else if B(not receivedP(1, 9221, closed(A))) then adoptz(respondToRequest(9221, 50) : Infinite, priority 10), B(scoreAfterExchange(9221, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(9221, Answer), B(scoreAfterExchange(9221, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(9221, Answer)]
[After]:{	if	B(not scoreAfterExchange(9221, Score))
	then	{	getScoreAfterExchange(9221)
		};
	B(scoreAfterExchange(9221, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, Answer)
},
{	if	G(acceptRequests(9221, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 9221, closed(A)))
			then	{	adoptz(respondToRequest(9221, 50) : Infinite, priority 10)
				}
		}
},
{	B(scoreAfterExchange(9221, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, Answer)
},
{	B(scoreAfterExchange(9221, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, Answer)
}


[Planbase]:{	B(scoreAfterExchange(9221, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, Answer)
},
{	if	B(not receivedP(1, 9221, closed(A)))
	then	{	adoptz(respondToRequest(9221, 50) : Infinite, priority 10)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, Answer)
}


[new scheduled]:[B(scoreAfterExchange(9221, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(9221, Answer), if B(not receivedP(1, 9221, closed(A))) then adoptz(respondToRequest(9221, 50) : Infinite, priority 10), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(9221, Answer), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>200) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(Answer=reject); sendResponse(9221, Answer)]
[After]:{	B(scoreAfterExchange(9221, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, Answer)
},
{	if	B(not receivedP(1, 9221, closed(A)))
	then	{	adoptz(respondToRequest(9221, 50) : Infinite, priority 10)
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, Answer)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, Answer)
}


[Planbase]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, Answer)
},
{	adoptz(respondToRequest(9221, 50) : Infinite, priority 10)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, accept)
}


[new scheduled]:[B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>50) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(Answer=reject); sendResponse(9221, Answer), adoptz(respondToRequest(9221, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(9221, accept), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>200) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<200) then B(accept=reject); sendResponse(9221, accept)]
[After]:{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, Answer)
},
{	adoptz(respondToRequest(9221, 50) : Infinite, priority 10)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, accept)
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>200)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<200)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, accept)
}


obligation to be adopted: respondToRequest(9221, 50) : Infinite, priority 10
[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, accept)
},
{	B(accept=accept);
	sendResponse(9221, accept)
},
{	B(accept=accept);
	sendResponse(9221, accept)
}


[new scheduled]:[if G(acceptRequests(9221, V2)) then skip else if B(not receivedP(1, 9221, closed(A))) then adoptz(respondToRequest(9221, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>50) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<50) then B(accept=reject); sendResponse(9221, accept), B(accept=accept); sendResponse(9221, accept), B(accept=accept); sendResponse(9221, accept)]
[After]:{	if	G(acceptRequests(9221, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 9221, closed(A)))
			then	{	adoptz(respondToRequest(9221, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>50)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<50)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(9221, accept)
},
{	B(accept=accept);
	sendResponse(9221, accept)
},
{	B(accept=accept);
	sendResponse(9221, accept)
}


[Planbase]:{	if	B(not receivedP(1, 9221, closed(A)))
	then	{	adoptz(respondToRequest(9221, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(9221, accept)
},
{	sendResponse(9221, accept)
},
{	sendResponse(9221, accept)
}


[new scheduled]:[if B(not receivedP(1, 9221, closed(A))) then adoptz(respondToRequest(9221, 50) : Infinite, priority 10), B(accept=accept); sendResponse(9221, accept), sendResponse(9221, accept), sendResponse(9221, accept)]
[After]:{	if	B(not receivedP(1, 9221, closed(A)))
	then	{	adoptz(respondToRequest(9221, 50) : Infinite, priority 10)
		}
},
{	B(accept=accept);
	sendResponse(9221, accept)
},
{	sendResponse(9221, accept)
},
{	sendResponse(9221, accept)
}


[Planbase]:{	adoptz(respondToRequest(9221, 50) : Infinite, priority 10)
},
{	sendResponse(9221, accept)
},
{	@ctenv(sendResponse(9221, accept),L1,0);
	SentResponse(accept, 9221)
},
{	@ctenv(sendResponse(9221, accept),L1,0);
	SentResponse(accept, 9221)
}


[new scheduled]:[adoptz(respondToRequest(9221, 50) : Infinite, priority 10), sendResponse(9221, accept), @ctenv(sendResponse(9221, accept),L1,0); SentResponse(accept, 9221), @ctenv(sendResponse(9221, accept),L1,0); SentResponse(accept, 9221)]
[After]:{	adoptz(respondToRequest(9221, 50) : Infinite, priority 10)
},
{	sendResponse(9221, accept)
},
{	@ctenv(sendResponse(9221, accept),L1,0);
	SentResponse(accept, 9221)
},
{	@ctenv(sendResponse(9221, accept),L1,0);
	SentResponse(accept, 9221)
}


a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 1.

a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 1.

obligation to be adopted: respondToRequest(9221, 50) : Infinite, priority 10
org notification: Response [id=9221, response=accepted, clock=12, time=2015-05-30 13:37:46.837]
org notification: Response [id=9221, response=accepted, clock=12, time=2015-05-30 13:37:46.855]
[Planbase]:{	@ctenv(sendResponse(9221, accept),L1,0);
	SentResponse(accept, 9221)
}


[new scheduled]:[@ctenv(sendResponse(9221, accept),L1,0); SentResponse(accept, 9221)]
[After]:{	@ctenv(sendResponse(9221, accept),L1,0);
	SentResponse(accept, 9221)
}


a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 1.

org notification: Response [id=9221, response=accepted, clock=12, time=2015-05-30 13:37:46.933]
[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=13, time=2015-05-30 13:37:47.216]
org notification: Time [clock=13, time=2015-05-30 13:37:47.216]
object notification: Time [clock=13, time=2015-05-30 13:37:47.216]
object notification: Time [clock=13, time=2015-05-30 13:37:47.216]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(13)
Event processed UpdateClock(13)
Event processed UpdateClock(13)
[Planbase]:{	UpdateClock(13)
}


[new scheduled]:[UpdateClock(13)]
[After]:{	UpdateClock(13)
}


[Planbase]:{	UpdateClock(13)
}


[new scheduled]:[UpdateClock(13)]
[After]:{	UpdateClock(13)
}


[Planbase]:{	UpdateClock(13)
}


[new scheduled]:[UpdateClock(13)]
[After]:{	UpdateClock(13)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=14, time=2015-05-30 13:37:57.219]
object notification: Time [clock=14, time=2015-05-30 13:37:57.219]
org notification: Time [clock=14, time=2015-05-30 13:37:57.219]
object notification: Time [clock=14, time=2015-05-30 13:37:57.219]
[Planbase]:


[new scheduled]:[]
[Planbase]:


[new scheduled]:[]
[After]:


[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(14)
Event processed UpdateClock(14)
Event processed UpdateClock(14)
[Planbase]:{	UpdateClock(14)
}


[new scheduled]:[UpdateClock(14)]
[After]:{	UpdateClock(14)
}


[Planbase]:{	UpdateClock(14)
}


[new scheduled]:[UpdateClock(14)]
[After]:{	UpdateClock(14)
}


[Planbase]:{	UpdateClock(14)
}


[new scheduled]:[UpdateClock(14)]
[After]:{	UpdateClock(14)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=15, time=2015-05-30 13:38:07.222]
object notification: Time [clock=15, time=2015-05-30 13:38:07.222]
org notification: Time [clock=15, time=2015-05-30 13:38:07.222]
object notification: Time [clock=15, time=2015-05-30 13:38:07.222]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(15)
Event processed UpdateClock(15)
[Planbase]:{	UpdateClock(15)
}


[new scheduled]:[UpdateClock(15)]
[After]:{	UpdateClock(15)
}


Event processed UpdateClock(15)
[Planbase]:{	UpdateClock(15)
}


[new scheduled]:[UpdateClock(15)]
[After]:{	UpdateClock(15)
}


[Planbase]:{	UpdateClock(15)
}


[new scheduled]:[UpdateClock(15)]
[After]:{	UpdateClock(15)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=16, time=2015-05-30 13:38:17.226]
org notification: Time [clock=16, time=2015-05-30 13:38:17.226]
object notification: Time [clock=16, time=2015-05-30 13:38:17.226]
object notification: Time [clock=16, time=2015-05-30 13:38:17.226]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(16)
Event processed UpdateClock(16)
Event processed UpdateClock(16)
[Planbase]:{	UpdateClock(16)
}


[new scheduled]:[UpdateClock(16)]
[After]:{	UpdateClock(16)
}


[Planbase]:{	UpdateClock(16)
}


[new scheduled]:[UpdateClock(16)]
[After]:{	UpdateClock(16)
}


[Planbase]:{	UpdateClock(16)
}


[new scheduled]:[UpdateClock(16)]
[After]:{	UpdateClock(16)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=17, time=2015-05-30 13:38:27.229]
org notification: Time [clock=17, time=2015-05-30 13:38:27.229]
object notification: Time [clock=17, time=2015-05-30 13:38:27.229]
object notification: Time [clock=17, time=2015-05-30 13:38:27.229]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(17)
[Planbase]:{	UpdateClock(17)
}


[new scheduled]:[UpdateClock(17)]
[After]:{	UpdateClock(17)
}


Event processed UpdateClock(17)
Event processed UpdateClock(17)
[Planbase]:{	UpdateClock(17)
}


[new scheduled]:[UpdateClock(17)]
[After]:{	UpdateClock(17)
}


[Planbase]:{	UpdateClock(17)
}


[new scheduled]:[UpdateClock(17)]
[After]:{	UpdateClock(17)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=18, time=2015-05-30 13:38:37.233]
object notification: Time [clock=18, time=2015-05-30 13:38:37.233]
object notification: Time [clock=18, time=2015-05-30 13:38:37.233]
object notification: Time [clock=18, time=2015-05-30 13:38:37.233]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(18)
Event processed UpdateClock(18)
Event processed UpdateClock(18)
[Planbase]:{	UpdateClock(18)
}


[new scheduled]:[UpdateClock(18)]
[After]:{	UpdateClock(18)
}


[Planbase]:{	UpdateClock(18)
}


[new scheduled]:[UpdateClock(18)]
[After]:{	UpdateClock(18)
}


[Planbase]:{	UpdateClock(18)
}


[new scheduled]:[UpdateClock(18)]
[After]:{	UpdateClock(18)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=19, time=2015-05-30 13:38:47.237]
object notification: Time [clock=19, time=2015-05-30 13:38:47.237]
object notification: Time [clock=19, time=2015-05-30 13:38:47.237]
org notification: Time [clock=19, time=2015-05-30 13:38:47.237]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(19)
Event processed UpdateClock(19)
Event processed UpdateClock(19)
[Planbase]:{	UpdateClock(19)
}


[new scheduled]:[UpdateClock(19)]
[After]:{	UpdateClock(19)
}


[Planbase]:{	UpdateClock(19)
}


[new scheduled]:[UpdateClock(19)]
[After]:{	UpdateClock(19)
}


[Planbase]:{	UpdateClock(19)
}


[new scheduled]:[UpdateClock(19)]
[After]:{	UpdateClock(19)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=20, time=2015-05-30 13:38:57.241]
object notification: Time [clock=20, time=2015-05-30 13:38:57.241]
object notification: Time [clock=20, time=2015-05-30 13:38:57.241]
object notification: Time [clock=20, time=2015-05-30 13:38:57.241]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(20)
Event processed UpdateClock(20)
Event processed UpdateClock(20)
[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=21, time=2015-05-30 13:39:07.244]
org notification: Time [clock=21, time=2015-05-30 13:39:07.244]
object notification: Time [clock=21, time=2015-05-30 13:39:07.244]
object notification: Time [clock=21, time=2015-05-30 13:39:07.244]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(21)
Event processed UpdateClock(21)
Event processed UpdateClock(21)
[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=22, time=2015-05-30 13:39:17.248]
object notification: Time [clock=22, time=2015-05-30 13:39:17.248]
object notification: Time [clock=22, time=2015-05-30 13:39:17.248]
org notification: Time [clock=22, time=2015-05-30 13:39:17.248]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(22)
Event processed UpdateClock(22)
Event processed UpdateClock(22)
[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=23, time=2015-05-30 13:39:27.25]
org notification: Time [clock=23, time=2015-05-30 13:39:27.25]
object notification: Time [clock=23, time=2015-05-30 13:39:27.25]
object notification: Time [clock=23, time=2015-05-30 13:39:27.25]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(23)
Event processed UpdateClock(23)
Event processed UpdateClock(23)
[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=24, time=2015-05-30 13:39:37.254]
object notification: Time [clock=24, time=2015-05-30 13:39:37.254]
object notification: Time [clock=24, time=2015-05-30 13:39:37.254]
object notification: Time [clock=24, time=2015-05-30 13:39:37.254]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(24)
Event processed UpdateClock(24)
Event processed UpdateClock(24)
[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=25, time=2015-05-30 13:39:47.258]
object notification: Time [clock=25, time=2015-05-30 13:39:47.258]
object notification: Time [clock=25, time=2015-05-30 13:39:47.258]
object notification: Time [clock=25, time=2015-05-30 13:39:47.258]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(25)
[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


Event processed UpdateClock(25)
Event processed UpdateClock(25)
[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=26, time=2015-05-30 13:39:57.262]
object notification: Time [clock=26, time=2015-05-30 13:39:57.262]
org notification: Time [clock=26, time=2015-05-30 13:39:57.262]
object notification: Time [clock=26, time=2015-05-30 13:39:57.262]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(26)
Event processed UpdateClock(26)
[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


Event processed UpdateClock(26)
[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=27, time=2015-05-30 13:40:07.267]
object notification: Time [clock=27, time=2015-05-30 13:40:07.267]
org notification: Time [clock=27, time=2015-05-30 13:40:07.267]
object notification: Time [clock=27, time=2015-05-30 13:40:07.267]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(27)
Event processed UpdateClock(27)
Event processed UpdateClock(27)
[Planbase]:{	UpdateClock(27)
}


[new scheduled]:[UpdateClock(27)]
[After]:{	UpdateClock(27)
}


[Planbase]:{	UpdateClock(27)
}


[new scheduled]:[UpdateClock(27)]
[After]:{	UpdateClock(27)
}


[Planbase]:{	UpdateClock(27)
}


[new scheduled]:[UpdateClock(27)]
[After]:{	UpdateClock(27)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=28, time=2015-05-30 13:40:17.27]
object notification: Time [clock=28, time=2015-05-30 13:40:17.27]
object notification: Time [clock=28, time=2015-05-30 13:40:17.27]
object notification: Time [clock=28, time=2015-05-30 13:40:17.27]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(28)
Event processed UpdateClock(28)
Event processed UpdateClock(28)
[Planbase]:{	UpdateClock(28)
}


[new scheduled]:[UpdateClock(28)]
[After]:{	UpdateClock(28)
}


[Planbase]:{	UpdateClock(28)
}


[new scheduled]:[UpdateClock(28)]
[After]:{	UpdateClock(28)
}


[Planbase]:{	UpdateClock(28)
}


[new scheduled]:[UpdateClock(28)]
[After]:{	UpdateClock(28)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=29, time=2015-05-30 13:40:27.273]
object notification: Time [clock=29, time=2015-05-30 13:40:27.273]
org notification: Time [clock=29, time=2015-05-30 13:40:27.273]
object notification: Time [clock=29, time=2015-05-30 13:40:27.273]
[Planbase]:


[new scheduled]:[]
[Planbase]:


[new scheduled]:[]
[After]:


[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(29)
Event processed UpdateClock(29)
Event processed UpdateClock(29)
[Planbase]:{	UpdateClock(29)
}


[new scheduled]:[UpdateClock(29)]
[After]:{	UpdateClock(29)
}


[Planbase]:{	UpdateClock(29)
}


[new scheduled]:[UpdateClock(29)]
[After]:{	UpdateClock(29)
}


[Planbase]:{	UpdateClock(29)
}


[new scheduled]:[UpdateClock(29)]
[After]:{	UpdateClock(29)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=30, time=2015-05-30 13:40:37.276]
object notification: Time [clock=30, time=2015-05-30 13:40:37.276]
object notification: Time [clock=30, time=2015-05-30 13:40:37.276]
object notification: Time [clock=30, time=2015-05-30 13:40:37.276]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(30)
Event processed UpdateClock(30)
Event processed UpdateClock(30)
[Planbase]:{	UpdateClock(30)
}


[new scheduled]:[UpdateClock(30)]
[After]:{	UpdateClock(30)
}


[Planbase]:{	UpdateClock(30)
}


[new scheduled]:[UpdateClock(30)]
[After]:{	UpdateClock(30)
}


[Planbase]:{	UpdateClock(30)
}


[new scheduled]:[UpdateClock(30)]
[After]:{	UpdateClock(30)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=31, time=2015-05-30 13:40:47.278]
object notification: Time [clock=31, time=2015-05-30 13:40:47.278]
org notification: Time [clock=31, time=2015-05-30 13:40:47.278]
object notification: Time [clock=31, time=2015-05-30 13:40:47.278]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(31)
Event processed UpdateClock(31)
Event processed UpdateClock(31)
[Planbase]:{	UpdateClock(31)
}


[new scheduled]:[UpdateClock(31)]
[After]:{	UpdateClock(31)
}


[Planbase]:{	UpdateClock(31)
}


[new scheduled]:[UpdateClock(31)]
[After]:{	UpdateClock(31)
}


[Planbase]:{	UpdateClock(31)
}


[new scheduled]:[UpdateClock(31)]
[After]:{	UpdateClock(31)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=32, time=2015-05-30 13:40:57.282]
object notification: Time [clock=32, time=2015-05-30 13:40:57.282]
object notification: Time [clock=32, time=2015-05-30 13:40:57.282]
org notification: Time [clock=32, time=2015-05-30 13:40:57.282]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(32)
Event processed UpdateClock(32)
Event processed UpdateClock(32)
[Planbase]:{	UpdateClock(32)
}


[new scheduled]:[UpdateClock(32)]
[After]:{	UpdateClock(32)
}


[Planbase]:{	UpdateClock(32)
}


[new scheduled]:[UpdateClock(32)]
[After]:{	UpdateClock(32)
}


[Planbase]:{	UpdateClock(32)
}


[new scheduled]:[UpdateClock(32)]
[After]:{	UpdateClock(32)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=33, time=2015-05-30 13:41:07.286]
object notification: Time [clock=33, time=2015-05-30 13:41:07.286]
object notification: Time [clock=33, time=2015-05-30 13:41:07.286]
org notification: Time [clock=33, time=2015-05-30 13:41:07.286]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(33)
Event processed UpdateClock(33)
Event processed UpdateClock(33)
[Planbase]:{	UpdateClock(33)
}


[new scheduled]:[UpdateClock(33)]
[After]:{	UpdateClock(33)
}


[Planbase]:{	UpdateClock(33)
}


[new scheduled]:[UpdateClock(33)]
[After]:{	UpdateClock(33)
}


[Planbase]:{	UpdateClock(33)
}


[new scheduled]:[UpdateClock(33)]
[After]:{	UpdateClock(33)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=34, time=2015-05-30 13:41:17.288]
object notification: Time [clock=34, time=2015-05-30 13:41:17.288]
object notification: Time [clock=34, time=2015-05-30 13:41:17.288]
object notification: Time [clock=34, time=2015-05-30 13:41:17.288]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(34)
Event processed UpdateClock(34)
[Planbase]:{	UpdateClock(34)
}


[new scheduled]:[UpdateClock(34)]
[After]:{	UpdateClock(34)
}


Event processed UpdateClock(34)
[Planbase]:{	UpdateClock(34)
}


[new scheduled]:[UpdateClock(34)]
[After]:{	UpdateClock(34)
}


[Planbase]:{	UpdateClock(34)
}


[new scheduled]:[UpdateClock(34)]
[After]:{	UpdateClock(34)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=35, time=2015-05-30 13:41:27.292]
org notification: Time [clock=35, time=2015-05-30 13:41:27.292]
object notification: Time [clock=35, time=2015-05-30 13:41:27.292]
object notification: Time [clock=35, time=2015-05-30 13:41:27.292]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(35)
Event processed UpdateClock(35)
Event processed UpdateClock(35)
[Planbase]:{	UpdateClock(35)
}


[new scheduled]:[UpdateClock(35)]
[After]:{	UpdateClock(35)
}


[Planbase]:{	UpdateClock(35)
}


[new scheduled]:[UpdateClock(35)]
[After]:{	UpdateClock(35)
}


[Planbase]:{	UpdateClock(35)
}


[new scheduled]:[UpdateClock(35)]
[After]:{	UpdateClock(35)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=36, time=2015-05-30 13:41:37.295]
object notification: Time [clock=36, time=2015-05-30 13:41:37.295]
object notification: Time [clock=36, time=2015-05-30 13:41:37.295]
object notification: Time [clock=36, time=2015-05-30 13:41:37.295]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(36)
Event processed UpdateClock(36)
Event processed UpdateClock(36)
[Planbase]:{	UpdateClock(36)
}


[new scheduled]:[UpdateClock(36)]
[After]:{	UpdateClock(36)
}


[Planbase]:{	UpdateClock(36)
}


[new scheduled]:[UpdateClock(36)]
[After]:{	UpdateClock(36)
}


[Planbase]:{	UpdateClock(36)
}


[new scheduled]:[UpdateClock(36)]
[After]:{	UpdateClock(36)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=37, time=2015-05-30 13:41:47.297]
object notification: Time [clock=37, time=2015-05-30 13:41:47.297]
object notification: Time [clock=37, time=2015-05-30 13:41:47.297]
object notification: Time [clock=37, time=2015-05-30 13:41:47.297]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(37)
Event processed UpdateClock(37)
Event processed UpdateClock(37)
[Planbase]:{	UpdateClock(37)
}


[new scheduled]:[UpdateClock(37)]
[After]:{	UpdateClock(37)
}


[Planbase]:{	UpdateClock(37)
}


[new scheduled]:[UpdateClock(37)]
[After]:{	UpdateClock(37)
}


[Planbase]:{	UpdateClock(37)
}


[new scheduled]:[UpdateClock(37)]
[After]:{	UpdateClock(37)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


setPhases in ClientGameStatus, the current phase is Feedback Phase
setPhases in ClientGameStatus, the current phase is Feedback Phase
setPhases in ClientGameStatus, the current phase is Feedback Phase
(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 3.
PIN: 40.
Pos: (R:6,C:0).
Chips: { chips  'blue':0 'white':0 'brown':0 'yellow':9 }.
Score: 1000.
Team: -1.

(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 2.
PIN: 30.
Pos: (R:6,C:6).
Chips: { chips  'blue':9 'white':0 'brown':0 'yellow':0 }.
Score: 1000.
Team: -1.

(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 0.
PIN: 10.
Pos: (R:0,C:0).
Chips: { chips  'blue':0 'white':9 'brown':0 'yellow':0 }.
Score: 1000.
Team: -1.

[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@618fe852
[CTAH] The created APLList : [game_ended]
[CTAH] Array of Terms: [Lapapl.data.Term;@7b88a686
[CTAH] The created APLList : [game_ended]
[CTAH] Array of Terms: [Lapapl.data.Term;@2d2acaf5
[CTAH] The created APLList : [game_ended]
[Planbase]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedEvent(game_ended)]
[After]:{	ReceivedEvent(game_ended)
}


[Planbase]:{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedEvent(game_ended)]
[After]:{	ReceivedEvent(game_ended)
}


[Planbase]:{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedEvent(game_ended)]
[After]:{	ReceivedEvent(game_ended)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=38, time=2015-05-30 13:41:57.301]
object notification: Time [clock=38, time=2015-05-30 13:41:57.301]
object notification: Time [clock=38, time=2015-05-30 13:41:57.301]
org notification: Time [clock=38, time=2015-05-30 13:41:57.301]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(38)
Event processed UpdateClock(38)
Event processed UpdateClock(38)
[Planbase]:{	UpdateClock(38)
}


[new scheduled]:[UpdateClock(38)]
[After]:{	UpdateClock(38)
}


[Planbase]:{	UpdateClock(38)
}


[new scheduled]:[UpdateClock(38)]
[After]:{	UpdateClock(38)
}


[Planbase]:{	UpdateClock(38)
}


[new scheduled]:[UpdateClock(38)]
[After]:{	UpdateClock(38)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=39, time=2015-05-30 13:42:07.305]
org notification: Time [clock=39, time=2015-05-30 13:42:07.305]
object notification: Time [clock=39, time=2015-05-30 13:42:07.305]
object notification: Time [clock=39, time=2015-05-30 13:42:07.305]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(39)
[Planbase]:{	UpdateClock(39)
}


[new scheduled]:[UpdateClock(39)]
[After]:{	UpdateClock(39)
}


Event processed UpdateClock(39)
Event processed UpdateClock(39)
[Planbase]:{	UpdateClock(39)
}


[new scheduled]:[UpdateClock(39)]
[After]:{	UpdateClock(39)
}


[Planbase]:{	UpdateClock(39)
}


[new scheduled]:[UpdateClock(39)]
[After]:{	UpdateClock(39)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=40, time=2015-05-30 13:42:17.308]
object notification: Time [clock=40, time=2015-05-30 13:42:17.308]
org notification: Time [clock=40, time=2015-05-30 13:42:17.308]
object notification: Time [clock=40, time=2015-05-30 13:42:17.308]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(40)
Event processed UpdateClock(40)
Event processed UpdateClock(40)
[Planbase]:{	UpdateClock(40)
}


[new scheduled]:[UpdateClock(40)]
[After]:{	UpdateClock(40)
}


[Planbase]:{	UpdateClock(40)
}


[new scheduled]:[UpdateClock(40)]
[After]:{	UpdateClock(40)
}


[Planbase]:{	UpdateClock(40)
}


[new scheduled]:[UpdateClock(40)]
[After]:{	UpdateClock(40)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=41, time=2015-05-30 13:42:27.312]
object notification: Time [clock=41, time=2015-05-30 13:42:27.312]
object notification: Time [clock=41, time=2015-05-30 13:42:27.312]
object notification: Time [clock=41, time=2015-05-30 13:42:27.312]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(41)
Event processed UpdateClock(41)
[Planbase]:{	UpdateClock(41)
}


[new scheduled]:[UpdateClock(41)]
[After]:{	UpdateClock(41)
}


Event processed UpdateClock(41)
[Planbase]:{	UpdateClock(41)
}


[new scheduled]:[UpdateClock(41)]
[After]:{	UpdateClock(41)
}


[Planbase]:{	UpdateClock(41)
}


[new scheduled]:[UpdateClock(41)]
[After]:{	UpdateClock(41)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=42, time=2015-05-30 13:42:37.316]
object notification: Time [clock=42, time=2015-05-30 13:42:37.316]
object notification: Time [clock=42, time=2015-05-30 13:42:37.316]
object notification: Time [clock=42, time=2015-05-30 13:42:37.316]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(42)
Event processed UpdateClock(42)
Event processed UpdateClock(42)
[Planbase]:{	UpdateClock(42)
}


[new scheduled]:[UpdateClock(42)]
[After]:{	UpdateClock(42)
}


[Planbase]:{	UpdateClock(42)
}


[new scheduled]:[UpdateClock(42)]
[After]:{	UpdateClock(42)
}


[Planbase]:{	UpdateClock(42)
}


[new scheduled]:[UpdateClock(42)]
[After]:{	UpdateClock(42)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=43, time=2015-05-30 13:42:47.319]
org notification: Time [clock=43, time=2015-05-30 13:42:47.319]
object notification: Time [clock=43, time=2015-05-30 13:42:47.319]
object notification: Time [clock=43, time=2015-05-30 13:42:47.319]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(43)
Event processed UpdateClock(43)
Event processed UpdateClock(43)
[Planbase]:{	UpdateClock(43)
}


[new scheduled]:[UpdateClock(43)]
[After]:{	UpdateClock(43)
}


[Planbase]:{	UpdateClock(43)
}


[new scheduled]:[UpdateClock(43)]
[After]:{	UpdateClock(43)
}


[Planbase]:{	UpdateClock(43)
}


[new scheduled]:[UpdateClock(43)]
[After]:{	UpdateClock(43)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=44, time=2015-05-30 13:42:57.323]
org notification: Time [clock=44, time=2015-05-30 13:42:57.323]
object notification: Time [clock=44, time=2015-05-30 13:42:57.323]
object notification: Time [clock=44, time=2015-05-30 13:42:57.323]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(44)
Event processed UpdateClock(44)
Event processed UpdateClock(44)
[Planbase]:{	UpdateClock(44)
}


[new scheduled]:[UpdateClock(44)]
[After]:{	UpdateClock(44)
}


[Planbase]:{	UpdateClock(44)
}


[new scheduled]:[UpdateClock(44)]
[After]:{	UpdateClock(44)
}


[Planbase]:{	UpdateClock(44)
}


[new scheduled]:[UpdateClock(44)]
[After]:{	UpdateClock(44)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=45, time=2015-05-30 13:43:07.327]
org notification: Time [clock=45, time=2015-05-30 13:43:07.327]
object notification: Time [clock=45, time=2015-05-30 13:43:07.327]
object notification: Time [clock=45, time=2015-05-30 13:43:07.327]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(45)
Event processed UpdateClock(45)
Event processed UpdateClock(45)
[Planbase]:{	UpdateClock(45)
}


[new scheduled]:[UpdateClock(45)]
[After]:{	UpdateClock(45)
}


[Planbase]:{	UpdateClock(45)
}


[new scheduled]:[UpdateClock(45)]
[After]:{	UpdateClock(45)
}


[Planbase]:{	UpdateClock(45)
}


[new scheduled]:[UpdateClock(45)]
[After]:{	UpdateClock(45)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=46, time=2015-05-30 13:43:17.331]
object notification: Time [clock=46, time=2015-05-30 13:43:17.331]
object notification: Time [clock=46, time=2015-05-30 13:43:17.331]
org notification: Time [clock=46, time=2015-05-30 13:43:17.331]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(46)
Event processed UpdateClock(46)
Event processed UpdateClock(46)
[Planbase]:{	UpdateClock(46)
}


[new scheduled]:[UpdateClock(46)]
[After]:{	UpdateClock(46)
}


[Planbase]:{	UpdateClock(46)
}


[new scheduled]:[UpdateClock(46)]
[After]:{	UpdateClock(46)
}


[Planbase]:{	UpdateClock(46)
}


[new scheduled]:[UpdateClock(46)]
[After]:{	UpdateClock(46)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=47, time=2015-05-30 13:43:27.335]
object notification: Time [clock=47, time=2015-05-30 13:43:27.335]
object notification: Time [clock=47, time=2015-05-30 13:43:27.335]
org notification: Time [clock=47, time=2015-05-30 13:43:27.335]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(47)
[Planbase]:{	UpdateClock(47)
}


[new scheduled]:[UpdateClock(47)]
[After]:{	UpdateClock(47)
}


Event processed UpdateClock(47)
Event processed UpdateClock(47)
[Planbase]:{	UpdateClock(47)
}


[new scheduled]:[UpdateClock(47)]
[After]:{	UpdateClock(47)
}


[Planbase]:{	UpdateClock(47)
}


[new scheduled]:[UpdateClock(47)]
[After]:{	UpdateClock(47)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=48, time=2015-05-30 13:43:37.34]
org notification: Time [clock=48, time=2015-05-30 13:43:37.34]
object notification: Time [clock=48, time=2015-05-30 13:43:37.34]
object notification: Time [clock=48, time=2015-05-30 13:43:37.34]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(48)
Event processed UpdateClock(48)
Event processed UpdateClock(48)
[Planbase]:{	UpdateClock(48)
}


[new scheduled]:[UpdateClock(48)]
[After]:{	UpdateClock(48)
}


[Planbase]:{	UpdateClock(48)
}


[new scheduled]:[UpdateClock(48)]
[After]:{	UpdateClock(48)
}


[Planbase]:{	UpdateClock(48)
}


[new scheduled]:[UpdateClock(48)]
[After]:{	UpdateClock(48)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=49, time=2015-05-30 13:43:47.343]
object notification: Time [clock=49, time=2015-05-30 13:43:47.343]
org notification: Time [clock=49, time=2015-05-30 13:43:47.343]
object notification: Time [clock=49, time=2015-05-30 13:43:47.343]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(49)
Event processed UpdateClock(49)
Event processed UpdateClock(49)
[Planbase]:{	UpdateClock(49)
}


[new scheduled]:[UpdateClock(49)]
[After]:{	UpdateClock(49)
}


[Planbase]:{	UpdateClock(49)
}


[new scheduled]:[UpdateClock(49)]
[After]:{	UpdateClock(49)
}


[Planbase]:{	UpdateClock(49)
}


[new scheduled]:[UpdateClock(49)]
[After]:{	UpdateClock(49)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=50, time=2015-05-30 13:43:57.348]
object notification: Time [clock=50, time=2015-05-30 13:43:57.348]
object notification: Time [clock=50, time=2015-05-30 13:43:57.348]
object notification: Time [clock=50, time=2015-05-30 13:43:57.348]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(50)
Event processed UpdateClock(50)
Event processed UpdateClock(50)
[Planbase]:{	UpdateClock(50)
}


[new scheduled]:[UpdateClock(50)]
[After]:{	UpdateClock(50)
}


[Planbase]:{	UpdateClock(50)
}


[new scheduled]:[UpdateClock(50)]
[After]:{	UpdateClock(50)
}


[Planbase]:{	UpdateClock(50)
}


[new scheduled]:[UpdateClock(50)]
[After]:{	UpdateClock(50)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=51, time=2015-05-30 13:44:07.353]
object notification: Time [clock=51, time=2015-05-30 13:44:07.353]
object notification: Time [clock=51, time=2015-05-30 13:44:07.353]
object notification: Time [clock=51, time=2015-05-30 13:44:07.353]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(51)
Event processed UpdateClock(51)
[Planbase]:{	UpdateClock(51)
}


[new scheduled]:[UpdateClock(51)]
[After]:{	UpdateClock(51)
}


Event processed UpdateClock(51)
[Planbase]:{	UpdateClock(51)
}


[new scheduled]:[UpdateClock(51)]
[After]:{	UpdateClock(51)
}


[Planbase]:{	UpdateClock(51)
}


[new scheduled]:[UpdateClock(51)]
[After]:{	UpdateClock(51)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=52, time=2015-05-30 13:44:17.357]
object notification: Time [clock=52, time=2015-05-30 13:44:17.357]
object notification: Time [clock=52, time=2015-05-30 13:44:17.357]
object notification: Time [clock=52, time=2015-05-30 13:44:17.357]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(52)
Event processed UpdateClock(52)
Event processed UpdateClock(52)
[Planbase]:{	UpdateClock(52)
}


[new scheduled]:[UpdateClock(52)]
[After]:{	UpdateClock(52)
}


[Planbase]:{	UpdateClock(52)
}


[new scheduled]:[UpdateClock(52)]
[After]:{	UpdateClock(52)
}


[Planbase]:{	UpdateClock(52)
}


[new scheduled]:[UpdateClock(52)]
[After]:{	UpdateClock(52)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=53, time=2015-05-30 13:44:27.36]
object notification: Time [clock=53, time=2015-05-30 13:44:27.36]
object notification: Time [clock=53, time=2015-05-30 13:44:27.36]
org notification: Time [clock=53, time=2015-05-30 13:44:27.36]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(53)
Event processed UpdateClock(53)
Event processed UpdateClock(53)
[Planbase]:{	UpdateClock(53)
}


[new scheduled]:[UpdateClock(53)]
[After]:{	UpdateClock(53)
}


[Planbase]:{	UpdateClock(53)
}


[new scheduled]:[UpdateClock(53)]
[After]:{	UpdateClock(53)
}


[Planbase]:{	UpdateClock(53)
}


[new scheduled]:[UpdateClock(53)]
[After]:{	UpdateClock(53)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=54, time=2015-05-30 13:44:37.363]
object notification: Time [clock=54, time=2015-05-30 13:44:37.363]
object notification: Time [clock=54, time=2015-05-30 13:44:37.363]
object notification: Time [clock=54, time=2015-05-30 13:44:37.363]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(54)
Event processed UpdateClock(54)
Event processed UpdateClock(54)
[Planbase]:{	UpdateClock(54)
}


[new scheduled]:[UpdateClock(54)]
[After]:{	UpdateClock(54)
}


[Planbase]:{	UpdateClock(54)
}


[new scheduled]:[UpdateClock(54)]
[After]:{	UpdateClock(54)
}


[Planbase]:{	UpdateClock(54)
}


[new scheduled]:[UpdateClock(54)]
[After]:{	UpdateClock(54)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=55, time=2015-05-30 13:44:47.367]
object notification: Time [clock=55, time=2015-05-30 13:44:47.367]
object notification: Time [clock=55, time=2015-05-30 13:44:47.367]
object notification: Time [clock=55, time=2015-05-30 13:44:47.367]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(55)
Event processed UpdateClock(55)
[Planbase]:{	UpdateClock(55)
}


[new scheduled]:[UpdateClock(55)]
[After]:{	UpdateClock(55)
}


Event processed UpdateClock(55)
[Planbase]:{	UpdateClock(55)
}


[new scheduled]:[UpdateClock(55)]
[After]:{	UpdateClock(55)
}


[Planbase]:{	UpdateClock(55)
}


[new scheduled]:[UpdateClock(55)]
[After]:{	UpdateClock(55)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=56, time=2015-05-30 13:44:57.372]
object notification: Time [clock=56, time=2015-05-30 13:44:57.372]
object notification: Time [clock=56, time=2015-05-30 13:44:57.372]
org notification: Time [clock=56, time=2015-05-30 13:44:57.372]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(56)
Event processed UpdateClock(56)
Event processed UpdateClock(56)
[Planbase]:{	UpdateClock(56)
}


[new scheduled]:[UpdateClock(56)]
[After]:{	UpdateClock(56)
}


[Planbase]:{	UpdateClock(56)
}


[new scheduled]:[UpdateClock(56)]
[After]:{	UpdateClock(56)
}


[Planbase]:{	UpdateClock(56)
}


[new scheduled]:[UpdateClock(56)]
[After]:{	UpdateClock(56)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=57, time=2015-05-30 13:45:07.377]
object notification: Time [clock=57, time=2015-05-30 13:45:07.377]
org notification: Time [clock=57, time=2015-05-30 13:45:07.377]
object notification: Time [clock=57, time=2015-05-30 13:45:07.377]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(57)
Event processed UpdateClock(57)
Event processed UpdateClock(57)
[Planbase]:{	UpdateClock(57)
}


[new scheduled]:[UpdateClock(57)]
[After]:{	UpdateClock(57)
}


[Planbase]:{	UpdateClock(57)
}


[new scheduled]:[UpdateClock(57)]
[After]:{	UpdateClock(57)
}


[Planbase]:{	UpdateClock(57)
}


[new scheduled]:[UpdateClock(57)]
[After]:{	UpdateClock(57)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=58, time=2015-05-30 13:45:17.381]
org notification: Time [clock=58, time=2015-05-30 13:45:17.381]
object notification: Time [clock=58, time=2015-05-30 13:45:17.381]
object notification: Time [clock=58, time=2015-05-30 13:45:17.381]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(58)
Event processed UpdateClock(58)
Event processed UpdateClock(58)
[Planbase]:{	UpdateClock(58)
}


[new scheduled]:[UpdateClock(58)]
[After]:{	UpdateClock(58)
}


[Planbase]:{	UpdateClock(58)
}


[new scheduled]:[UpdateClock(58)]
[After]:{	UpdateClock(58)
}


[Planbase]:{	UpdateClock(58)
}


[new scheduled]:[UpdateClock(58)]
[After]:{	UpdateClock(58)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=59, time=2015-05-30 13:45:27.386]
object notification: Time [clock=59, time=2015-05-30 13:45:27.386]
object notification: Time [clock=59, time=2015-05-30 13:45:27.386]
object notification: Time [clock=59, time=2015-05-30 13:45:27.386]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(59)
Event processed UpdateClock(59)
Event processed UpdateClock(59)
[Planbase]:{	UpdateClock(59)
}


[new scheduled]:[UpdateClock(59)]
[After]:{	UpdateClock(59)
}


[Planbase]:{	UpdateClock(59)
}


[new scheduled]:[UpdateClock(59)]
[After]:{	UpdateClock(59)
}


[Planbase]:{	UpdateClock(59)
}


[new scheduled]:[UpdateClock(59)]
[After]:{	UpdateClock(59)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=60, time=2015-05-30 13:45:37.39]
object notification: Time [clock=60, time=2015-05-30 13:45:37.39]
object notification: Time [clock=60, time=2015-05-30 13:45:37.39]
org notification: Time [clock=60, time=2015-05-30 13:45:37.39]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(60)
Event processed UpdateClock(60)
Event processed UpdateClock(60)
[Planbase]:{	UpdateClock(60)
}


[new scheduled]:[UpdateClock(60)]
[After]:{	UpdateClock(60)
}


[Planbase]:{	UpdateClock(60)
}


[new scheduled]:[UpdateClock(60)]
[After]:{	UpdateClock(60)
}


[Planbase]:{	UpdateClock(60)
}


[new scheduled]:[UpdateClock(60)]
[After]:{	UpdateClock(60)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=61, time=2015-05-30 13:45:47.394]
object notification: Time [clock=61, time=2015-05-30 13:45:47.394]
object notification: Time [clock=61, time=2015-05-30 13:45:47.394]
org notification: Time [clock=61, time=2015-05-30 13:45:47.394]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(61)
Event processed UpdateClock(61)
Event processed UpdateClock(61)
[Planbase]:{	UpdateClock(61)
}


[new scheduled]:[UpdateClock(61)]
[After]:{	UpdateClock(61)
}


[Planbase]:{	UpdateClock(61)
}


[new scheduled]:[UpdateClock(61)]
[After]:{	UpdateClock(61)
}


[Planbase]:{	UpdateClock(61)
}


[new scheduled]:[UpdateClock(61)]
[After]:{	UpdateClock(61)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=62, time=2015-05-30 13:45:57.397]
org notification: Time [clock=62, time=2015-05-30 13:45:57.397]
object notification: Time [clock=62, time=2015-05-30 13:45:57.397]
object notification: Time [clock=62, time=2015-05-30 13:45:57.397]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(62)
Event processed UpdateClock(62)
Event processed UpdateClock(62)
[Planbase]:{	UpdateClock(62)
}


[new scheduled]:[UpdateClock(62)]
[After]:{	UpdateClock(62)
}


[Planbase]:{	UpdateClock(62)
}


[new scheduled]:[UpdateClock(62)]
[After]:{	UpdateClock(62)
}


[Planbase]:{	UpdateClock(62)
}


[new scheduled]:[UpdateClock(62)]
[After]:{	UpdateClock(62)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=63, time=2015-05-30 13:46:07.4]
org notification: Time [clock=63, time=2015-05-30 13:46:07.4]
object notification: Time [clock=63, time=2015-05-30 13:46:07.4]
object notification: Time [clock=63, time=2015-05-30 13:46:07.4]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(63)
Event processed UpdateClock(63)
Event processed UpdateClock(63)
[Planbase]:{	UpdateClock(63)
}


[new scheduled]:[UpdateClock(63)]
[After]:{	UpdateClock(63)
}


[Planbase]:{	UpdateClock(63)
}


[new scheduled]:[UpdateClock(63)]
[After]:{	UpdateClock(63)
}


[Planbase]:{	UpdateClock(63)
}


[new scheduled]:[UpdateClock(63)]
[After]:{	UpdateClock(63)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=64, time=2015-05-30 13:46:17.404]
object notification: Time [clock=64, time=2015-05-30 13:46:17.404]
object notification: Time [clock=64, time=2015-05-30 13:46:17.404]
org notification: Time [clock=64, time=2015-05-30 13:46:17.404]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(64)
Event processed UpdateClock(64)
Event processed UpdateClock(64)
[Planbase]:{	UpdateClock(64)
}


[new scheduled]:[UpdateClock(64)]
[After]:{	UpdateClock(64)
}


[Planbase]:{	UpdateClock(64)
}


[new scheduled]:[UpdateClock(64)]
[After]:{	UpdateClock(64)
}


[Planbase]:{	UpdateClock(64)
}


[new scheduled]:[UpdateClock(64)]
[After]:{	UpdateClock(64)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=65, time=2015-05-30 13:46:27.409]
org notification: Time [clock=65, time=2015-05-30 13:46:27.409]
object notification: Time [clock=65, time=2015-05-30 13:46:27.409]
object notification: Time [clock=65, time=2015-05-30 13:46:27.409]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(65)
Event processed UpdateClock(65)
Event processed UpdateClock(65)
[Planbase]:{	UpdateClock(65)
}


[new scheduled]:[UpdateClock(65)]
[After]:{	UpdateClock(65)
}


[Planbase]:{	UpdateClock(65)
}


[new scheduled]:[UpdateClock(65)]
[After]:{	UpdateClock(65)
}


[Planbase]:{	UpdateClock(65)
}


[new scheduled]:[UpdateClock(65)]
[After]:{	UpdateClock(65)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=66, time=2015-05-30 13:46:37.413]
org notification: Time [clock=66, time=2015-05-30 13:46:37.413]
object notification: Time [clock=66, time=2015-05-30 13:46:37.413]
object notification: Time [clock=66, time=2015-05-30 13:46:37.413]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(66)
Event processed UpdateClock(66)
Event processed UpdateClock(66)
[Planbase]:{	UpdateClock(66)
}


[new scheduled]:[UpdateClock(66)]
[After]:{	UpdateClock(66)
}


[Planbase]:{	UpdateClock(66)
}


[new scheduled]:[UpdateClock(66)]
[After]:{	UpdateClock(66)
}


[Planbase]:{	UpdateClock(66)
}


[new scheduled]:[UpdateClock(66)]
[After]:{	UpdateClock(66)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=67, time=2015-05-30 13:46:47.417]
org notification: Time [clock=67, time=2015-05-30 13:46:47.417]
object notification: Time [clock=67, time=2015-05-30 13:46:47.417]
object notification: Time [clock=67, time=2015-05-30 13:46:47.417]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(67)
Event processed UpdateClock(67)
Event processed UpdateClock(67)
[Planbase]:{	UpdateClock(67)
}


[new scheduled]:[UpdateClock(67)]
[After]:{	UpdateClock(67)
}


[Planbase]:{	UpdateClock(67)
}


[new scheduled]:[UpdateClock(67)]
[After]:{	UpdateClock(67)
}


[Planbase]:{	UpdateClock(67)
}


[new scheduled]:[UpdateClock(67)]
[After]:{	UpdateClock(67)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=68, time=2015-05-30 13:46:57.421]
object notification: Time [clock=68, time=2015-05-30 13:46:57.421]
object notification: Time [clock=68, time=2015-05-30 13:46:57.421]
object notification: Time [clock=68, time=2015-05-30 13:46:57.421]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(68)
Event processed UpdateClock(68)
Event processed UpdateClock(68)
[Planbase]:{	UpdateClock(68)
}


[new scheduled]:[UpdateClock(68)]
[After]:{	UpdateClock(68)
}


[Planbase]:{	UpdateClock(68)
}


[new scheduled]:[UpdateClock(68)]
[After]:{	UpdateClock(68)
}


[Planbase]:{	UpdateClock(68)
}


[new scheduled]:[UpdateClock(68)]
[After]:{	UpdateClock(68)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=69, time=2015-05-30 13:47:07.425]
object notification: Time [clock=69, time=2015-05-30 13:47:07.425]
object notification: Time [clock=69, time=2015-05-30 13:47:07.425]
object notification: Time [clock=69, time=2015-05-30 13:47:07.425]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(69)
Event processed UpdateClock(69)
Event processed UpdateClock(69)
[Planbase]:{	UpdateClock(69)
}


[new scheduled]:[UpdateClock(69)]
[After]:{	UpdateClock(69)
}


[Planbase]:{	UpdateClock(69)
}


[new scheduled]:[UpdateClock(69)]
[After]:{	UpdateClock(69)
}


[Planbase]:{	UpdateClock(69)
}


[new scheduled]:[UpdateClock(69)]
[After]:{	UpdateClock(69)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=70, time=2015-05-30 13:47:17.429]
object notification: Time [clock=70, time=2015-05-30 13:47:17.429]
object notification: Time [clock=70, time=2015-05-30 13:47:17.429]
object notification: Time [clock=70, time=2015-05-30 13:47:17.429]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(70)
Event processed UpdateClock(70)
Event processed UpdateClock(70)
[Planbase]:{	UpdateClock(70)
}


[new scheduled]:[UpdateClock(70)]
[After]:{	UpdateClock(70)
}


[Planbase]:{	UpdateClock(70)
}


[new scheduled]:[UpdateClock(70)]
[After]:{	UpdateClock(70)
}


[Planbase]:{	UpdateClock(70)
}


[new scheduled]:[UpdateClock(70)]
[After]:{	UpdateClock(70)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=71, time=2015-05-30 13:47:27.432]
object notification: Time [clock=71, time=2015-05-30 13:47:27.432]
object notification: Time [clock=71, time=2015-05-30 13:47:27.432]
org notification: Time [clock=71, time=2015-05-30 13:47:27.432]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(71)
Event processed UpdateClock(71)
Event processed UpdateClock(71)
[Planbase]:{	UpdateClock(71)
}


[new scheduled]:[UpdateClock(71)]
[After]:{	UpdateClock(71)
}


[Planbase]:{	UpdateClock(71)
}


[new scheduled]:[UpdateClock(71)]
[After]:{	UpdateClock(71)
}


[Planbase]:{	UpdateClock(71)
}


[new scheduled]:[UpdateClock(71)]
[After]:{	UpdateClock(71)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=72, time=2015-05-30 13:47:37.437]
object notification: Time [clock=72, time=2015-05-30 13:47:37.437]
object notification: Time [clock=72, time=2015-05-30 13:47:37.437]
org notification: Time [clock=72, time=2015-05-30 13:47:37.437]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(72)
Event processed UpdateClock(72)
Event processed UpdateClock(72)
[Planbase]:{	UpdateClock(72)
}


[new scheduled]:[UpdateClock(72)]
[After]:{	UpdateClock(72)
}


[Planbase]:{	UpdateClock(72)
}


[new scheduled]:[UpdateClock(72)]
[After]:{	UpdateClock(72)
}


[Planbase]:{	UpdateClock(72)
}


[new scheduled]:[UpdateClock(72)]
[After]:{	UpdateClock(72)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=73, time=2015-05-30 13:47:47.441]
object notification: Time [clock=73, time=2015-05-30 13:47:47.441]
object notification: Time [clock=73, time=2015-05-30 13:47:47.441]
org notification: Time [clock=73, time=2015-05-30 13:47:47.441]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(73)
Event processed UpdateClock(73)
Event processed UpdateClock(73)
[Planbase]:{	UpdateClock(73)
}


[new scheduled]:[UpdateClock(73)]
[After]:{	UpdateClock(73)
}


[Planbase]:{	UpdateClock(73)
}


[new scheduled]:[UpdateClock(73)]
[After]:{	UpdateClock(73)
}


[Planbase]:{	UpdateClock(73)
}


[new scheduled]:[UpdateClock(73)]
[After]:{	UpdateClock(73)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=74, time=2015-05-30 13:47:57.445]
object notification: Time [clock=74, time=2015-05-30 13:47:57.445]
object notification: Time [clock=74, time=2015-05-30 13:47:57.445]
object notification: Time [clock=74, time=2015-05-30 13:47:57.445]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(74)
Event processed UpdateClock(74)
Event processed UpdateClock(74)
[Planbase]:{	UpdateClock(74)
}


[new scheduled]:[UpdateClock(74)]
[After]:{	UpdateClock(74)
}


[Planbase]:{	UpdateClock(74)
}


[new scheduled]:[UpdateClock(74)]
[After]:{	UpdateClock(74)
}


[Planbase]:{	UpdateClock(74)
}


[new scheduled]:[UpdateClock(74)]
[After]:{	UpdateClock(74)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=75, time=2015-05-30 13:48:07.45]
object notification: Time [clock=75, time=2015-05-30 13:48:07.45]
object notification: Time [clock=75, time=2015-05-30 13:48:07.45]
object notification: Time [clock=75, time=2015-05-30 13:48:07.45]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(75)
Event processed UpdateClock(75)
Event processed UpdateClock(75)
[Planbase]:{	UpdateClock(75)
}


[new scheduled]:[UpdateClock(75)]
[After]:{	UpdateClock(75)
}


[Planbase]:{	UpdateClock(75)
}


[new scheduled]:[UpdateClock(75)]
[After]:{	UpdateClock(75)
}


[Planbase]:{	UpdateClock(75)
}


[new scheduled]:[UpdateClock(75)]
[After]:{	UpdateClock(75)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=76, time=2015-05-30 13:48:17.454]
object notification: Time [clock=76, time=2015-05-30 13:48:17.454]
object notification: Time [clock=76, time=2015-05-30 13:48:17.454]
org notification: Time [clock=76, time=2015-05-30 13:48:17.454]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(76)
Event processed UpdateClock(76)
Event processed UpdateClock(76)
[Planbase]:{	UpdateClock(76)
}


[new scheduled]:[UpdateClock(76)]
[After]:{	UpdateClock(76)
}


[Planbase]:{	UpdateClock(76)
}


[new scheduled]:[UpdateClock(76)]
[After]:{	UpdateClock(76)
}


[Planbase]:{	UpdateClock(76)
}


[new scheduled]:[UpdateClock(76)]
[After]:{	UpdateClock(76)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=77, time=2015-05-30 13:48:27.459]
org notification: Time [clock=77, time=2015-05-30 13:48:27.459]
object notification: Time [clock=77, time=2015-05-30 13:48:27.459]
object notification: Time [clock=77, time=2015-05-30 13:48:27.459]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(77)
Event processed UpdateClock(77)
Event processed UpdateClock(77)
[Planbase]:{	UpdateClock(77)
}


[new scheduled]:[UpdateClock(77)]
[After]:{	UpdateClock(77)
}


[Planbase]:{	UpdateClock(77)
}


[new scheduled]:[UpdateClock(77)]
[After]:{	UpdateClock(77)
}


[Planbase]:{	UpdateClock(77)
}


[new scheduled]:[UpdateClock(77)]
[After]:{	UpdateClock(77)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=78, time=2015-05-30 13:48:37.463]
object notification: Time [clock=78, time=2015-05-30 13:48:37.463]
object notification: Time [clock=78, time=2015-05-30 13:48:37.463]
object notification: Time [clock=78, time=2015-05-30 13:48:37.463]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(78)
Event processed UpdateClock(78)
Event processed UpdateClock(78)
[Planbase]:{	UpdateClock(78)
}


[new scheduled]:[UpdateClock(78)]
[After]:{	UpdateClock(78)
}


[Planbase]:{	UpdateClock(78)
}


[new scheduled]:[UpdateClock(78)]
[After]:{	UpdateClock(78)
}


[Planbase]:{	UpdateClock(78)
}


[new scheduled]:[UpdateClock(78)]
[After]:{	UpdateClock(78)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=79, time=2015-05-30 13:48:47.468]
org notification: Time [clock=79, time=2015-05-30 13:48:47.468]
object notification: Time [clock=79, time=2015-05-30 13:48:47.468]
object notification: Time [clock=79, time=2015-05-30 13:48:47.468]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(79)
Event processed UpdateClock(79)
Event processed UpdateClock(79)
[Planbase]:{	UpdateClock(79)
}


[new scheduled]:[UpdateClock(79)]
[After]:{	UpdateClock(79)
}


[Planbase]:{	UpdateClock(79)
}


[new scheduled]:[UpdateClock(79)]
[After]:{	UpdateClock(79)
}


[Planbase]:{	UpdateClock(79)
}


[new scheduled]:[UpdateClock(79)]
[After]:{	UpdateClock(79)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=80, time=2015-05-30 13:48:57.475]
org notification: Time [clock=80, time=2015-05-30 13:48:57.475]
object notification: Time [clock=80, time=2015-05-30 13:48:57.475]
object notification: Time [clock=80, time=2015-05-30 13:48:57.475]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(80)
Event processed UpdateClock(80)
Event processed UpdateClock(80)
[Planbase]:{	UpdateClock(80)
}


[new scheduled]:[UpdateClock(80)]
[After]:{	UpdateClock(80)
}


[Planbase]:{	UpdateClock(80)
}


[new scheduled]:[UpdateClock(80)]
[After]:{	UpdateClock(80)
}


[Planbase]:{	UpdateClock(80)
}


[new scheduled]:[UpdateClock(80)]
[After]:{	UpdateClock(80)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=81, time=2015-05-30 13:49:07.479]
org notification: Time [clock=81, time=2015-05-30 13:49:07.479]
object notification: Time [clock=81, time=2015-05-30 13:49:07.479]
object notification: Time [clock=81, time=2015-05-30 13:49:07.479]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(81)
Event processed UpdateClock(81)
Event processed UpdateClock(81)
[Planbase]:{	UpdateClock(81)
}


[new scheduled]:[UpdateClock(81)]
[After]:{	UpdateClock(81)
}


[Planbase]:{	UpdateClock(81)
}


[new scheduled]:[UpdateClock(81)]
[After]:{	UpdateClock(81)
}


[Planbase]:{	UpdateClock(81)
}


[new scheduled]:[UpdateClock(81)]
[After]:{	UpdateClock(81)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=82, time=2015-05-30 13:49:17.483]
org notification: Time [clock=82, time=2015-05-30 13:49:17.483]
object notification: Time [clock=82, time=2015-05-30 13:49:17.483]
object notification: Time [clock=82, time=2015-05-30 13:49:17.483]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(82)
Event processed UpdateClock(82)
Event processed UpdateClock(82)
[Planbase]:{	UpdateClock(82)
}


[new scheduled]:[UpdateClock(82)]
[After]:{	UpdateClock(82)
}


[Planbase]:{	UpdateClock(82)
}


[new scheduled]:[UpdateClock(82)]
[After]:{	UpdateClock(82)
}


[Planbase]:{	UpdateClock(82)
}


[new scheduled]:[UpdateClock(82)]
[After]:{	UpdateClock(82)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=83, time=2015-05-30 13:49:27.487]
object notification: Time [clock=83, time=2015-05-30 13:49:27.487]
object notification: Time [clock=83, time=2015-05-30 13:49:27.487]
object notification: Time [clock=83, time=2015-05-30 13:49:27.487]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(83)
Event processed UpdateClock(83)
Event processed UpdateClock(83)
[Planbase]:{	UpdateClock(83)
}


[new scheduled]:[UpdateClock(83)]
[After]:{	UpdateClock(83)
}


[Planbase]:{	UpdateClock(83)
}


[new scheduled]:[UpdateClock(83)]
[After]:{	UpdateClock(83)
}


[Planbase]:{	UpdateClock(83)
}


[new scheduled]:[UpdateClock(83)]
[After]:{	UpdateClock(83)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=84, time=2015-05-30 13:49:37.491]
object notification: Time [clock=84, time=2015-05-30 13:49:37.491]
object notification: Time [clock=84, time=2015-05-30 13:49:37.491]
object notification: Time [clock=84, time=2015-05-30 13:49:37.491]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(84)
Event processed UpdateClock(84)
Event processed UpdateClock(84)
[Planbase]:{	UpdateClock(84)
}


[new scheduled]:[UpdateClock(84)]
[After]:{	UpdateClock(84)
}


[Planbase]:{	UpdateClock(84)
}


[new scheduled]:[UpdateClock(84)]
[After]:{	UpdateClock(84)
}


[Planbase]:{	UpdateClock(84)
}


[new scheduled]:[UpdateClock(84)]
[After]:{	UpdateClock(84)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=85, time=2015-05-30 13:50:46.357]
object notification: Time [clock=85, time=2015-05-30 13:50:46.357]
object notification: Time [clock=85, time=2015-05-30 13:50:46.357]
org notification: Time [clock=85, time=2015-05-30 13:50:46.357]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(85)
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(85)
[Planbase]:{	UpdateClock(85)
}


[new scheduled]:[UpdateClock(85)]
[After]:{	UpdateClock(85)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	UpdateClock(85)
}


[new scheduled]:[UpdateClock(85)]
[After]:{	UpdateClock(85)
}


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(85)
[Planbase]:{	UpdateClock(85)
}


[new scheduled]:[UpdateClock(85)]
[After]:{	UpdateClock(85)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


