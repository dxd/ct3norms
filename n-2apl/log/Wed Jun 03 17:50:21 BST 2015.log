-------------------------last log tuples start--------------------------------
Time [clock=1, time=2015-06-03 17:49:56.03]
org notification: Time [clock=1, time=2015-06-03 17:49:56.03]
Time [clock=2, time=2015-06-03 17:50:06.045]
org notification: Time [clock=2, time=2015-06-03 17:50:06.045]
Time [clock=3, time=2015-06-03 17:50:16.048]
-------------------------last log tuples end----------------------------------
org notification: Time [clock=3, time=2015-06-03 17:50:16.048]
[CTAH] started agent 10
[CTAH] Added a new agent to the game by the name of 10.
[ENV] added agent a10
[CTAH] started agent 30
[CTAH] Added a new agent to the game by the name of 30.
[ENV] added agent a30
[CTAH] started agent 40
[CTAH] Added a new agent to the game by the name of 40.
[ENV] added agent a40
org notification: Time [clock=4, time=2015-06-03 17:50:26.05]
object notification: Time [clock=4, time=2015-06-03 17:50:26.05]
object notification: Time [clock=4, time=2015-06-03 17:50:26.05]
org notification: Time [clock=4, time=2015-06-03 17:50:26.05]
object notification: Time [clock=4, time=2015-06-03 17:50:26.05]
org notification: Time [clock=1, time=2015-06-03 17:50:31.862]
org notification: Time [clock=1, time=2015-06-03 17:50:31.862]
object notification: Time [clock=1, time=2015-06-03 17:50:31.862]
object notification: Time [clock=1, time=2015-06-03 17:50:31.862]
object notification: Time [clock=1, time=2015-06-03 17:50:31.862]
org notification: Time [clock=5, time=2015-06-03 17:50:36.052]
object notification: Time [clock=5, time=2015-06-03 17:50:36.052]
org notification: Time [clock=5, time=2015-06-03 17:50:36.052]
object notification: Time [clock=5, time=2015-06-03 17:50:36.052]
object notification: Time [clock=5, time=2015-06-03 17:50:36.052]
#########################Game started
#########################Game started
#########################Game started
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
org notification: Tile [id=null, cell=Cell [x=0, y=0], subject=white, time=2015-06-03 17:50:39.22, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=white, time=2015-06-03 17:50:39.22, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=white, time=2015-06-03 17:50:39.22, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=white, time=2015-06-03 17:50:39.22, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=0], subject=white, time=2015-06-03 17:50:39.22, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-03 17:50:39.25, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-03 17:50:39.25, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-03 17:50:39.25, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-03 17:50:39.25, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=blue, time=2015-06-03 17:50:39.25, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-03 17:50:39.252, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-03 17:50:39.252, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-03 17:50:39.252, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-03 17:50:39.252, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-06-03 17:50:39.256, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=blue, time=2015-06-03 17:50:39.252, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-06-03 17:50:39.256, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-06-03 17:50:39.256, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-06-03 17:50:39.256, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-06-03 17:50:39.256, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-06-03 17:50:39.261, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-06-03 17:50:39.261, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-06-03 17:50:39.261, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-06-03 17:50:39.261, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-06-03 17:50:39.261, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-06-03 17:50:39.268, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-06-03 17:50:39.268, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-06-03 17:50:39.268, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-06-03 17:50:39.268, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-06-03 17:50:39.268, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-06-03 17:50:39.273, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-06-03 17:50:39.273, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-06-03 17:50:39.273, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 17:50:39.28, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 17:50:39.28, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-06-03 17:50:39.273, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-06-03 17:50:39.282, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-06-03 17:50:39.273, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=brown, time=2015-06-03 17:50:39.289, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 17:50:39.28, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 17:50:39.28, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 17:50:39.28, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-06-03 17:50:39.282, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-06-03 17:50:39.282, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-06-03 17:50:39.306, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=brown, time=2015-06-03 17:50:39.289, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=yellow, time=2015-06-03 17:50:39.311, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-06-03 17:50:39.306, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=yellow, time=2015-06-03 17:50:39.311, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-03 17:50:39.322, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=blue, time=2015-06-03 17:50:39.326, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-06-03 17:50:39.328, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=blue, time=2015-06-03 17:50:39.33, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-03 17:50:39.333, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=brown, time=2015-06-03 17:50:39.337, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=yellow, time=2015-06-03 17:50:39.339, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-03 17:50:39.342, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=white, time=2015-06-03 17:50:39.343, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-06-03 17:50:39.345, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=blue, time=2015-06-03 17:50:39.348, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=brown, time=2015-06-03 17:50:39.349, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=white, time=2015-06-03 17:50:39.352, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=brown, time=2015-06-03 17:50:39.354, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-06-03 17:50:39.356, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=blue, time=2015-06-03 17:50:39.357, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-06-03 17:50:39.36, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-06-03 17:50:39.362, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=white, time=2015-06-03 17:50:39.364, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-03 17:50:39.365, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=yellow, time=2015-06-03 17:50:39.367, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=brown, time=2015-06-03 17:50:39.369, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=yellow, time=2015-06-03 17:50:39.371, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=blue, time=2015-06-03 17:50:39.374, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-03 17:50:39.322, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=yellow, time=2015-06-03 17:50:39.375, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=blue, time=2015-06-03 17:50:39.377, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=blue, time=2015-06-03 17:50:39.326, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-06-03 17:50:39.328, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-06-03 17:50:39.379, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=blue, time=2015-06-03 17:50:39.33, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-03 17:50:39.333, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=white, time=2015-06-03 17:50:39.381, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=brown, time=2015-06-03 17:50:39.337, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=yellow, time=2015-06-03 17:50:39.339, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-06-03 17:50:39.383, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-03 17:50:39.342, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=white, time=2015-06-03 17:50:39.343, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=blue, time=2015-06-03 17:50:39.385, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-06-03 17:50:39.345, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-06-03 17:50:39.387, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=blue, time=2015-06-03 17:50:39.348, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=brown, time=2015-06-03 17:50:39.349, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=white, time=2015-06-03 17:50:39.352, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=white, time=2015-06-03 17:50:39.388, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=brown, time=2015-06-03 17:50:39.354, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=blue, time=2015-06-03 17:50:39.39, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=yellow, time=2015-06-03 17:50:39.392, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=yellow, time=2015-06-03 17:50:39.394, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-06-03 17:50:39.396, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-06-03 17:50:39.282, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-06-03 17:50:39.356, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=brown, time=2015-06-03 17:50:39.289, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-06-03 17:50:39.306, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=yellow, time=2015-06-03 17:50:39.311, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=blue, time=2015-06-03 17:50:39.397, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-03 17:50:39.322, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=blue, time=2015-06-03 17:50:39.326, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-06-03 17:50:39.282, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-06-03 17:50:39.328, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=2], subject=brown, time=2015-06-03 17:50:39.289, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=blue, time=2015-06-03 17:50:39.357, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=blue, time=2015-06-03 17:50:39.33, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-03 17:50:39.333, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=brown, time=2015-06-03 17:50:39.337, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=yellow, time=2015-06-03 17:50:39.339, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-03 17:50:39.342, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=white, time=2015-06-03 17:50:39.343, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-06-03 17:50:39.345, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=blue, time=2015-06-03 17:50:39.348, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=brown, time=2015-06-03 17:50:39.349, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=white, time=2015-06-03 17:50:39.352, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=brown, time=2015-06-03 17:50:39.354, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-06-03 17:50:39.356, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=blue, time=2015-06-03 17:50:39.357, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-06-03 17:50:39.36, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-06-03 17:50:39.362, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=2], subject=brown, time=2015-06-03 17:50:39.289, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=white, time=2015-06-03 17:50:39.364, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-03 17:50:39.365, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-06-03 17:50:39.306, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=yellow, time=2015-06-03 17:50:39.367, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=brown, time=2015-06-03 17:50:39.369, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=yellow, time=2015-06-03 17:50:39.371, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=blue, time=2015-06-03 17:50:39.374, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=yellow, time=2015-06-03 17:50:39.375, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=blue, time=2015-06-03 17:50:39.377, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-06-03 17:50:39.379, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=white, time=2015-06-03 17:50:39.381, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-06-03 17:50:39.383, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=blue, time=2015-06-03 17:50:39.385, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-06-03 17:50:39.387, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=white, time=2015-06-03 17:50:39.388, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=blue, time=2015-06-03 17:50:39.39, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=yellow, time=2015-06-03 17:50:39.392, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=yellow, time=2015-06-03 17:50:39.394, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=3], subject=blue, time=2015-06-03 17:50:39.306, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-06-03 17:50:39.396, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=blue, time=2015-06-03 17:50:39.397, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-06-03 17:50:39.36, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=4], subject=yellow, time=2015-06-03 17:50:39.311, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-06-03 17:50:39.362, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=white, time=2015-06-03 17:50:39.364, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-03 17:50:39.365, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=4], subject=yellow, time=2015-06-03 17:50:39.311, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=yellow, time=2015-06-03 17:50:39.367, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=brown, time=2015-06-03 17:50:39.369, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-03 17:50:39.322, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=yellow, time=2015-06-03 17:50:39.371, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=blue, time=2015-06-03 17:50:39.374, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-06-03 17:50:39.322, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=yellow, time=2015-06-03 17:50:39.375, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=6], subject=blue, time=2015-06-03 17:50:39.326, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=6], subject=blue, time=2015-06-03 17:50:39.326, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-06-03 17:50:39.328, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=blue, time=2015-06-03 17:50:39.377, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-06-03 17:50:39.328, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=1], subject=blue, time=2015-06-03 17:50:39.33, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-06-03 17:50:39.379, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=white, time=2015-06-03 17:50:39.381, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-06-03 17:50:39.383, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=blue, time=2015-06-03 17:50:39.385, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-06-03 17:50:39.387, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=1], subject=blue, time=2015-06-03 17:50:39.33, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-03 17:50:39.333, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=white, time=2015-06-03 17:50:39.388, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=blue, time=2015-06-03 17:50:39.39, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=yellow, time=2015-06-03 17:50:39.392, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=yellow, time=2015-06-03 17:50:39.394, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=2], subject=yellow, time=2015-06-03 17:50:39.333, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-06-03 17:50:39.396, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=3], subject=brown, time=2015-06-03 17:50:39.337, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=blue, time=2015-06-03 17:50:39.397, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=3], subject=brown, time=2015-06-03 17:50:39.337, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=4], subject=yellow, time=2015-06-03 17:50:39.339, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=4], subject=yellow, time=2015-06-03 17:50:39.339, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-03 17:50:39.342, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=5], subject=blue, time=2015-06-03 17:50:39.342, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=6], subject=white, time=2015-06-03 17:50:39.343, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=6], subject=white, time=2015-06-03 17:50:39.343, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-06-03 17:50:39.345, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=1], subject=blue, time=2015-06-03 17:50:39.348, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-06-03 17:50:39.345, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=1], subject=blue, time=2015-06-03 17:50:39.348, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=2], subject=brown, time=2015-06-03 17:50:39.349, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=2], subject=brown, time=2015-06-03 17:50:39.349, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=3], subject=white, time=2015-06-03 17:50:39.352, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=4], subject=brown, time=2015-06-03 17:50:39.354, clock=0]
org notification: Goal [id=null, cell=Cell [x=4, y=4], agent=null, time=2015-06-03 17:50:39.486, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-06-03 17:50:39.356, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=6], subject=blue, time=2015-06-03 17:50:39.357, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=3], subject=white, time=2015-06-03 17:50:39.352, clock=0]
org notification: Goal [id=null, cell=Cell [x=4, y=4], agent=null, time=2015-06-03 17:50:39.486, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-06-03 17:50:39.36, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-06-03 17:50:39.362, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=4], subject=brown, time=2015-06-03 17:50:39.354, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=2], subject=white, time=2015-06-03 17:50:39.364, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-06-03 17:50:39.356, clock=0]
org notification: Group [name=g, ra=a10, type=raaa, clock=0, time=2015-06-03 17:50:39.582]
org notification: Group [name=g, ra=a10, type=raaa, clock=0, time=2015-06-03 17:50:39.582]
org notification: Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-03 17:50:39.365, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=6], subject=blue, time=2015-06-03 17:50:39.357, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-06-03 17:50:39.36, clock=0]
object notification: Prohibition [subject=a30, prohibition=[rejectRequests(a30)], sanction=[reduce(a30, 200)], clock=1, time=2015-06-03 17:50:39.629]
object notification: Prohibition [subject=a40, prohibition=[rejectRequests(a40)], sanction=[reduce(a40, 200)], clock=1, time=2015-06-03 17:50:39.632]
object notification: Prohibition [subject=a10, prohibition=[rejectRequests(a10)], sanction=[reduce(a10, 200)], clock=1, time=2015-06-03 17:50:39.621]
object notification: Prohibition [subject=a30, prohibition=[rejectRequests(a30)], sanction=[reduce(a30, 200)], clock=5, time=2015-06-03 17:50:39.654]
object notification: Prohibition [subject=a10, prohibition=[rejectRequests(a10)], sanction=[reduce(a10, 200)], clock=5, time=2015-06-03 17:50:39.639]
object notification: Prohibition [subject=a10, prohibition=[moveTooFast(a10)], sanction=[reduce(a10, 300)], clock=1, time=2015-06-03 17:50:39.639]
object notification: Prohibition [subject=a40, prohibition=[rejectRequests(a40)], sanction=[reduce(a40, 200)], clock=5, time=2015-06-03 17:50:39.671]
object notification: Prohibition [subject=a30, prohibition=[moveTooFast(a30)], sanction=[reduce(a30, 300)], clock=1, time=2015-06-03 17:50:39.673]
object notification: Prohibition [subject=a10, prohibition=[moveTooFast(a10)], sanction=[reduce(a10, 300)], clock=5, time=2015-06-03 17:50:39.673]
object notification: Obligation [subject=a10, obligation=[surround(4, 4)], sanction=[reduce(g, 700)], deadline=27, time=2015-06-03 17:50:39.615, clock=1]
object notification: Obligation [subject=a10, obligation=[surround(4, 4)], sanction=[reduce(g, 700)], deadline=27, time=2015-06-03 17:50:39.631, clock=5]
object notification: Prohibition [subject=a40, prohibition=[moveTooFast(a40)], sanction=[reduce(a40, 300)], clock=1, time=2015-06-03 17:50:39.684]
object notification: Prohibition [subject=a30, prohibition=[moveTooFast(a30)], sanction=[reduce(a30, 300)], clock=5, time=2015-06-03 17:50:39.69]
object notification: Prohibition [subject=a40, prohibition=[moveTooFast(a40)], sanction=[reduce(a40, 300)], clock=5, time=2015-06-03 17:50:39.716]
org notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-06-03 17:50:39.362, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=2], subject=white, time=2015-06-03 17:50:39.364, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=4], subject=yellow, time=2015-06-03 17:50:39.367, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=5], subject=brown, time=2015-06-03 17:50:39.369, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-03 17:50:39.365, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=6], subject=yellow, time=2015-06-03 17:50:39.371, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=4], subject=yellow, time=2015-06-03 17:50:39.367, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=0], subject=blue, time=2015-06-03 17:50:39.374, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=1], subject=yellow, time=2015-06-03 17:50:39.375, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=5], subject=brown, time=2015-06-03 17:50:39.369, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=2], subject=blue, time=2015-06-03 17:50:39.377, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=6], subject=yellow, time=2015-06-03 17:50:39.371, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-06-03 17:50:39.379, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=4], subject=white, time=2015-06-03 17:50:39.381, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-06-03 17:50:39.383, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=6], subject=blue, time=2015-06-03 17:50:39.385, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=0], subject=blue, time=2015-06-03 17:50:39.374, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-06-03 17:50:39.387, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=1], subject=yellow, time=2015-06-03 17:50:39.375, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=1], subject=white, time=2015-06-03 17:50:39.388, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=2], subject=blue, time=2015-06-03 17:50:39.377, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=2], subject=blue, time=2015-06-03 17:50:39.39, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-06-03 17:50:39.379, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=3], subject=yellow, time=2015-06-03 17:50:39.392, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=4], subject=white, time=2015-06-03 17:50:39.381, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=4], subject=yellow, time=2015-06-03 17:50:39.394, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-06-03 17:50:39.383, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=6], subject=blue, time=2015-06-03 17:50:39.385, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-06-03 17:50:39.396, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=6], subject=blue, time=2015-06-03 17:50:39.397, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-06-03 17:50:39.387, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=1], subject=white, time=2015-06-03 17:50:39.388, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=2], subject=blue, time=2015-06-03 17:50:39.39, clock=0]
#########################Game Initialized
AGENT Thread-16: current phase name: Norm Phase
org notification: Tile [id=null, cell=Cell [x=6, y=3], subject=yellow, time=2015-06-03 17:50:39.392, clock=0]
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
org notification: Tile [id=null, cell=Cell [x=6, y=4], subject=yellow, time=2015-06-03 17:50:39.394, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-06-03 17:50:39.396, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=6], subject=blue, time=2015-06-03 17:50:39.397, clock=0]
#########################Game Initialized
AGENT Thread-20: current phase name: Norm Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
#########################Game Initialized
AGENT Thread-18: current phase name: Norm Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
object notification: Time [clock=2, time=2015-06-03 17:50:41.866]
object notification: Time [clock=2, time=2015-06-03 17:50:41.866]
object notification: Time [clock=2, time=2015-06-03 17:50:41.866]
org notification: Time [clock=2, time=2015-06-03 17:50:41.866]
org notification: Time [clock=2, time=2015-06-03 17:50:41.866]
[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


Event processed UpdateClock(4)
Event processed UpdateClock(4)
Event processed UpdateClock(1)
Event processed UpdateClock(1)
Event processed UpdateClock(5)
Event processed UpdateClock(5)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateTile(white, 0, 0)
Event processed UpdateTile(white, 0, 0)
Event processed UpdateTile(blue, 0, 1)
Event processed UpdateTile(blue, 0, 1)
Event processed UpdateTile(blue, 0, 2)
Event processed UpdateTile(blue, 0, 2)
Event processed UpdateTile(yellow, 0, 3)
Event processed UpdateTile(yellow, 0, 3)
Event processed UpdateTile(white, 0, 4)
Event processed UpdateTile(white, 0, 4)
Event processed UpdateTile(blue, 0, 5)
Event processed UpdateTile(blue, 0, 5)
Event processed UpdateTile(brown, 0, 6)
Event processed UpdateTile(brown, 0, 6)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(yellow, 1, 1)
Event processed UpdateTile(yellow, 1, 1)
Event processed UpdateTile(brown, 1, 2)
Event processed UpdateTile(brown, 1, 2)
Event processed UpdateTile(blue, 1, 3)
Event processed UpdateTile(yellow, 1, 4)
Event processed UpdateTile(blue, 1, 3)
object notification: Time [clock=6, time=2015-06-03 17:50:46.102]
org notification: Time [clock=6, time=2015-06-03 17:50:46.102]
org notification: Time [clock=6, time=2015-06-03 17:50:46.102]
object notification: Time [clock=6, time=2015-06-03 17:50:46.102]
Event processed UpdateTile(yellow, 1, 4)
Event processed UpdateTile(brown, 1, 5)
object notification: Time [clock=6, time=2015-06-03 17:50:46.102]
Event processed UpdateTile(brown, 1, 5)
Event processed UpdateTile(blue, 1, 6)
Event processed UpdateClock(4)
Event processed UpdateClock(1)
Event processed UpdateClock(5)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateTile(blue, 1, 6)
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(white, 0, 0)
Event processed UpdateTile(blue, 2, 1)
Event processed UpdateTile(blue, 0, 1)
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(blue, 0, 2)
Event processed UpdateTile(yellow, 2, 2)
Event processed UpdateTile(yellow, 0, 3)
Event processed UpdateTile(brown, 2, 3)
Event processed UpdateTile(white, 0, 4)
Event processed UpdateTile(yellow, 2, 4)
Event processed UpdateTile(blue, 2, 1)
Event processed UpdateTile(blue, 0, 5)
Event processed UpdateTile(blue, 2, 5)
Event processed UpdateTile(yellow, 2, 2)
Event processed UpdateTile(brown, 2, 3)
Event processed UpdateTile(brown, 0, 6)
Event processed UpdateTile(yellow, 2, 4)
Event processed UpdateTile(white, 2, 6)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(blue, 2, 5)
Event processed UpdateTile(yellow, 1, 1)
Event processed UpdateTile(white, 3, 0)
Event processed UpdateTile(white, 2, 6)
Event processed UpdateTile(blue, 3, 1)
Event processed UpdateTile(white, 3, 0)
Event processed UpdateTile(brown, 1, 2)
Event processed UpdateTile(blue, 3, 1)
Event processed UpdateTile(blue, 1, 3)
Event processed UpdateTile(brown, 3, 2)
Event processed UpdateTile(yellow, 1, 4)
Event processed UpdateTile(white, 3, 3)
Event processed UpdateTile(brown, 3, 2)
Event processed UpdateTile(brown, 3, 4)
Event processed UpdateTile(white, 3, 3)
Event processed UpdateTile(yellow, 3, 5)
Event processed UpdateTile(brown, 3, 4)
Event processed UpdateTile(blue, 3, 6)
Event processed UpdateTile(yellow, 3, 5)
Event processed UpdateTile(brown, 4, 0)
Event processed UpdateTile(blue, 3, 6)
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(brown, 4, 0)
Event processed UpdateTile(white, 4, 2)
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(white, 4, 3)
Event processed UpdateTile(white, 4, 2)
Event processed UpdateTile(yellow, 4, 4)
Event processed UpdateTile(white, 4, 3)
Event processed UpdateTile(brown, 4, 5)
Event processed UpdateTile(yellow, 4, 4)
Event processed UpdateTile(yellow, 4, 6)
Event processed UpdateTile(brown, 4, 5)
Event processed UpdateTile(blue, 5, 0)
Event processed UpdateTile(brown, 1, 5)
Event processed UpdateTile(yellow, 4, 6)
Event processed UpdateTile(blue, 1, 6)
Event processed UpdateTile(blue, 5, 0)
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(yellow, 5, 1)
Event processed UpdateTile(blue, 2, 1)
Event processed UpdateTile(blue, 5, 2)
Event processed UpdateTile(yellow, 2, 2)
Event processed UpdateTile(yellow, 5, 3)
Event processed UpdateTile(brown, 2, 3)
Event processed UpdateTile(white, 5, 4)
Event processed UpdateTile(yellow, 2, 4)
Event processed UpdateTile(brown, 5, 5)
Event processed UpdateTile(blue, 2, 5)
Event processed UpdateTile(blue, 5, 6)
Event processed UpdateTile(white, 2, 6)
Event processed UpdateTile(blue, 6, 0)
Event processed UpdateTile(white, 3, 0)
Event processed UpdateTile(yellow, 5, 1)
Event processed UpdateTile(blue, 3, 1)
Event processed UpdateTile(blue, 5, 2)
Event processed UpdateTile(brown, 3, 2)
Event processed UpdateTile(white, 6, 1)
Event processed UpdateTile(blue, 6, 2)
Event processed UpdateTile(white, 3, 3)
Event processed UpdateTile(yellow, 6, 3)
Event processed UpdateTile(brown, 3, 4)
Event processed UpdateTile(yellow, 6, 4)
Event processed UpdateTile(yellow, 3, 5)
Event processed UpdateTile(brown, 6, 5)
Event processed UpdateTile(blue, 3, 6)
Event processed UpdateTile(blue, 6, 6)
Event processed UpdateTile(brown, 4, 0)
Event processed UpdateTile(yellow, 5, 3)
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(white, 5, 4)
Event processed UpdateTile(white, 4, 2)
Event processed UpdateTile(brown, 5, 5)
Event processed UpdateTile(white, 4, 3)
Event processed UpdateTile(blue, 5, 6)
Event processed UpdateTile(yellow, 4, 4)
Event processed UpdateTile(blue, 6, 0)
Event processed UpdateTile(brown, 4, 5)
Event processed UpdateTile(white, 6, 1)
Event processed UpdateTile(yellow, 4, 6)
Event processed UpdateTile(blue, 6, 2)
Event processed UpdateTile(blue, 5, 0)
Event processed UpdateTile(yellow, 6, 3)
Event processed UpdateTile(yellow, 6, 4)
Event processed UpdateTile(yellow, 5, 1)
Event processed adoptProhibition(rejectRequests(a40), reduce(a40, 200))
Event processed UpdateTile(brown, 6, 5)
Event processed UpdateTile(blue, 5, 2)
Event processed adoptProhibition(rejectRequests(a40), reduce(a40, 200))
Event processed UpdateTile(yellow, 5, 3)
Event processed UpdateTile(white, 5, 4)
Event processed adoptProhibition(moveTooFast(a40), reduce(a40, 300))
Event processed UpdateTile(brown, 5, 5)
Event processed UpdateTile(blue, 6, 6)
Event processed UpdateTile(blue, 5, 6)
Event processed adoptProhibition(rejectRequests(a30), reduce(a30, 200))
Event processed UpdateTile(blue, 6, 0)
Event processed adoptProhibition(rejectRequests(a30), reduce(a30, 200))
Event processed UpdateTile(white, 6, 1)
Event processed UpdateTile(blue, 6, 2)
Event processed adoptProhibition(moveTooFast(a30), reduce(a30, 300))
Event processed adoptProhibition(moveTooFast(a40), reduce(a40, 300))
Event processed UpdateClock(2)
Event processed UpdateTile(yellow, 6, 3)
Event processed UpdateClock(6)
Event processed UpdateTile(yellow, 6, 4)
Event processed adoptProhibition(moveTooFast(a30), reduce(a30, 300))
Event processed UpdateTile(brown, 6, 5)
Event processed UpdateClock(2)
Event processed UpdateClock(6)
Event processed UpdateTile(blue, 6, 6)
Event processed adoptProhibition(rejectRequests(a10), reduce(a10, 200))
Event processed adoptProhibition(rejectRequests(a10), reduce(a10, 200))
Event processed adoptProhibition(moveTooFast(a10), reduce(a10, 300))
Event processed adoptProhibition(moveTooFast(a10), reduce(a10, 300))
Event processed adoptObligation(surround(4, 4), 27, reduce(g, 700))
Event processed adoptObligation(surround(4, 4), 27, reduce(g, 700))
Event processed UpdateClock(2)
Event processed UpdateClock(6)
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(4)
},
{	UpdateClock(1)
},
{	UpdateClock(5)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(brown, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(yellow, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(blue, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(blue, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(brown, 2, 3)
},
{	UpdateTile(yellow, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(white, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(blue, 3, 1)
},
{	UpdateTile(brown, 3, 2)
},
{	UpdateTile(white, 3, 3)
},
{	UpdateTile(brown, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(blue, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(white, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(yellow, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(yellow, 4, 6)
},
{	UpdateTile(blue, 5, 0)
},
{	UpdateTile(yellow, 5, 1)
},
{	UpdateTile(blue, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(white, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(blue, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(white, 6, 1)
},
{	UpdateTile(blue, 6, 2)
},
{	UpdateTile(yellow, 6, 3)
},
{	UpdateTile(yellow, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(blue, 6, 6)
},
{	adoptProhibition(rejectRequests(a40), reduce(a40, 200))
},
{	adoptProhibition(rejectRequests(a40), reduce(a40, 200))
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
},
{	UpdateClock(2)
},
{	UpdateClock(6)
}


[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(4)
},
{	UpdateClock(1)
},
{	UpdateClock(5)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(brown, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(yellow, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(blue, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(blue, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(brown, 2, 3)
},
{	UpdateTile(yellow, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(white, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(blue, 3, 1)
},
{	UpdateTile(brown, 3, 2)
},
{	UpdateTile(white, 3, 3)
},
{	UpdateTile(brown, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(blue, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(white, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(yellow, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(yellow, 4, 6)
},
{	UpdateTile(blue, 5, 0)
},
{	UpdateTile(yellow, 5, 1)
},
{	UpdateTile(blue, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(white, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(blue, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(white, 6, 1)
},
{	UpdateTile(blue, 6, 2)
},
{	UpdateTile(yellow, 6, 3)
},
{	UpdateTile(yellow, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(blue, 6, 6)
},
{	adoptProhibition(rejectRequests(a30), reduce(a30, 200))
},
{	adoptProhibition(rejectRequests(a30), reduce(a30, 200))
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
},
{	UpdateClock(2)
},
{	UpdateClock(6)
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(4), UpdateClock(1), UpdateClock(5), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateTile(white, 0, 0), UpdateTile(blue, 0, 1), UpdateTile(blue, 0, 2), UpdateTile(yellow, 0, 3), UpdateTile(white, 0, 4), UpdateTile(blue, 0, 5), UpdateTile(brown, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(yellow, 1, 1), UpdateTile(brown, 1, 2), UpdateTile(blue, 1, 3), UpdateTile(yellow, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(blue, 1, 6), UpdateTile(white, 2, 0), UpdateTile(blue, 2, 1), UpdateTile(yellow, 2, 2), UpdateTile(brown, 2, 3), UpdateTile(yellow, 2, 4), UpdateTile(blue, 2, 5), UpdateTile(white, 2, 6), UpdateTile(white, 3, 0), UpdateTile(blue, 3, 1), UpdateTile(brown, 3, 2), UpdateTile(white, 3, 3), UpdateTile(brown, 3, 4), UpdateTile(yellow, 3, 5), UpdateTile(blue, 3, 6), UpdateTile(brown, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(white, 4, 2), UpdateTile(white, 4, 3), UpdateTile(yellow, 4, 4), UpdateTile(brown, 4, 5), UpdateTile(yellow, 4, 6), UpdateTile(blue, 5, 0), UpdateTile(yellow, 5, 1), UpdateTile(blue, 5, 2), UpdateTile(yellow, 5, 3), UpdateTile(white, 5, 4), UpdateTile(brown, 5, 5), UpdateTile(blue, 5, 6), UpdateTile(blue, 6, 0), UpdateTile(white, 6, 1), UpdateTile(blue, 6, 2), UpdateTile(yellow, 6, 3), UpdateTile(yellow, 6, 4), UpdateTile(brown, 6, 5), UpdateTile(blue, 6, 6), adoptProhibition(rejectRequests(a30), reduce(a30, 200)), adoptProhibition(rejectRequests(a30), reduce(a30, 200)), adoptProhibition(moveTooFast(a30), reduce(a30, 300)), adoptProhibition(moveTooFast(a30), reduce(a30, 300)), UpdateClock(2), UpdateClock(6)]
[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(4), UpdateClock(1), UpdateClock(5), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateTile(white, 0, 0), UpdateTile(blue, 0, 1), UpdateTile(blue, 0, 2), UpdateTile(yellow, 0, 3), UpdateTile(white, 0, 4), UpdateTile(blue, 0, 5), UpdateTile(brown, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(yellow, 1, 1), UpdateTile(brown, 1, 2), UpdateTile(blue, 1, 3), UpdateTile(yellow, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(blue, 1, 6), UpdateTile(white, 2, 0), UpdateTile(blue, 2, 1), UpdateTile(yellow, 2, 2), UpdateTile(brown, 2, 3), UpdateTile(yellow, 2, 4), UpdateTile(blue, 2, 5), UpdateTile(white, 2, 6), UpdateTile(white, 3, 0), UpdateTile(blue, 3, 1), UpdateTile(brown, 3, 2), UpdateTile(white, 3, 3), UpdateTile(brown, 3, 4), UpdateTile(yellow, 3, 5), UpdateTile(blue, 3, 6), UpdateTile(brown, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(white, 4, 2), UpdateTile(white, 4, 3), UpdateTile(yellow, 4, 4), UpdateTile(brown, 4, 5), UpdateTile(yellow, 4, 6), UpdateTile(blue, 5, 0), UpdateTile(yellow, 5, 1), UpdateTile(blue, 5, 2), UpdateTile(yellow, 5, 3), UpdateTile(white, 5, 4), UpdateTile(brown, 5, 5), UpdateTile(blue, 5, 6), UpdateTile(blue, 6, 0), UpdateTile(white, 6, 1), UpdateTile(blue, 6, 2), UpdateTile(yellow, 6, 3), UpdateTile(yellow, 6, 4), UpdateTile(brown, 6, 5), UpdateTile(blue, 6, 6), adoptProhibition(rejectRequests(a40), reduce(a40, 200)), adoptProhibition(rejectRequests(a40), reduce(a40, 200)), adoptProhibition(moveTooFast(a40), reduce(a40, 300)), adoptProhibition(moveTooFast(a40), reduce(a40, 300)), UpdateClock(2), UpdateClock(6)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(4)
},
{	UpdateClock(1)
},
{	UpdateClock(5)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(brown, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(yellow, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(blue, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(blue, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(brown, 2, 3)
},
{	UpdateTile(yellow, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(white, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(blue, 3, 1)
},
{	UpdateTile(brown, 3, 2)
},
{	UpdateTile(white, 3, 3)
},
{	UpdateTile(brown, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(blue, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(white, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(yellow, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(yellow, 4, 6)
},
{	UpdateTile(blue, 5, 0)
},
{	UpdateTile(yellow, 5, 1)
},
{	UpdateTile(blue, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(white, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(blue, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(white, 6, 1)
},
{	UpdateTile(blue, 6, 2)
},
{	UpdateTile(yellow, 6, 3)
},
{	UpdateTile(yellow, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(blue, 6, 6)
},
{	adoptProhibition(rejectRequests(a30), reduce(a30, 200))
},
{	adoptProhibition(rejectRequests(a30), reduce(a30, 200))
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
},
{	UpdateClock(2)
},
{	UpdateClock(6)
}


[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(4)
},
{	UpdateClock(1)
},
{	UpdateClock(5)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(brown, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(yellow, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(blue, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(blue, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(brown, 2, 3)
},
{	UpdateTile(yellow, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(white, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(blue, 3, 1)
},
{	UpdateTile(brown, 3, 2)
},
{	UpdateTile(white, 3, 3)
},
{	UpdateTile(brown, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(blue, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(white, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(yellow, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(yellow, 4, 6)
},
{	UpdateTile(blue, 5, 0)
},
{	UpdateTile(yellow, 5, 1)
},
{	UpdateTile(blue, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(white, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(blue, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(white, 6, 1)
},
{	UpdateTile(blue, 6, 2)
},
{	UpdateTile(yellow, 6, 3)
},
{	UpdateTile(yellow, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(blue, 6, 6)
},
{	adoptProhibition(rejectRequests(a40), reduce(a40, 200))
},
{	adoptProhibition(rejectRequests(a40), reduce(a40, 200))
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
},
{	UpdateClock(2)
},
{	UpdateClock(6)
}


[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(4)
},
{	UpdateClock(1)
},
{	UpdateClock(5)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(brown, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(yellow, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(blue, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(blue, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(brown, 2, 3)
},
{	UpdateTile(yellow, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(white, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(blue, 3, 1)
},
{	UpdateTile(brown, 3, 2)
},
{	UpdateTile(white, 3, 3)
},
{	UpdateTile(brown, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(blue, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(white, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(yellow, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(yellow, 4, 6)
},
{	UpdateTile(blue, 5, 0)
},
{	UpdateTile(yellow, 5, 1)
},
{	UpdateTile(blue, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(white, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(blue, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(white, 6, 1)
},
{	UpdateTile(blue, 6, 2)
},
{	UpdateTile(yellow, 6, 3)
},
{	UpdateTile(yellow, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(blue, 6, 6)
},
{	adoptProhibition(rejectRequests(a10), reduce(a10, 200))
},
{	adoptProhibition(rejectRequests(a10), reduce(a10, 200))
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
},
{	adoptObligation(surround(4, 4), 27, reduce(g, 700))
},
{	adoptObligation(surround(4, 4), 27, reduce(g, 700))
},
{	UpdateClock(2)
},
{	UpdateClock(6)
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(4), UpdateClock(1), UpdateClock(5), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateTile(white, 0, 0), UpdateTile(blue, 0, 1), UpdateTile(blue, 0, 2), UpdateTile(yellow, 0, 3), UpdateTile(white, 0, 4), UpdateTile(blue, 0, 5), UpdateTile(brown, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(yellow, 1, 1), UpdateTile(brown, 1, 2), UpdateTile(blue, 1, 3), UpdateTile(yellow, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(blue, 1, 6), UpdateTile(white, 2, 0), UpdateTile(blue, 2, 1), UpdateTile(yellow, 2, 2), UpdateTile(brown, 2, 3), UpdateTile(yellow, 2, 4), UpdateTile(blue, 2, 5), UpdateTile(white, 2, 6), UpdateTile(white, 3, 0), UpdateTile(blue, 3, 1), UpdateTile(brown, 3, 2), UpdateTile(white, 3, 3), UpdateTile(brown, 3, 4), UpdateTile(yellow, 3, 5), UpdateTile(blue, 3, 6), UpdateTile(brown, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(white, 4, 2), UpdateTile(white, 4, 3), UpdateTile(yellow, 4, 4), UpdateTile(brown, 4, 5), UpdateTile(yellow, 4, 6), UpdateTile(blue, 5, 0), UpdateTile(yellow, 5, 1), UpdateTile(blue, 5, 2), UpdateTile(yellow, 5, 3), UpdateTile(white, 5, 4), UpdateTile(brown, 5, 5), UpdateTile(blue, 5, 6), UpdateTile(blue, 6, 0), UpdateTile(white, 6, 1), UpdateTile(blue, 6, 2), UpdateTile(yellow, 6, 3), UpdateTile(yellow, 6, 4), UpdateTile(brown, 6, 5), UpdateTile(blue, 6, 6), adoptProhibition(rejectRequests(a10), reduce(a10, 200)), adoptProhibition(rejectRequests(a10), reduce(a10, 200)), adoptProhibition(moveTooFast(a10), reduce(a10, 300)), adoptProhibition(moveTooFast(a10), reduce(a10, 300)), adoptObligation(surround(4, 4), 27, reduce(g, 700)), adoptObligation(surround(4, 4), 27, reduce(g, 700)), UpdateClock(2), UpdateClock(6)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(4)
},
{	UpdateClock(1)
},
{	UpdateClock(5)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(blue, 0, 1)
},
{	UpdateTile(blue, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(brown, 1, 2)
},
{	UpdateTile(blue, 1, 3)
},
{	UpdateTile(yellow, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(blue, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(blue, 2, 1)
},
{	UpdateTile(yellow, 2, 2)
},
{	UpdateTile(brown, 2, 3)
},
{	UpdateTile(yellow, 2, 4)
},
{	UpdateTile(blue, 2, 5)
},
{	UpdateTile(white, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(blue, 3, 1)
},
{	UpdateTile(brown, 3, 2)
},
{	UpdateTile(white, 3, 3)
},
{	UpdateTile(brown, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(blue, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(white, 4, 2)
},
{	UpdateTile(white, 4, 3)
},
{	UpdateTile(yellow, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(yellow, 4, 6)
},
{	UpdateTile(blue, 5, 0)
},
{	UpdateTile(yellow, 5, 1)
},
{	UpdateTile(blue, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(white, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(blue, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(white, 6, 1)
},
{	UpdateTile(blue, 6, 2)
},
{	UpdateTile(yellow, 6, 3)
},
{	UpdateTile(yellow, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(blue, 6, 6)
},
{	adoptProhibition(rejectRequests(a10), reduce(a10, 200))
},
{	adoptProhibition(rejectRequests(a10), reduce(a10, 200))
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
},
{	adoptObligation(surround(4, 4), 27, reduce(g, 700))
},
{	adoptObligation(surround(4, 4), 27, reduce(g, 700))
},
{	UpdateClock(2)
},
{	UpdateClock(6)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@125797cf
[CTAH] The created APLList : [game_initialized]
[CTAH] Array of Terms: [Lapapl.data.Term;@50af8fc0
[CTAH] The created APLList : [game_initialized]
[CTAH] Array of Terms: [Lapapl.data.Term;@7b0277cd
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	adopta(surround(4, 4, 700) : 3 Jun 2015 17:07:26 GMT, priority 10)
},
{	adopta(surround(4, 4, 700) : 3 Jun 2015 17:07:26 GMT, priority 10)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0), adopta(surround(4, 4, 700) : 3 Jun 2015 17:07:26 GMT, priority 10), adopta(surround(4, 4, 700) : 3 Jun 2015 17:07:26 GMT, priority 10)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	adopta(surround(4, 4, 700) : 3 Jun 2015 17:07:26 GMT, priority 10)
},
{	adopta(surround(4, 4, 700) : 3 Jun 2015 17:07:26 GMT, priority 10)
}


obligation to be adopted: surround(4, 4, 700) : 3 Jun 2015 17:07:26 GMT, priority 10
obligation to be adopted: surround(4, 4, 700) : 3 Jun 2015 17:07:26 GMT, priority 10
[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized), aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized), aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized), aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(2); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(3); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(0); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getRole(2);
	getPos
}


[new scheduled]:[getRole(2); getPos]
[After]:{	getRole(2);
	getPos
}


[Planbase]:{	getRole(3);
	getPos
}


[new scheduled]:[getRole(3); getPos]
[After]:{	getRole(3);
	getPos
}


[Planbase]:{	getRole(0);
	getPos
}


[new scheduled]:[getRole(0); getPos]
[After]:{	getRole(0);
	getPos
}


[Planbase]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(2),L1,0); B(L1=[actionresult(X)]); GetRole(2, X); getPos]
[After]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[Planbase]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(3),L1,0); B(L1=[actionresult(X)]); GetRole(3, X); getPos]
[After]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[Planbase]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(0),L1,0); B(L1=[actionresult(X)]); GetRole(0, X); getPos]
[After]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[Planbase]:{	GetRole(2, none);
	getPos
}


[new scheduled]:[GetRole(2, none); getPos]
[After]:{	GetRole(2, none);
	getPos
}


[Planbase]:{	GetRole(3, none);
	getPos
}


[new scheduled]:[GetRole(3, none); getPos]
[After]:{	GetRole(3, none);
	getPos
}


[Planbase]:{	GetRole(0, raaa);
	getPos
}


[new scheduled]:[GetRole(0, raaa); getPos]
[After]:{	GetRole(0, raaa);
	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	getPos
}


[new scheduled]:[Surround(4, 4); sendSouth(a10, 4, 4, 100); sendWest(a20, 4, 4, 100); sendEast(a30, 4, 4, 100); sendNorth(a40, 4, 4, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(4, 4, 700) : Infinite, priority 10), getPos]
[After]:{	Surround(4, 4);
	sendSouth(a10, 4, 4, 100);
	sendWest(a20, 4, 4, 100);
	sendEast(a30, 4, 4, 100);
	sendNorth(a40, 4, 4, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
},
{	getPos
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[CTAH] Agentposition: [1,2]
[CTAH] Agentposition: [3,6]
[Planbase]:{	B(clock(C));
	GetAgentPos(1, 2, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(1, 2, C)]
[After]:{	B(clock(C));
	GetAgentPos(1, 2, C)
}


[Planbase]:{	B(clock(C));
	GetAgentPos(3, 6, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(3, 6, C)]
[After]:{	B(clock(C));
	GetAgentPos(3, 6, C)
}


[Planbase]:{	sendSouth(a10, 4, 4, 100);
	sendWest(a20, 4, 4, 100);
	sendEast(a30, 4, 4, 100);
	sendNorth(a40, 4, 4, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
},
{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[sendSouth(a10, 4, 4, 100); sendWest(a20, 4, 4, 100); sendEast(a30, 4, 4, 100); sendNorth(a40, 4, 4, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(4, 4, 700) : Infinite, priority 10), @ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	sendSouth(a10, 4, 4, 100);
	sendWest(a20, 4, 4, 100);
	sendEast(a30, 4, 4, 100);
	sendNorth(a40, 4, 4, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
},
{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[CTAH] Agentposition: [2,5]
[Planbase]:{	GetAgentPos(1, 2, 6)
}


[new scheduled]:[GetAgentPos(1, 2, 6)]
[After]:{	GetAgentPos(1, 2, 6)
}


[Planbase]:{	GetAgentPos(3, 6, 6)
}


[new scheduled]:[GetAgentPos(3, 6, 6)]
[After]:{	GetAgentPos(3, 6, 6)
}


[Planbase]:{	@ctenv(setGoal(a10, 4, 3, 4, 4, 100),L,0);
	sendWest(a20, 4, 4, 100);
	sendEast(a30, 4, 4, 100);
	sendNorth(a40, 4, 4, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
},
{	B(clock(C));
	GetAgentPos(2, 5, C)
}


[new scheduled]:[@ctenv(setGoal(a10, 4, 3, 4, 4, 100),L,0); sendWest(a20, 4, 4, 100); sendEast(a30, 4, 4, 100); sendNorth(a40, 4, 4, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(4, 4, 700) : Infinite, priority 10), B(clock(C)); GetAgentPos(2, 5, C)]
[After]:{	@ctenv(setGoal(a10, 4, 3, 4, 4, 100),L,0);
	sendWest(a20, 4, 4, 100);
	sendEast(a30, 4, 4, 100);
	sendNorth(a40, 4, 4, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
},
{	B(clock(C));
	GetAgentPos(2, 5, C)
}


agent writes: SetGoal [id=null, agent=a10, cell=Cell [x=4, y=3], goal=Cell [x=4, y=4], sanction=100, clock=2, time=2015-06-03 17:50:48.997]
org notification: SetGoal [id=null, agent=a10, cell=Cell [x=4, y=3], goal=Cell [x=4, y=4], sanction=100, clock=2, time=2015-06-03 17:50:48.997]
org notification: SetGoal [id=null, agent=a10, cell=Cell [x=4, y=3], goal=Cell [x=4, y=4], sanction=100, clock=2, time=2015-06-03 17:50:48.997]
object notification: Obligation [subject=a10, obligation=[at(4, 3, a10)], sanction=[reduce(a10, 700)], deadline=24, time=2015-06-03 17:50:49.004, clock=2]
object notification: Obligation [subject=a10, obligation=[at(4, 3, a10)], sanction=[reduce(a10, 700)], deadline=24, time=2015-06-03 17:50:49.004, clock=6]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed adoptObligation(at(4, 3, a10), 24, reduce(a10, 700))
Event processed adoptObligation(at(4, 3, a10), 24, reduce(a10, 700))
[Planbase]:{	@ctenv(setGoal(a20, 3, 4, 4, 4, 100),L,0);
	sendEast(a30, 4, 4, 100);
	sendNorth(a40, 4, 4, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
},
{	GetAgentPos(2, 5, 6)
},
{	adoptObligation(at(4, 3, a10), 24, reduce(a10, 700))
},
{	adoptObligation(at(4, 3, a10), 24, reduce(a10, 700))
}


[new scheduled]:[@ctenv(setGoal(a20, 3, 4, 4, 4, 100),L,0); sendEast(a30, 4, 4, 100); sendNorth(a40, 4, 4, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(4, 4, 700) : Infinite, priority 10), GetAgentPos(2, 5, 6), adoptObligation(at(4, 3, a10), 24, reduce(a10, 700)), adoptObligation(at(4, 3, a10), 24, reduce(a10, 700))]
[After]:{	@ctenv(setGoal(a20, 3, 4, 4, 4, 100),L,0);
	sendEast(a30, 4, 4, 100);
	sendNorth(a40, 4, 4, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
},
{	GetAgentPos(2, 5, 6)
},
{	adoptObligation(at(4, 3, a10), 24, reduce(a10, 700))
},
{	adoptObligation(at(4, 3, a10), 24, reduce(a10, 700))
}


agent writes: SetGoal [id=null, agent=a20, cell=Cell [x=3, y=4], goal=Cell [x=4, y=4], sanction=100, clock=2, time=2015-06-03 17:50:49.144]
org notification: SetGoal [id=null, agent=a20, cell=Cell [x=3, y=4], goal=Cell [x=4, y=4], sanction=100, clock=2, time=2015-06-03 17:50:49.144]
org notification: SetGoal [id=null, agent=a20, cell=Cell [x=3, y=4], goal=Cell [x=4, y=4], sanction=100, clock=2, time=2015-06-03 17:50:49.144]
[Planbase]:{	@ctenv(setGoal(a30, 5, 4, 4, 4, 100),L,0);
	sendNorth(a40, 4, 4, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
},
{	adoptz(at(4, 3, 700) : 3 Jun 2015 17:07:29 GMT, priority 10)
},
{	adoptz(at(4, 3, 700) : 3 Jun 2015 17:07:29 GMT, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a30, 5, 4, 4, 4, 100),L,0); sendNorth(a40, 4, 4, 100); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(4, 4, 700) : Infinite, priority 10), adoptz(at(4, 3, 700) : 3 Jun 2015 17:07:29 GMT, priority 10), adoptz(at(4, 3, 700) : 3 Jun 2015 17:07:29 GMT, priority 10)]
[After]:{	@ctenv(setGoal(a30, 5, 4, 4, 4, 100),L,0);
	sendNorth(a40, 4, 4, 100);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
},
{	adoptz(at(4, 3, 700) : 3 Jun 2015 17:07:29 GMT, priority 10)
},
{	adoptz(at(4, 3, 700) : 3 Jun 2015 17:07:29 GMT, priority 10)
}


agent writes: SetGoal [id=null, agent=a30, cell=Cell [x=5, y=4], goal=Cell [x=4, y=4], sanction=100, clock=2, time=2015-06-03 17:50:49.277]
org notification: SetGoal [id=null, agent=a30, cell=Cell [x=5, y=4], goal=Cell [x=4, y=4], sanction=100, clock=2, time=2015-06-03 17:50:49.277]
org notification: SetGoal [id=null, agent=a30, cell=Cell [x=5, y=4], goal=Cell [x=4, y=4], sanction=100, clock=2, time=2015-06-03 17:50:49.277]
obligation to be adopted: at(4, 3, 700) : 3 Jun 2015 17:07:29 GMT, priority 10
obligation to be adopted: at(4, 3, 700) : 3 Jun 2015 17:07:29 GMT, priority 10
object notification: Obligation [subject=a30, obligation=[at(5, 4, a30)], sanction=[reduce(a30, 700)], deadline=24, time=2015-06-03 17:50:49.279, clock=6]
object notification: Obligation [subject=a30, obligation=[at(5, 4, a30)], sanction=[reduce(a30, 700)], deadline=24, time=2015-06-03 17:50:49.279, clock=2]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setGoal(a40, 4, 5, 4, 4, 100),L,0);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a40, 4, 5, 4, 4, 100),L,0); B(tile(C1, 1, 1)); color(C1, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(4, 4, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setGoal(a40, 4, 5, 4, 4, 100),L,0);
	B(tile(C1, 1, 1));
	color(C1, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
}


Event processed adoptObligation(at(5, 4, a30), 24, reduce(a30, 700))
Event processed adoptObligation(at(5, 4, a30), 24, reduce(a30, 700))
agent writes: SetGoal [id=null, agent=a40, cell=Cell [x=4, y=5], goal=Cell [x=4, y=4], sanction=100, clock=2, time=2015-06-03 17:50:49.409]
org notification: SetGoal [id=null, agent=a40, cell=Cell [x=4, y=5], goal=Cell [x=4, y=4], sanction=100, clock=2, time=2015-06-03 17:50:49.409]
org notification: SetGoal [id=null, agent=a40, cell=Cell [x=4, y=5], goal=Cell [x=4, y=4], sanction=100, clock=2, time=2015-06-03 17:50:49.409]
object notification: Obligation [subject=a40, obligation=[at(4, 5, a40)], sanction=[reduce(a40, 700)], deadline=24, time=2015-06-03 17:50:49.412, clock=2]
object notification: Obligation [subject=a40, obligation=[at(4, 5, a40)], sanction=[reduce(a40, 700)], deadline=24, time=2015-06-03 17:50:49.412, clock=6]
[Planbase]:{	adoptObligation(at(5, 4, a30), 24, reduce(a30, 700))
},
{	adoptObligation(at(5, 4, a30), 24, reduce(a30, 700))
}


[new scheduled]:[adoptObligation(at(5, 4, a30), 24, reduce(a30, 700)), adoptObligation(at(5, 4, a30), 24, reduce(a30, 700))]
[After]:{	adoptObligation(at(5, 4, a30), 24, reduce(a30, 700))
},
{	adoptObligation(at(5, 4, a30), 24, reduce(a30, 700))
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	color(yellow, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
}


[new scheduled]:[color(yellow, a10, yes, 100); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(yellow, a40, no, 100); dropgoal(surround(4, 4, 700) : Infinite, priority 10)]
[After]:{	color(yellow, a10, yes, 100);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
}


Event processed adoptObligation(at(4, 5, a40), 24, reduce(a40, 700))
Event processed adoptObligation(at(4, 5, a40), 24, reduce(a40, 700))
[Planbase]:{	adoptz(at(5, 4, 700) : 3 Jun 2015 17:07:29 GMT, priority 10)
},
{	adoptz(at(5, 4, 700) : 3 Jun 2015 17:07:29 GMT, priority 10)
}


[new scheduled]:[adoptz(at(5, 4, 700) : 3 Jun 2015 17:07:29 GMT, priority 10), adoptz(at(5, 4, 700) : 3 Jun 2015 17:07:29 GMT, priority 10)]
[After]:{	adoptz(at(5, 4, 700) : 3 Jun 2015 17:07:29 GMT, priority 10)
},
{	adoptz(at(5, 4, 700) : 3 Jun 2015 17:07:29 GMT, priority 10)
}


[Planbase]:{	adoptObligation(at(4, 5, a40), 24, reduce(a40, 700))
},
{	adoptObligation(at(4, 5, a40), 24, reduce(a40, 700))
}


[new scheduled]:[adoptObligation(at(4, 5, a40), 24, reduce(a40, 700)), adoptObligation(at(4, 5, a40), 24, reduce(a40, 700))]
[After]:{	adoptObligation(at(4, 5, a40), 24, reduce(a40, 700))
},
{	adoptObligation(at(4, 5, a40), 24, reduce(a40, 700))
}


obligation to be adopted: at(5, 4, 700) : 3 Jun 2015 17:07:29 GMT, priority 10
obligation to be adopted: at(5, 4, 700) : 3 Jun 2015 17:07:29 GMT, priority 10
[Planbase]:{	@ctenv(setColor(a10, yellow, yes, 100),L,0);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a10, yellow, yes, 100),L,0); B(tile(C2, 2, 2)); color(C2, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(yellow, a40, no, 100); dropgoal(surround(4, 4, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a10, yellow, yes, 100),L,0);
	B(tile(C2, 2, 2));
	color(C2, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=yellow, agent=a10, type=yes, sanction=100, time=2015-06-03 17:50:49.719, clock=2]
org notification: Color [id=null, color=yellow, agent=a10, type=yes, sanction=100, time=2015-06-03 17:50:49.719, clock=2]
org notification: Color [id=null, color=yellow, agent=a10, type=yes, sanction=100, time=2015-06-03 17:50:49.719, clock=2]
object notification: Obligation [subject=a10, obligation=[color(yellow, a10)], sanction=[reduce(a10, 100)], deadline=21, time=2015-06-03 17:50:49.734, clock=2]
object notification: Obligation [subject=a10, obligation=[color(yellow, a10)], sanction=[reduce(a10, 100)], deadline=21, time=2015-06-03 17:50:49.734, clock=6]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptz(at(4, 5, 700) : 3 Jun 2015 17:07:29 GMT, priority 10)
},
{	adoptz(at(4, 5, 700) : 3 Jun 2015 17:07:29 GMT, priority 10)
}


[new scheduled]:[adoptz(at(4, 5, 700) : 3 Jun 2015 17:07:29 GMT, priority 10), adoptz(at(4, 5, 700) : 3 Jun 2015 17:07:29 GMT, priority 10)]
[After]:{	adoptz(at(4, 5, 700) : 3 Jun 2015 17:07:29 GMT, priority 10)
},
{	adoptz(at(4, 5, 700) : 3 Jun 2015 17:07:29 GMT, priority 10)
}


obligation to be adopted: at(4, 5, 700) : 3 Jun 2015 17:07:29 GMT, priority 10
obligation to be adopted: at(4, 5, 700) : 3 Jun 2015 17:07:29 GMT, priority 10
Event processed adoptObligation(color(yellow, a10), 21, reduce(a10, 100))
Event processed adoptObligation(color(yellow, a10), 21, reduce(a10, 100))
[Planbase]:{	color(yellow, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(yellow, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
},
{	adoptObligation(color(yellow, a10), 21, reduce(a10, 100))
},
{	adoptObligation(color(yellow, a10), 21, reduce(a10, 100))
}


[new scheduled]:[color(yellow, a20, yes, 100); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(yellow, a30, no, 100); color(yellow, a40, no, 100); dropgoal(surround(4, 4, 700) : Infinite, priority 10), adoptObligation(color(yellow, a10), 21, reduce(a10, 100)), adoptObligation(color(yellow, a10), 21, reduce(a10, 100))]
[After]:{	color(yellow, a20, yes, 100);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(yellow, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
},
{	adoptObligation(color(yellow, a10), 21, reduce(a10, 100))
},
{	adoptObligation(color(yellow, a10), 21, reduce(a10, 100))
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setColor(a20, yellow, yes, 100),L,0);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(yellow, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
},
{	adoptz(useColor(yellow, 100) : 3 Jun 2015 17:07:29 GMT, priority 10)
},
{	adoptz(useColor(yellow, 100) : 3 Jun 2015 17:07:29 GMT, priority 10)
}


[new scheduled]:[@ctenv(setColor(a20, yellow, yes, 100),L,0); B(tile(C3, 3, 3)); color(C3, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(C3, a20, no, 100); color(yellow, a30, no, 100); color(yellow, a40, no, 100); dropgoal(surround(4, 4, 700) : Infinite, priority 10), adoptz(useColor(yellow, 100) : 3 Jun 2015 17:07:29 GMT, priority 10), adoptz(useColor(yellow, 100) : 3 Jun 2015 17:07:29 GMT, priority 10)]
[After]:{	@ctenv(setColor(a20, yellow, yes, 100),L,0);
	B(tile(C3, 3, 3));
	color(C3, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(yellow, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
},
{	adoptz(useColor(yellow, 100) : 3 Jun 2015 17:07:29 GMT, priority 10)
},
{	adoptz(useColor(yellow, 100) : 3 Jun 2015 17:07:29 GMT, priority 10)
}


agent writes: Color [id=null, color=yellow, agent=a20, type=yes, sanction=100, time=2015-06-03 17:50:50.017, clock=2]
obligation to be adopted: useColor(yellow, 100) : 3 Jun 2015 17:07:29 GMT, priority 10
org notification: Color [id=null, color=yellow, agent=a20, type=yes, sanction=100, time=2015-06-03 17:50:50.017, clock=2]
obligation to be adopted: useColor(yellow, 100) : 3 Jun 2015 17:07:29 GMT, priority 10
org notification: Color [id=null, color=yellow, agent=a20, type=yes, sanction=100, time=2015-06-03 17:50:50.017, clock=2]
[Planbase]:{	color(white, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(white, a20, no, 100);
	color(yellow, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
}


[new scheduled]:[color(white, a30, yes, 100); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(white, a20, no, 100); color(yellow, a30, no, 100); color(yellow, a40, no, 100); dropgoal(surround(4, 4, 700) : Infinite, priority 10)]
[After]:{	color(white, a30, yes, 100);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(white, a20, no, 100);
	color(yellow, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
}


[Planbase]:{	@ctenv(setColor(a30, white, yes, 100),L,0);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(white, a20, no, 100);
	color(yellow, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a30, white, yes, 100),L,0); B(tile(C4, 4, 4)); color(C4, a40, yes, 100); color(C4, a10, no, 100); color(white, a20, no, 100); color(yellow, a30, no, 100); color(yellow, a40, no, 100); dropgoal(surround(4, 4, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a30, white, yes, 100),L,0);
	B(tile(C4, 4, 4));
	color(C4, a40, yes, 100);
	color(C4, a10, no, 100);
	color(white, a20, no, 100);
	color(yellow, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=white, agent=a30, type=yes, sanction=100, time=2015-06-03 17:50:50.196, clock=2]
org notification: Color [id=null, color=white, agent=a30, type=yes, sanction=100, time=2015-06-03 17:50:50.196, clock=2]
org notification: Color [id=null, color=white, agent=a30, type=yes, sanction=100, time=2015-06-03 17:50:50.196, clock=2]
object notification: Obligation [subject=a30, obligation=[color(white, a30)], sanction=[reduce(a30, 100)], deadline=21, time=2015-06-03 17:50:50.199, clock=2]
object notification: Obligation [subject=a30, obligation=[color(white, a30)], sanction=[reduce(a30, 100)], deadline=21, time=2015-06-03 17:50:50.199, clock=6]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	color(yellow, a40, yes, 100);
	color(yellow, a10, no, 100);
	color(white, a20, no, 100);
	color(yellow, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
}


[new scheduled]:[color(yellow, a40, yes, 100); color(yellow, a10, no, 100); color(white, a20, no, 100); color(yellow, a30, no, 100); color(yellow, a40, no, 100); dropgoal(surround(4, 4, 700) : Infinite, priority 10)]
[After]:{	color(yellow, a40, yes, 100);
	color(yellow, a10, no, 100);
	color(white, a20, no, 100);
	color(yellow, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
}


Event processed adoptObligation(color(white, a30), 21, reduce(a30, 100))
Event processed adoptObligation(color(white, a30), 21, reduce(a30, 100))
[Planbase]:{	adoptObligation(color(white, a30), 21, reduce(a30, 100))
},
{	adoptObligation(color(white, a30), 21, reduce(a30, 100))
}


[new scheduled]:[adoptObligation(color(white, a30), 21, reduce(a30, 100)), adoptObligation(color(white, a30), 21, reduce(a30, 100))]
[After]:{	adoptObligation(color(white, a30), 21, reduce(a30, 100))
},
{	adoptObligation(color(white, a30), 21, reduce(a30, 100))
}


[Planbase]:{	@ctenv(setColor(a40, yellow, yes, 100),L,0);
	color(yellow, a10, no, 100);
	color(white, a20, no, 100);
	color(yellow, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a40, yellow, yes, 100),L,0); color(yellow, a10, no, 100); color(white, a20, no, 100); color(yellow, a30, no, 100); color(yellow, a40, no, 100); dropgoal(surround(4, 4, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a40, yellow, yes, 100),L,0);
	color(yellow, a10, no, 100);
	color(white, a20, no, 100);
	color(yellow, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=yellow, agent=a40, type=yes, sanction=100, time=2015-06-03 17:50:50.439, clock=2]
org notification: Color [id=null, color=yellow, agent=a40, type=yes, sanction=100, time=2015-06-03 17:50:50.439, clock=2]
org notification: Color [id=null, color=yellow, agent=a40, type=yes, sanction=100, time=2015-06-03 17:50:50.439, clock=2]
object notification: Obligation [subject=a40, obligation=[color(yellow, a40)], sanction=[reduce(a40, 100)], deadline=21, time=2015-06-03 17:50:50.444, clock=2]
object notification: Obligation [subject=a40, obligation=[color(yellow, a40)], sanction=[reduce(a40, 100)], deadline=21, time=2015-06-03 17:50:50.442, clock=6]
[Planbase]:{	adoptz(useColor(white, 100) : 3 Jun 2015 17:07:30 GMT, priority 10)
},
{	adoptz(useColor(white, 100) : 3 Jun 2015 17:07:30 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 100) : 3 Jun 2015 17:07:30 GMT, priority 10), adoptz(useColor(white, 100) : 3 Jun 2015 17:07:30 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 100) : 3 Jun 2015 17:07:30 GMT, priority 10)
},
{	adoptz(useColor(white, 100) : 3 Jun 2015 17:07:30 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


obligation to be adopted: useColor(white, 100) : 3 Jun 2015 17:07:30 GMT, priority 10
obligation to be adopted: useColor(white, 100) : 3 Jun 2015 17:07:30 GMT, priority 10
[Planbase]:{	@ctenv(setColor(a10, yellow, no, 100),L,0);
	color(white, a20, no, 100);
	color(yellow, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a10, yellow, no, 100),L,0); color(white, a20, no, 100); color(yellow, a30, no, 100); color(yellow, a40, no, 100); dropgoal(surround(4, 4, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a10, yellow, no, 100),L,0);
	color(white, a20, no, 100);
	color(yellow, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
}


Event processed adoptObligation(color(yellow, a40), 21, reduce(a40, 100))
Event processed adoptObligation(color(yellow, a40), 21, reduce(a40, 100))
agent writes: Color [id=null, color=yellow, agent=a10, type=no, sanction=100, time=2015-06-03 17:50:50.581, clock=2]
org notification: Color [id=null, color=yellow, agent=a10, type=no, sanction=100, time=2015-06-03 17:50:50.581, clock=2]
org notification: Color [id=null, color=yellow, agent=a10, type=no, sanction=100, time=2015-06-03 17:50:50.581, clock=2]
object notification: Prohibition [subject=a10, prohibition=[color(yellow, a10)], sanction=[reduce(a10, 100)], clock=6, time=2015-06-03 17:50:50.588]
object notification: Prohibition [subject=a10, prohibition=[color(yellow, a10)], sanction=[reduce(a10, 100)], clock=2, time=2015-06-03 17:50:50.587]
[Planbase]:{	adoptObligation(color(yellow, a40), 21, reduce(a40, 100))
},
{	adoptObligation(color(yellow, a40), 21, reduce(a40, 100))
}


[new scheduled]:[adoptObligation(color(yellow, a40), 21, reduce(a40, 100)), adoptObligation(color(yellow, a40), 21, reduce(a40, 100))]
[After]:{	adoptObligation(color(yellow, a40), 21, reduce(a40, 100))
},
{	adoptObligation(color(yellow, a40), 21, reduce(a40, 100))
}


[Planbase]:


[new scheduled]:[]
[After]:


Event processed adoptProhibition(color(yellow, a10), reduce(a10, 100))
Event processed adoptProhibition(color(yellow, a10), reduce(a10, 100))
[Planbase]:{	@ctenv(setColor(a20, white, no, 100),L,0);
	color(yellow, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
},
{	adoptProhibition(color(yellow, a10), reduce(a10, 100))
},
{	adoptProhibition(color(yellow, a10), reduce(a10, 100))
}


[new scheduled]:[@ctenv(setColor(a20, white, no, 100),L,0); color(yellow, a30, no, 100); color(yellow, a40, no, 100); dropgoal(surround(4, 4, 700) : Infinite, priority 10), adoptProhibition(color(yellow, a10), reduce(a10, 100)), adoptProhibition(color(yellow, a10), reduce(a10, 100))]
[After]:{	@ctenv(setColor(a20, white, no, 100),L,0);
	color(yellow, a30, no, 100);
	color(yellow, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
},
{	adoptProhibition(color(yellow, a10), reduce(a10, 100))
},
{	adoptProhibition(color(yellow, a10), reduce(a10, 100))
}


agent writes: Color [id=null, color=white, agent=a20, type=no, sanction=100, time=2015-06-03 17:50:50.743, clock=2]
org notification: Color [id=null, color=white, agent=a20, type=no, sanction=100, time=2015-06-03 17:50:50.743, clock=2]
org notification: Color [id=null, color=white, agent=a20, type=no, sanction=100, time=2015-06-03 17:50:50.743, clock=2]
[Planbase]:{	adoptz(useColor(yellow, 100) : 3 Jun 2015 17:07:30 GMT, priority 10)
},
{	adoptz(useColor(yellow, 100) : 3 Jun 2015 17:07:30 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(yellow, 100) : 3 Jun 2015 17:07:30 GMT, priority 10), adoptz(useColor(yellow, 100) : 3 Jun 2015 17:07:30 GMT, priority 10)]
[After]:{	adoptz(useColor(yellow, 100) : 3 Jun 2015 17:07:30 GMT, priority 10)
},
{	adoptz(useColor(yellow, 100) : 3 Jun 2015 17:07:30 GMT, priority 10)
}


obligation to be adopted: useColor(yellow, 100) : 3 Jun 2015 17:07:30 GMT, priority 10
obligation to be adopted: useColor(yellow, 100) : 3 Jun 2015 17:07:30 GMT, priority 10
[Planbase]:{	@ctenv(setColor(a30, yellow, no, 100),L,0);
	color(yellow, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
},
{	AdoptP(useColor(yellow, 100));
	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
},
{	AdoptP(useColor(yellow, 100));
	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[new scheduled]:[@ctenv(setColor(a30, yellow, no, 100),L,0); color(yellow, a40, no, 100); dropgoal(surround(4, 4, 700) : Infinite, priority 10), AdoptP(useColor(yellow, 100)); aprohibition(useColor(yellow, 100) -> reduce(100), priority 0), AdoptP(useColor(yellow, 100)); aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)]
[After]:{	@ctenv(setColor(a30, yellow, no, 100),L,0);
	color(yellow, a40, no, 100);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
},
{	AdoptP(useColor(yellow, 100));
	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
},
{	AdoptP(useColor(yellow, 100));
	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


agent writes: Color [id=null, color=yellow, agent=a30, type=no, sanction=100, time=2015-06-03 17:50:50.861, clock=2]
org notification: Color [id=null, color=yellow, agent=a30, type=no, sanction=100, time=2015-06-03 17:50:50.861, clock=2]
org notification: Color [id=null, color=yellow, agent=a30, type=no, sanction=100, time=2015-06-03 17:50:50.861, clock=2]
object notification: Prohibition [subject=a30, prohibition=[color(yellow, a30)], sanction=[reduce(a30, 100)], clock=6, time=2015-06-03 17:50:50.864]
object notification: Prohibition [subject=a30, prohibition=[color(yellow, a30)], sanction=[reduce(a30, 100)], clock=2, time=2015-06-03 17:50:50.865]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setColor(a40, yellow, no, 100),L,0);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
},
{	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
},
{	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[new scheduled]:[@ctenv(setColor(a40, yellow, no, 100),L,0); dropgoal(surround(4, 4, 700) : Infinite, priority 10), aprohibition(useColor(yellow, 100) -> reduce(100), priority 0), aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)]
[After]:{	@ctenv(setColor(a40, yellow, no, 100),L,0);
	dropgoal(surround(4, 4, 700) : Infinite, priority 10)
},
{	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
},
{	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


Event processed adoptProhibition(color(yellow, a30), reduce(a30, 100))
Event processed adoptProhibition(color(yellow, a30), reduce(a30, 100))
agent writes: Color [id=null, color=yellow, agent=a40, type=no, sanction=100, time=2015-06-03 17:50:51.008, clock=2]
org notification: Color [id=null, color=yellow, agent=a40, type=no, sanction=100, time=2015-06-03 17:50:51.008, clock=2]
org notification: Color [id=null, color=yellow, agent=a40, type=no, sanction=100, time=2015-06-03 17:50:51.008, clock=2]
object notification: Prohibition [subject=a40, prohibition=[color(yellow, a40)], sanction=[reduce(a40, 100)], clock=2, time=2015-06-03 17:50:51.011]
object notification: Prohibition [subject=a40, prohibition=[color(yellow, a40)], sanction=[reduce(a40, 100)], clock=6, time=2015-06-03 17:50:51.011]
[Planbase]:{	adoptProhibition(color(yellow, a30), reduce(a30, 100))
},
{	adoptProhibition(color(yellow, a30), reduce(a30, 100))
}


[new scheduled]:[adoptProhibition(color(yellow, a30), reduce(a30, 100)), adoptProhibition(color(yellow, a30), reduce(a30, 100))]
[After]:{	adoptProhibition(color(yellow, a30), reduce(a30, 100))
},
{	adoptProhibition(color(yellow, a30), reduce(a30, 100))
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed adoptProhibition(color(yellow, a40), reduce(a40, 100))
Event processed adoptProhibition(color(yellow, a40), reduce(a40, 100))
[Planbase]:{	AdoptP(useColor(yellow, 100));
	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
},
{	AdoptP(useColor(yellow, 100));
	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[new scheduled]:[AdoptP(useColor(yellow, 100)); aprohibition(useColor(yellow, 100) -> reduce(100), priority 0), AdoptP(useColor(yellow, 100)); aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)]
[After]:{	AdoptP(useColor(yellow, 100));
	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
},
{	AdoptP(useColor(yellow, 100));
	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[Planbase]:{	adoptProhibition(color(yellow, a40), reduce(a40, 100))
},
{	adoptProhibition(color(yellow, a40), reduce(a40, 100))
}


[new scheduled]:[adoptProhibition(color(yellow, a40), reduce(a40, 100)), adoptProhibition(color(yellow, a40), reduce(a40, 100))]
[After]:{	adoptProhibition(color(yellow, a40), reduce(a40, 100))
},
{	adoptProhibition(color(yellow, a40), reduce(a40, 100))
}


[Planbase]:{	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
},
{	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[new scheduled]:[aprohibition(useColor(yellow, 100) -> reduce(100), priority 0), aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)]
[After]:{	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
},
{	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[Planbase]:{	AdoptP(useColor(yellow, 100));
	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
},
{	AdoptP(useColor(yellow, 100));
	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[new scheduled]:[AdoptP(useColor(yellow, 100)); aprohibition(useColor(yellow, 100) -> reduce(100), priority 0), AdoptP(useColor(yellow, 100)); aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)]
[After]:{	AdoptP(useColor(yellow, 100));
	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
},
{	AdoptP(useColor(yellow, 100));
	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
},
{	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[new scheduled]:[aprohibition(useColor(yellow, 100) -> reduce(100), priority 0), aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)]
[After]:{	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
},
{	aprohibition(useColor(yellow, 100) -> reduce(100), priority 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=3, time=2015-06-03 17:50:51.869]
object notification: Time [clock=3, time=2015-06-03 17:50:51.869]
object notification: Time [clock=3, time=2015-06-03 17:50:51.869]
org notification: Time [clock=3, time=2015-06-03 17:50:51.869]
object notification: Time [clock=3, time=2015-06-03 17:50:51.869]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(3)
Event processed UpdateClock(3)
Event processed UpdateClock(3)
[Planbase]:{	UpdateClock(3)
}


[new scheduled]:[UpdateClock(3)]
[After]:{	UpdateClock(3)
}


[Planbase]:{	UpdateClock(3)
}


[new scheduled]:[UpdateClock(3)]
[After]:{	UpdateClock(3)
}


[Planbase]:{	UpdateClock(3)
}


[new scheduled]:[UpdateClock(3)]
[After]:{	UpdateClock(3)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=7, time=2015-06-03 17:50:56.121]
object notification: Time [clock=7, time=2015-06-03 17:50:56.121]
org notification: Time [clock=7, time=2015-06-03 17:50:56.121]
object notification: Time [clock=7, time=2015-06-03 17:50:56.121]
org notification: Time [clock=7, time=2015-06-03 17:50:56.121]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(7)
Event processed UpdateClock(7)
Event processed UpdateClock(7)
[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=4, time=2015-06-03 17:51:01.872]
org notification: Time [clock=4, time=2015-06-03 17:51:01.872]
object notification: Time [clock=4, time=2015-06-03 17:51:01.872]
object notification: Time [clock=4, time=2015-06-03 17:51:01.872]
org notification: Time [clock=4, time=2015-06-03 17:51:01.872]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(4)
Event processed UpdateClock(4)
Event processed UpdateClock(4)
[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=8, time=2015-06-03 17:51:06.124]
org notification: Time [clock=8, time=2015-06-03 17:51:06.124]
object notification: Time [clock=8, time=2015-06-03 17:51:06.124]
object notification: Time [clock=8, time=2015-06-03 17:51:06.124]
object notification: Time [clock=8, time=2015-06-03 17:51:06.124]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(8)
Event processed UpdateClock(8)
Event processed UpdateClock(8)
[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=5, time=2015-06-03 17:51:11.875]
org notification: Time [clock=5, time=2015-06-03 17:51:11.875]
object notification: Time [clock=5, time=2015-06-03 17:51:11.875]
object notification: Time [clock=5, time=2015-06-03 17:51:11.875]
object notification: Time [clock=5, time=2015-06-03 17:51:11.875]
[Planbase]:


[new scheduled]:[]
[Planbase]:


[new scheduled]:[]
[After]:


[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(5)
Event processed UpdateClock(5)
Event processed UpdateClock(5)
[Planbase]:{	UpdateClock(5)
}


[new scheduled]:[UpdateClock(5)]
[After]:{	UpdateClock(5)
}


[Planbase]:{	UpdateClock(5)
}


[new scheduled]:[UpdateClock(5)]
[After]:{	UpdateClock(5)
}


[Planbase]:{	UpdateClock(5)
}


[new scheduled]:[UpdateClock(5)]
[After]:{	UpdateClock(5)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=9, time=2015-06-03 17:51:16.128]
org notification: Time [clock=9, time=2015-06-03 17:51:16.128]
org notification: Time [clock=9, time=2015-06-03 17:51:16.128]
object notification: Time [clock=9, time=2015-06-03 17:51:16.128]
object notification: Time [clock=9, time=2015-06-03 17:51:16.128]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(9)
Event processed UpdateClock(9)
Event processed UpdateClock(9)
[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=6, time=2015-06-03 17:51:21.878]
object notification: Time [clock=6, time=2015-06-03 17:51:21.878]
object notification: Time [clock=6, time=2015-06-03 17:51:21.878]
object notification: Time [clock=6, time=2015-06-03 17:51:21.878]
org notification: Time [clock=6, time=2015-06-03 17:51:21.878]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(6)
Event processed UpdateClock(6)
Event processed UpdateClock(6)
[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=10, time=2015-06-03 17:51:26.131]
object notification: Time [clock=10, time=2015-06-03 17:51:26.131]
object notification: Time [clock=10, time=2015-06-03 17:51:26.131]
org notification: Time [clock=10, time=2015-06-03 17:51:26.131]
object notification: Time [clock=10, time=2015-06-03 17:51:26.131]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(10)
Event processed UpdateClock(10)
[Planbase]:{	UpdateClock(10)
}


[new scheduled]:[UpdateClock(10)]
[After]:{	UpdateClock(10)
}


Event processed UpdateClock(10)
[Planbase]:{	UpdateClock(10)
}


[new scheduled]:[UpdateClock(10)]
[After]:{	UpdateClock(10)
}


[Planbase]:{	UpdateClock(10)
}


[new scheduled]:[UpdateClock(10)]
[After]:{	UpdateClock(10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=7, time=2015-06-03 17:51:31.881]
org notification: Time [clock=7, time=2015-06-03 17:51:31.881]
object notification: Time [clock=7, time=2015-06-03 17:51:31.881]
object notification: Time [clock=7, time=2015-06-03 17:51:31.881]
object notification: Time [clock=7, time=2015-06-03 17:51:31.881]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(7)
Event processed UpdateClock(7)
Event processed UpdateClock(7)
[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=11, time=2015-06-03 17:51:36.134]
object notification: Time [clock=11, time=2015-06-03 17:51:36.134]
object notification: Time [clock=11, time=2015-06-03 17:51:36.134]
object notification: Time [clock=11, time=2015-06-03 17:51:36.134]
org notification: Time [clock=11, time=2015-06-03 17:51:36.134]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(11)
Event processed UpdateClock(11)
Event processed UpdateClock(11)
[Planbase]:{	UpdateClock(11)
}


[new scheduled]:[UpdateClock(11)]
[After]:{	UpdateClock(11)
}


[Planbase]:{	UpdateClock(11)
}


[new scheduled]:[UpdateClock(11)]
[After]:{	UpdateClock(11)
}


[Planbase]:{	UpdateClock(11)
}


[new scheduled]:[UpdateClock(11)]
[After]:{	UpdateClock(11)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=8, time=2015-06-03 17:51:41.884]
org notification: Time [clock=8, time=2015-06-03 17:51:41.884]
object notification: Time [clock=8, time=2015-06-03 17:51:41.884]
object notification: Time [clock=8, time=2015-06-03 17:51:41.884]
object notification: Time [clock=8, time=2015-06-03 17:51:41.884]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(8)
Event processed UpdateClock(8)
Event processed UpdateClock(8)
[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=12, time=2015-06-03 17:51:46.136]
object notification: Time [clock=12, time=2015-06-03 17:51:46.136]
object notification: Time [clock=12, time=2015-06-03 17:51:46.136]
org notification: Time [clock=12, time=2015-06-03 17:51:46.136]
object notification: Time [clock=12, time=2015-06-03 17:51:46.136]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(12)
Event processed UpdateClock(12)
[Planbase]:{	UpdateClock(12)
}


[new scheduled]:[UpdateClock(12)]
[After]:{	UpdateClock(12)
}


Event processed UpdateClock(12)
[Planbase]:{	UpdateClock(12)
}


[new scheduled]:[UpdateClock(12)]
[After]:{	UpdateClock(12)
}


[Planbase]:{	UpdateClock(12)
}


[new scheduled]:[UpdateClock(12)]
[After]:{	UpdateClock(12)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@6d6a08fb
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@50a744be
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@70179640
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(tile(yellow, 3, 6)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 6))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 3, 6))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 3, 6)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 3, 6))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[4,5]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 3, 6))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[4,5]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 3, 6)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	Updated
},
{	B([A,B]=[4,5]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 3, 6))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[5,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[5,4]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	Updated
},
{	B([A,B]=[5,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[4,3]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	Updated
},
{	B([A,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 5, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 3, 6))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 5, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 3, 6)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 5, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 3, 6))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 4, 5, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 3, 6))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(yellow, no, 4, 5, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 3, 6)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 4, 5, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 3, 6))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 5, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(yellow, no, 5, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 5, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 4, 3, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(yellow, no, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 4, 3, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 3, 6))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 3, 6)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 3, 6))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


a40[CTAH] going goal: 4,5 color: neco
[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


a30[CTAH] going goal: 5,4 color: neco
a10[CTAH] going goal: 4,3 color: neco
org notification: Time [clock=9, time=2015-06-03 17:51:51.891]
org notification: Time [clock=9, time=2015-06-03 17:51:51.891]
object notification: Time [clock=9, time=2015-06-03 17:51:51.891]
object notification: Time [clock=9, time=2015-06-03 17:51:51.891]
object notification: Time [clock=9, time=2015-06-03 17:51:51.891]
object notification: Time [clock=13, time=2015-06-03 17:51:56.14]
org notification: Time [clock=13, time=2015-06-03 17:51:56.14]
org notification: Time [clock=13, time=2015-06-03 17:51:56.14]
object notification: Time [clock=13, time=2015-06-03 17:51:56.14]
object notification: Time [clock=13, time=2015-06-03 17:51:56.14]
a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [2][1] [2][2] [2][3] [3][3] [4][3] [5][3] [5][4]

a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:2,C:2)
a30[CTAH] moveStepToGoalTest sent proposal for: [2,2,3,1895]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
Received a proposal creating event
Event processed UpdateClock(9)
Event processed UpdateClock(13)
org notification: Proposal [id=1895, agent=a30, agent2=a40, clock=13, time=2015-06-03 17:51:57.318]
org notification: Proposal [id=1895, agent=a30, agent2=a40, clock=13, time=2015-06-03 17:51:57.318]
object notification: Obligation [subject=a40, obligation=[respondToRequest(1895)], sanction=[reduce(a40, 300)], deadline=18, time=2015-06-03 17:51:57.351, clock=13]
object notification: Obligation [subject=a40, obligation=[respondToRequest(1895)], sanction=[reduce(a40, 300)], deadline=18, time=2015-06-03 17:51:57.353, clock=9]
[Planbase]:{	B(clock(Clock));
	if	B(not 1895=no)
	then	{	NextStep(2, 2, 1895);
			SentProposal(1895, 3, open, Clock)
		}
	else	{	NextStep(2, 2)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(9)
},
{	UpdateClock(13)
}


[new scheduled]:[B(clock(Clock)); if B(not 1895=no) then {NextStep(2, 2, 1895); SentProposal(1895, 3, open, Clock)} else NextStep(2, 2), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(9), UpdateClock(13)]
[After]:{	B(clock(Clock));
	if	B(not 1895=no)
	then	{	NextStep(2, 2, 1895);
			SentProposal(1895, 3, open, Clock)
		}
	else	{	NextStep(2, 2)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(9)
},
{	UpdateClock(13)
}


[Planbase]:{	if	B(not 1895=no)
	then	{	NextStep(2, 2, 1895);
			SentProposal(1895, 3, open, 12)
		}
	else	{	NextStep(2, 2)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(not 1895=no) then {NextStep(2, 2, 1895); SentProposal(1895, 3, open, 12)} else NextStep(2, 2), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(not 1895=no)
	then	{	NextStep(2, 2, 1895);
			SentProposal(1895, 3, open, 12)
		}
	else	{	NextStep(2, 2)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a10[CTAH] paths: 1000
Need to wait 3 more seconds
[Planbase]:{	NextStep(2, 2, 1895);
	SentProposal(1895, 3, open, 12)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[NextStep(2, 2, 1895); SentProposal(1895, 3, open, 12), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	NextStep(2, 2, 1895);
	SentProposal(1895, 3, open, 12)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	SentProposal(1895, 3, open, 12)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[SentProposal(1895, 3, open, 12), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	SentProposal(1895, 3, open, 12)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a40[CTAH] paths: 1000
Need to wait 3 more seconds
[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a10[CTAH] path: 0
a10[CTAH] path: Path: [5][2] [4][2] [4][3]

a10[CTAH] moveStepToGoalTest returns I have chip: [4,2,no,no]
Event processed UpdateClock(9)
Event processed UpdateClock(13)
[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(4, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(4, 2)
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdateClock(9)
},
{	UpdateClock(13)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(4, 2, no); SentProposal(no, no, open, Clock)} else NextStep(4, 2), if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), UpdateClock(9), UpdateClock(13)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(4, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(4, 2)
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdateClock(9)
},
{	UpdateClock(13)
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(4, 2, no);
			SentProposal(no, no, open, 12)
		}
	else	{	NextStep(4, 2)
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(4, 2, no); SentProposal(no, no, open, 12)} else NextStep(4, 2), if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(not no=no)
	then	{	NextStep(4, 2, no);
			SentProposal(no, no, open, 12)
		}
	else	{	NextStep(4, 2)
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	NextStep(4, 2)
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[NextStep(4, 2), if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	NextStep(4, 2)
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 4, 2),L2,0);
	if	B(L2=[actionresult([4,2])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 2, Clock)
		};
	NoNextStep(4, 2)
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 4, 2),L2,0); if B(L2=[actionresult([4,2])]) then {B(clock(Clock)); UpdatePosition(4, 2, Clock)}; NoNextStep(4, 2), if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	@ctenv(moveStepToGoal(neco, 4, 2),L2,0);
	if	B(L2=[actionresult([4,2])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 2, Clock)
		};
	NoNextStep(4, 2)
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


Need to wait 4 more seconds
object notification: Position [subject=a10, id=null, cell=Cell [x=4, y=2], time=2015-06-03 17:52:00.849, clock=13]
org notification: Position [subject=a10, id=null, cell=Cell [x=4, y=2], time=2015-06-03 17:52:00.849, clock=13]
org notification: Position [subject=a10, id=null, cell=Cell [x=4, y=2], time=2015-06-03 17:52:00.849, clock=13]
object notification: Obligation [subject=a10, obligation=[makeMove(4, 2, a10)], sanction=[reduce(a10, 300)], deadline=28, time=2015-06-03 17:52:00.869, clock=13]
object notification: Obligation [subject=a10, obligation=[makeMove(4, 2, a10)], sanction=[reduce(a10, 300)], deadline=28, time=2015-06-03 17:52:00.869, clock=9]
[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


org notification: Time [clock=10, time=2015-06-03 17:52:01.893]
object notification: Time [clock=10, time=2015-06-03 17:52:01.893]
org notification: Time [clock=10, time=2015-06-03 17:52:01.893]
object notification: Time [clock=10, time=2015-06-03 17:52:01.893]
object notification: Time [clock=10, time=2015-06-03 17:52:01.893]
Event processed UpdateClock(10)
[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(10)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(10)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(10)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a40[CTAH] path: 0
a40[CTAH] path: Path: [6][3] [5][3] [5][4] [4][4] [4][5]

a40[CTAH] moveStepToGoalTest returns I have chip: [5,3,no,no]
[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


Event processed UpdateClock(9)
Event processed UpdateClock(13)
Event processed @ctenv(functionToList(proposal(proposal, 2, 1895, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(1895), 18, reduce(a40, 300))
Event processed adoptObligation(respondToRequest(1895), 18, reduce(a40, 300))
Event processed UpdateClock(10)
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(5, 3, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(5, 3)
		}
},
{	if	B(tile(yellow, 3, 6))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdateClock(9)
},
{	UpdateClock(13)
},
{	@ctenv(functionToList(proposal(proposal, 2, 1895, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(1895), 18, reduce(a40, 300))
},
{	adoptObligation(respondToRequest(1895), 18, reduce(a40, 300))
},
{	UpdateClock(10)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(5, 3, no); SentProposal(no, no, open, Clock)} else NextStep(5, 3), if B(tile(yellow, 3, 6)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), UpdateClock(9), UpdateClock(13), @ctenv(functionToList(proposal(proposal, 2, 1895, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(1895), 18, reduce(a40, 300)), adoptObligation(respondToRequest(1895), 18, reduce(a40, 300)), UpdateClock(10)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(5, 3, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(5, 3)
		}
},
{	if	B(tile(yellow, 3, 6))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdateClock(9)
},
{	UpdateClock(13)
},
{	@ctenv(functionToList(proposal(proposal, 2, 1895, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(1895), 18, reduce(a40, 300))
},
{	adoptObligation(respondToRequest(1895), 18, reduce(a40, 300))
},
{	UpdateClock(10)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@213b0dea
[CTAH] The created APLList : [proposal,2,1895,open]
[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(5, 3, no);
			SentProposal(no, no, open, 12)
		}
	else	{	NextStep(5, 3)
		}
},
{	if	B(tile(yellow, 3, 6))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,1895,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,1895,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(1895, 300) : 3 Jun 2015 17:08:42 GMT, priority 10)
},
{	adoptz(respondToRequest(1895, 300) : 3 Jun 2015 17:08:42 GMT, priority 10)
}


[new scheduled]:[if B(not no=no) then {NextStep(5, 3, no); SentProposal(no, no, open, 12)} else NextStep(5, 3), if B(tile(yellow, 3, 6)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if B([actionresult([proposal,2,1895,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,2,1895,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(1895, 300) : 3 Jun 2015 17:08:42 GMT, priority 10), adoptz(respondToRequest(1895, 300) : 3 Jun 2015 17:08:42 GMT, priority 10)]
[After]:{	if	B(not no=no)
	then	{	NextStep(5, 3, no);
			SentProposal(no, no, open, 12)
		}
	else	{	NextStep(5, 3)
		}
},
{	if	B(tile(yellow, 3, 6))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,1895,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,1895,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(1895, 300) : 3 Jun 2015 17:08:42 GMT, priority 10)
},
{	adoptz(respondToRequest(1895, 300) : 3 Jun 2015 17:08:42 GMT, priority 10)
}


obligation to be adopted: respondToRequest(1895, 300) : 3 Jun 2015 17:08:42 GMT, priority 10
obligation to be adopted: respondToRequest(1895, 300) : 3 Jun 2015 17:08:42 GMT, priority 10
[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	NextStep(5, 3)
},
{	if	B(tile(yellow, 3, 6))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,1895,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[NextStep(5, 3), if B(tile(yellow, 3, 6)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if B([actionresult([proposal,2,1895,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	NextStep(5, 3)
},
{	if	B(tile(yellow, 3, 6))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	if	B([actionresult([proposal,2,1895,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 3, 6))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 1895, open)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 3, 6)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if B(proposal=proposal) then ReceivedProposal(2, 1895, open)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 3, 6))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 1895, open)
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 5, 3),L2,0);
	if	B(L2=[actionresult([5,3])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 3, Clock)
		};
	NoNextStep(5, 3)
},
{	if	B(tile(yellow, 3, 6))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedProposal(2, 1895, open)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 5, 3),L2,0); if B(L2=[actionresult([5,3])]) then {B(clock(Clock)); UpdatePosition(5, 3, Clock)}; NoNextStep(5, 3), if B(tile(yellow, 3, 6)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), ReceivedProposal(2, 1895, open)]
[After]:{	@ctenv(moveStepToGoal(neco, 5, 3),L2,0);
	if	B(L2=[actionresult([5,3])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 3, Clock)
		};
	NoNextStep(5, 3)
},
{	if	B(tile(yellow, 3, 6))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	ReceivedProposal(2, 1895, open)
}


Need to wait 4 more seconds
org notification: Position [subject=a40, id=null, cell=Cell [x=5, y=3], time=2015-06-03 17:52:02.722, clock=10]
org notification: Position [subject=a40, id=null, cell=Cell [x=5, y=3], time=2015-06-03 17:52:02.722, clock=10]
object notification: Obligation [subject=a40, obligation=[makeMove(5, 3, a40)], sanction=[reduce(a40, 300)], deadline=25, time=2015-06-03 17:52:02.725, clock=13]
object notification: Obligation [subject=a40, obligation=[makeMove(5, 3, a40)], sanction=[reduce(a40, 300)], deadline=25, time=2015-06-03 17:52:02.73, clock=10]
object notification: Position [subject=a40, id=null, cell=Cell [x=5, y=3], time=2015-06-03 17:52:02.722, clock=10]
object notification: Points [subject=a40, time=2015-06-03 17:52:02.734, clock=10, value=900, id=null]
object notification: Points [subject=a40, time=2015-06-03 17:52:02.741, clock=10, value=900, id=null]
[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a10[CTAH] moveStepToGoal returns: [4,2]
[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


Event processed UpdatePosition(4, 2, 13)
Event processed adoptObligation(makeMove(4, 2, a10), 28, reduce(a10, 300))
Event processed adoptObligation(makeMove(4, 2, a10), 28, reduce(a10, 300))
Event processed UpdateClock(10)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(4, 2, Clock);
	NoNextStep(4, 2)
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdatePosition(4, 2, 13)
},
{	adoptObligation(makeMove(4, 2, a10), 28, reduce(a10, 300))
},
{	adoptObligation(makeMove(4, 2, a10), 28, reduce(a10, 300))
},
{	UpdateClock(10)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(4, 2, Clock); NoNextStep(4, 2), if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), UpdatePosition(4, 2, 13), adoptObligation(makeMove(4, 2, a10), 28, reduce(a10, 300)), adoptObligation(makeMove(4, 2, a10), 28, reduce(a10, 300)), UpdateClock(10)]
[After]:{	B(clock(Clock));
	UpdatePosition(4, 2, Clock);
	NoNextStep(4, 2)
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdatePosition(4, 2, 13)
},
{	adoptObligation(makeMove(4, 2, a10), 28, reduce(a10, 300))
},
{	adoptObligation(makeMove(4, 2, a10), 28, reduce(a10, 300))
},
{	UpdateClock(10)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	UpdatePosition(4, 2, 13);
	NoNextStep(4, 2)
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	adoptz(makeMove(4, 2, 300) : 3 Jun 2015 17:08:44 GMT, priority 10)
},
{	adoptz(makeMove(4, 2, 300) : 3 Jun 2015 17:08:44 GMT, priority 10)
}


[new scheduled]:[UpdatePosition(4, 2, 13); NoNextStep(4, 2), if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), adoptz(makeMove(4, 2, 300) : 3 Jun 2015 17:08:44 GMT, priority 10), adoptz(makeMove(4, 2, 300) : 3 Jun 2015 17:08:44 GMT, priority 10)]
[After]:{	UpdatePosition(4, 2, 13);
	NoNextStep(4, 2)
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	adoptz(makeMove(4, 2, 300) : 3 Jun 2015 17:08:44 GMT, priority 10)
},
{	adoptz(makeMove(4, 2, 300) : 3 Jun 2015 17:08:44 GMT, priority 10)
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


obligation to be adopted: makeMove(4, 2, 300) : 3 Jun 2015 17:08:44 GMT, priority 10
obligation to be adopted: makeMove(4, 2, 300) : 3 Jun 2015 17:08:44 GMT, priority 10
[Planbase]:{	NoNextStep(4, 2)
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[NoNextStep(4, 2), if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	NoNextStep(4, 2)
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B([A,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[B([A,B]=[4,3]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	B([A,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 4, 3, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(yellow, no, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 4, 3, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a10[CTAH] going goal: 4,3 color: neco
[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


object notification: Time [clock=14, time=2015-06-03 17:52:06.142]
org notification: Time [clock=14, time=2015-06-03 17:52:06.142]
object notification: Time [clock=14, time=2015-06-03 17:52:06.142]
org notification: Time [clock=14, time=2015-06-03 17:52:06.142]
object notification: Time [clock=14, time=2015-06-03 17:52:06.142]
Event processed UpdateClock(14)
[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(14)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(14)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(14)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(10>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(10>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(10>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(10>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a40[CTAH] moveStepToGoal returns: [5,3]
Event processed adoptObligation(makeMove(5, 3, a40), 25, reduce(a40, 300))
Event processed adoptObligation(makeMove(5, 3, a40), 25, reduce(a40, 300))
Event processed UpdatePosition(5, 3, 10)
Event processed UpdatePoints(900)
Event processed UpdatePoints(900)
Event processed UpdateClock(14)
[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	UpdatePosition(5, 3, Clock);
	NoNextStep(5, 3)
},
{	if	B(tile(yellow, 3, 6))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	adoptObligation(makeMove(5, 3, a40), 25, reduce(a40, 300))
},
{	adoptObligation(makeMove(5, 3, a40), 25, reduce(a40, 300))
},
{	UpdatePosition(5, 3, 10)
},
{	UpdatePoints(900)
},
{	UpdatePoints(900)
},
{	UpdateClock(14)
}


[new scheduled]:[if G(acceptRequest(1895, 300)) then skip else if B(not scoreAfterExchange(1895, Score)) then getScoreAfterExchange(1895); B(scoreAfterExchange(1895, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1895, Answer), if G(acceptRequests(1895, V2)) then skip else if G(respondToRequest(1895, V2)) then skip else if G(acceptRequest(1895, V2)) then skip else if B(not receivedP(2, 1895, closed(A))) then adoptz(respondToRequest(1895, 50) : Infinite, priority 10), B(clock(Clock)); UpdatePosition(5, 3, Clock); NoNextStep(5, 3), if B(tile(yellow, 3, 6)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), adoptObligation(makeMove(5, 3, a40), 25, reduce(a40, 300)), adoptObligation(makeMove(5, 3, a40), 25, reduce(a40, 300)), UpdatePosition(5, 3, 10), UpdatePoints(900), UpdatePoints(900), UpdateClock(14)]
[After]:{	if	G(acceptRequests(1895, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(1895, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(1895, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 1895, closed(A)))
							then	{	adoptz(respondToRequest(1895, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	B(clock(Clock));
	UpdatePosition(5, 3, Clock);
	NoNextStep(5, 3)
},
{	if	G(acceptRequest(1895, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(1895, Score))
			then	{	getScoreAfterExchange(1895)
				}
		};
	B(scoreAfterExchange(1895, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1895, Answer)
},
{	if	B(tile(yellow, 3, 6))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	adoptObligation(makeMove(5, 3, a40), 25, reduce(a40, 300))
},
{	adoptObligation(makeMove(5, 3, a40), 25, reduce(a40, 300))
},
{	UpdatePosition(5, 3, 10)
},
{	UpdatePoints(900)
},
{	UpdatePoints(900)
},
{	UpdateClock(14)
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(1895, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1895, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 1895, closed(A)))
					then	{	adoptz(respondToRequest(1895, 50) : Infinite, priority 10)
						}
				}
		}
},
{	UpdatePosition(5, 3, 10);
	NoNextStep(5, 3)
},
{	if	B(not scoreAfterExchange(1895, Score))
	then	{	getScoreAfterExchange(1895)
		};
	B(scoreAfterExchange(1895, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1895, Answer)
},
{	if	B(tile(yellow, 3, 6))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	adoptz(makeMove(5, 3, 300) : 3 Jun 2015 17:08:46 GMT, priority 10)
},
{	adoptz(makeMove(5, 3, 300) : 3 Jun 2015 17:08:46 GMT, priority 10)
}


[new scheduled]:[if G(respondToRequest(1895, V2)) then skip else if G(acceptRequest(1895, V2)) then skip else if B(not receivedP(2, 1895, closed(A))) then adoptz(respondToRequest(1895, 50) : Infinite, priority 10), UpdatePosition(5, 3, 10); NoNextStep(5, 3), if B(not scoreAfterExchange(1895, Score)) then getScoreAfterExchange(1895); B(scoreAfterExchange(1895, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1895, Answer), if B(tile(yellow, 3, 6)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), adoptz(makeMove(5, 3, 300) : 3 Jun 2015 17:08:46 GMT, priority 10), adoptz(makeMove(5, 3, 300) : 3 Jun 2015 17:08:46 GMT, priority 10)]
[After]:{	if	G(respondToRequest(1895, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1895, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 1895, closed(A)))
					then	{	adoptz(respondToRequest(1895, 50) : Infinite, priority 10)
						}
				}
		}
},
{	UpdatePosition(5, 3, 10);
	NoNextStep(5, 3)
},
{	if	B(not scoreAfterExchange(1895, Score))
	then	{	getScoreAfterExchange(1895)
		};
	B(scoreAfterExchange(1895, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1895, Answer)
},
{	if	B(tile(yellow, 3, 6))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	adoptz(makeMove(5, 3, 300) : 3 Jun 2015 17:08:46 GMT, priority 10)
},
{	adoptz(makeMove(5, 3, 300) : 3 Jun 2015 17:08:46 GMT, priority 10)
}


obligation to be adopted: makeMove(5, 3, 300) : 3 Jun 2015 17:08:46 GMT, priority 10
obligation to be adopted: makeMove(5, 3, 300) : 3 Jun 2015 17:08:46 GMT, priority 10
[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	skip
},
{	NoNextStep(5, 3)
},
{	getScoreAfterExchange(1895);
	B(scoreAfterExchange(1895, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1895, Answer)
}


[new scheduled]:[skip, NoNextStep(5, 3), getScoreAfterExchange(1895); B(scoreAfterExchange(1895, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1895, Answer)]
[After]:{	skip
},
{	NoNextStep(5, 3)
},
{	getScoreAfterExchange(1895);
	B(scoreAfterExchange(1895, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1895, Answer)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	GetScoreAfterExchange(1895, yes);
	B(scoreAfterExchange(1895, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1895, Answer)
}


[new scheduled]:[if G(acceptRequests(1895, V2)) then skip else if G(respondToRequest(1895, V2)) then skip else if G(acceptRequest(1895, V2)) then skip else if B(not receivedP(2, 1895, closed(A))) then adoptz(respondToRequest(1895, 50) : Infinite, priority 10), findNextStep(neco, 700), GetScoreAfterExchange(1895, yes); B(scoreAfterExchange(1895, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1895, Answer)]
[After]:{	if	G(acceptRequests(1895, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(1895, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(1895, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 1895, closed(A)))
							then	{	adoptz(respondToRequest(1895, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	findNextStep(neco, 700)
},
{	GetScoreAfterExchange(1895, yes);
	B(scoreAfterExchange(1895, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1895, Answer)
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(1895, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1895, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 1895, closed(A)))
					then	{	adoptz(respondToRequest(1895, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(scoreAfterExchange(1895, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1895, Answer)
}


[new scheduled]:[if G(respondToRequest(1895, V2)) then skip else if G(acceptRequest(1895, V2)) then skip else if B(not receivedP(2, 1895, closed(A))) then adoptz(respondToRequest(1895, 50) : Infinite, priority 10), if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, B(scoreAfterExchange(1895, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1895, Answer)]
[After]:{	if	G(respondToRequest(1895, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1895, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 1895, closed(A)))
					then	{	adoptz(respondToRequest(1895, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(scoreAfterExchange(1895, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1895, Answer)
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	skip
},
{	B([A,B]=[4,5]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1895, Answer)
}


[new scheduled]:[skip, B([A,B]=[4,5]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1895, Answer)]
[After]:{	skip
},
{	B([A,B]=[4,5]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1895, Answer)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 5, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(1895, accept)
}


[new scheduled]:[if G(acceptRequests(1895, V2)) then skip else if G(respondToRequest(1895, V2)) then skip else if G(acceptRequest(1895, V2)) then skip else if B(not receivedP(2, 1895, closed(A))) then adoptz(respondToRequest(1895, 50) : Infinite, priority 10), if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 5, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(1895, accept)]
[After]:{	if	G(acceptRequests(1895, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(1895, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(1895, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 1895, closed(A)))
							then	{	adoptz(respondToRequest(1895, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 5, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(1895, accept)
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(1895, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1895, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 1895, closed(A)))
					then	{	adoptz(respondToRequest(1895, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 4, 5, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(accept=accept);
	sendResponse(1895, accept)
}


[new scheduled]:[if G(respondToRequest(1895, V2)) then skip else if G(acceptRequest(1895, V2)) then skip else if B(not receivedP(2, 1895, closed(A))) then adoptz(respondToRequest(1895, 50) : Infinite, priority 10), if B(100>700) then @ctenv(moveStepToGoalTest(yellow, no, 4, 5, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, B(accept=accept); sendResponse(1895, accept)]
[After]:{	if	G(respondToRequest(1895, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1895, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 1895, closed(A)))
					then	{	adoptz(respondToRequest(1895, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 4, 5, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(accept=accept);
	sendResponse(1895, accept)
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	skip
},
{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	sendResponse(1895, accept)
}


[new scheduled]:[skip, @ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, sendResponse(1895, accept)]
[After]:{	skip
},
{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	sendResponse(1895, accept)
}


a40[CTAH] going goal: 4,5 color: neco
[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


org notification: Time [clock=11, time=2015-06-03 17:52:11.898]
org notification: Time [clock=11, time=2015-06-03 17:52:11.898]
object notification: Time [clock=11, time=2015-06-03 17:52:11.898]
object notification: Time [clock=11, time=2015-06-03 17:52:11.898]
object notification: Time [clock=11, time=2015-06-03 17:52:11.898]
Event processed UpdateClock(11)
[Planbase]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(11)
}


[new scheduled]:[if B(14>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(11)]
[After]:{	if	B(14>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(11)
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(11>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


org notification: Time [clock=15, time=2015-06-03 17:52:16.154]
object notification: Time [clock=15, time=2015-06-03 17:52:16.154]
object notification: Time [clock=15, time=2015-06-03 17:52:16.154]
object notification: Time [clock=15, time=2015-06-03 17:52:16.154]
org notification: Time [clock=15, time=2015-06-03 17:52:16.154]
[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


Event processed UpdateClock(15)
[Planbase]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(15)
}


[new scheduled]:[B(timetowait(Wait)); if B(11>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(15)]
[After]:{	B(timetowait(Wait));
	if	B(11>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(15)
}


[Planbase]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(11>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(11>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a10[CTAH] paths: 1000
Need to wait 3 more seconds
[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a10[CTAH] path: 0
a10[CTAH] path: Path: [4][2] [4][3]

a10[CTAH] moveStepToGoalTest returns I have chip: [4,3,no,no]
[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


Event processed UpdateClock(14)
Event processed UpdateClock(11)
Event processed UpdateClock(15)
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(4, 3, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(4, 3)
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdateClock(14)
},
{	UpdateClock(11)
},
{	UpdateClock(15)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(4, 3, no); SentProposal(no, no, open, Clock)} else NextStep(4, 3), if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), UpdateClock(14), UpdateClock(11), UpdateClock(15)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(4, 3, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(4, 3)
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdateClock(14)
},
{	UpdateClock(11)
},
{	UpdateClock(15)
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(4, 3, no);
			SentProposal(no, no, open, 10)
		}
	else	{	NextStep(4, 3)
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(4, 3, no); SentProposal(no, no, open, 10)} else NextStep(4, 3), if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(not no=no)
	then	{	NextStep(4, 3, no);
			SentProposal(no, no, open, 10)
		}
	else	{	NextStep(4, 3)
		}
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	NextStep(4, 3)
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[NextStep(4, 3), if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	NextStep(4, 3)
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 4, 3),L2,0);
	if	B(L2=[actionresult([4,3])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 3, Clock)
		};
	NoNextStep(4, 3)
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 4, 3),L2,0); if B(L2=[actionresult([4,3])]) then {B(clock(Clock)); UpdatePosition(4, 3, Clock)}; NoNextStep(4, 3), if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	@ctenv(moveStepToGoal(neco, 4, 3),L2,0);
	if	B(L2=[actionresult([4,3])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 3, Clock)
		};
	NoNextStep(4, 3)
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


Need to wait 3 more seconds
org notification: Position [subject=a10, id=null, cell=Cell [x=4, y=3], time=2015-06-03 17:52:20.544, clock=15]
org notification: Position [subject=a10, id=null, cell=Cell [x=4, y=3], time=2015-06-03 17:52:20.544, clock=15]
object notification: Position [subject=a10, id=null, cell=Cell [x=4, y=3], time=2015-06-03 17:52:20.544, clock=15]
[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a40[CTAH] paths: 1000
Need to wait 4 more seconds
[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


object notification: Time [clock=12, time=2015-06-03 17:52:21.901]
org notification: Time [clock=12, time=2015-06-03 17:52:21.901]
org notification: Time [clock=12, time=2015-06-03 17:52:21.901]
object notification: Time [clock=12, time=2015-06-03 17:52:21.901]
object notification: Time [clock=12, time=2015-06-03 17:52:21.901]
[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


Event processed UpdateClock(12)
[Planbase]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(12)
}


[new scheduled]:[B(timetowait(Wait)); if B(15>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(12)]
[After]:{	B(timetowait(Wait));
	if	B(15>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(12)
}


[Planbase]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a10[CTAH] moveStepToGoal returns: [4,3]
Event processed UpdatePosition(4, 3, 15)
Event processed UpdateClock(12)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(4, 3, Clock);
	NoNextStep(4, 3)
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdatePosition(4, 3, 15)
},
{	UpdateClock(12)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(4, 3, Clock); NoNextStep(4, 3), if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), UpdatePosition(4, 3, 15), UpdateClock(12)]
[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[After]:{	B(clock(Clock));
	UpdatePosition(4, 3, Clock);
	NoNextStep(4, 3)
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdatePosition(4, 3, 15)
},
{	UpdateClock(12)
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	UpdatePosition(4, 3, 15);
	NoNextStep(4, 3)
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[UpdatePosition(4, 3, 15); NoNextStep(4, 3), if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	UpdatePosition(4, 3, 15);
	NoNextStep(4, 3)
},
{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[new scheduled]:[if B(tile(yellow, 2, 5)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 2, 5))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a40[CTAH] path: 0
a40[CTAH] path: Path: [5][3] [5][4] [4][4] [4][5]

a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:5,C:4)
a40[CTAH] moveStepToGoalTest sent proposal for: [5,4,0,4555]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=4555, agent=a40, agent2=a10, clock=12, time=2015-06-03 17:52:25.744]
org notification: Proposal [id=4555, agent=a40, agent2=a10, clock=12, time=2015-06-03 17:52:25.744]
object notification: Obligation [subject=a10, obligation=[respondToRequest(4555)], sanction=[reduce(a10, 300)], deadline=17, time=2015-06-03 17:52:25.75, clock=15]
object notification: Obligation [subject=a10, obligation=[respondToRequest(4555)], sanction=[reduce(a10, 300)], deadline=17, time=2015-06-03 17:52:25.751, clock=12]
Event processed @ctenv(functionToList(proposal(proposal, 3, 4555, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(4555), 17, reduce(a10, 300))
Event processed adoptObligation(respondToRequest(4555), 17, reduce(a10, 300))
Event processed UpdateClock(11)
Event processed UpdateClock(15)
Event processed UpdateClock(12)
[Planbase]:{	@ctenv(functionToList(proposal(proposal, 3, 4555, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(4555), 17, reduce(a10, 300))
},
{	adoptObligation(respondToRequest(4555), 17, reduce(a10, 300))
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), @ctenv(functionToList(proposal(proposal, 3, 4555, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(4555), 17, reduce(a10, 300)), adoptObligation(respondToRequest(4555), 17, reduce(a10, 300))]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 3, 4555, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(4555), 17, reduce(a10, 300))
},
{	adoptObligation(respondToRequest(4555), 17, reduce(a10, 300))
}


[Planbase]:{	B(clock(Clock));
	if	B(not 4555=no)
	then	{	NextStep(5, 4, 4555);
			SentProposal(4555, 0, open, Clock)
		}
	else	{	NextStep(5, 4)
		}
},
{	@ctenv(sendResponse(1895, accept),L1,0);
	SentResponse(accept, 1895)
},
{	UpdateClock(11)
},
{	UpdateClock(15)
},
{	UpdateClock(12)
}


[new scheduled]:[if G(acceptRequests(1895, V2)) then skip else if G(respondToRequest(1895, V2)) then skip else if G(acceptRequest(1895, V2)) then skip else if B(not receivedP(2, 1895, closed(A))) then adoptz(respondToRequest(1895, 50) : Infinite, priority 10), B(clock(Clock)); if B(not 4555=no) then {NextStep(5, 4, 4555); SentProposal(4555, 0, open, Clock)} else NextStep(5, 4), @ctenv(sendResponse(1895, accept),L1,0); SentResponse(accept, 1895), UpdateClock(11), UpdateClock(15), UpdateClock(12)]
[After]:{	if	G(acceptRequests(1895, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(1895, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(1895, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 1895, closed(A)))
							then	{	adoptz(respondToRequest(1895, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	B(clock(Clock));
	if	B(not 4555=no)
	then	{	NextStep(5, 4, 4555);
			SentProposal(4555, 0, open, Clock)
		}
	else	{	NextStep(5, 4)
		}
},
{	@ctenv(sendResponse(1895, accept),L1,0);
	SentResponse(accept, 1895)
},
{	UpdateClock(11)
},
{	UpdateClock(15)
},
{	UpdateClock(12)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@42f7d68f
[CTAH] The created APLList : [proposal,3,4555,open]
a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 2.

Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=1895, response=accepted, clock=12, time=2015-06-03 17:52:25.869]
org notification: Response [id=1895, response=accepted, clock=12, time=2015-06-03 17:52:25.869]
Event processed @ctenv(functionToList(message(response, 1895, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	if	B([actionresult([proposal,3,4555,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,4555,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(4555, 300) : 3 Jun 2015 17:09:05 GMT, priority 10)
},
{	adoptz(respondToRequest(4555, 300) : 3 Jun 2015 17:09:05 GMT, priority 10)
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if B([actionresult([proposal,3,4555,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,3,4555,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(4555, 300) : 3 Jun 2015 17:09:05 GMT, priority 10), adoptz(respondToRequest(4555, 300) : 3 Jun 2015 17:09:05 GMT, priority 10)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	if	B([actionresult([proposal,3,4555,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,4555,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(4555, 300) : 3 Jun 2015 17:09:05 GMT, priority 10)
},
{	adoptz(respondToRequest(4555, 300) : 3 Jun 2015 17:09:05 GMT, priority 10)
}


[Planbase]:{	if	G(respondToRequest(1895, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1895, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 1895, closed(A)))
					then	{	adoptz(respondToRequest(1895, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not 4555=no)
	then	{	NextStep(5, 4, 4555);
			SentProposal(4555, 0, open, 14)
		}
	else	{	NextStep(5, 4)
		}
}


[new scheduled]:[if G(respondToRequest(1895, V2)) then skip else if G(acceptRequest(1895, V2)) then skip else if B(not receivedP(2, 1895, closed(A))) then adoptz(respondToRequest(1895, 50) : Infinite, priority 10), if B(not 4555=no) then {NextStep(5, 4, 4555); SentProposal(4555, 0, open, 14)} else NextStep(5, 4)]
[After]:{	if	G(respondToRequest(1895, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1895, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 1895, closed(A)))
					then	{	adoptz(respondToRequest(1895, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not 4555=no)
	then	{	NextStep(5, 4, 4555);
			SentProposal(4555, 0, open, 14)
		}
	else	{	NextStep(5, 4)
		}
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 1895, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), @ctenv(functionToList(message(response, 1895, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 1895, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


obligation to be adopted: respondToRequest(4555, 300) : 3 Jun 2015 17:09:05 GMT, priority 10
obligation to be adopted: respondToRequest(4555, 300) : 3 Jun 2015 17:09:05 GMT, priority 10
[CTAH] Array of Terms: [Lapapl.data.Term;@3514bf4b
[CTAH] The created APLList : [response,1895,accept]
[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
},
{	if	B([actionresult([proposal,3,4555,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10), if B([actionresult([proposal,3,4555,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
},
{	if	B([actionresult([proposal,3,4555,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	G(acceptRequest(1895, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 1895, closed(A)))
			then	{	adoptz(respondToRequest(1895, 50) : Infinite, priority 10)
				}
		}
},
{	NextStep(5, 4, 4555);
	SentProposal(4555, 0, open, 14)
}


[new scheduled]:[if G(acceptRequest(1895, V2)) then skip else if B(not receivedP(2, 1895, closed(A))) then adoptz(respondToRequest(1895, 50) : Infinite, priority 10), NextStep(5, 4, 4555); SentProposal(4555, 0, open, 14)]
[After]:{	if	G(acceptRequest(1895, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 1895, closed(A)))
			then	{	adoptz(respondToRequest(1895, 50) : Infinite, priority 10)
				}
		}
},
{	NextStep(5, 4, 4555);
	SentProposal(4555, 0, open, 14)
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 1895)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B(response=response) then ReceivedResponse(accept, 1895)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 1895)
		}
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 4555, open)
		}
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if B(proposal=proposal) then ReceivedProposal(3, 4555, open)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 4555, open)
		}
}


[Planbase]:{	if	B(not receivedP(2, 1895, closed(A)))
	then	{	adoptz(respondToRequest(1895, 50) : Infinite, priority 10)
		}
},
{	SentProposal(4555, 0, open, 14)
}


[new scheduled]:[if B(not receivedP(2, 1895, closed(A))) then adoptz(respondToRequest(1895, 50) : Infinite, priority 10), SentProposal(4555, 0, open, 14)]
[After]:{	if	B(not receivedP(2, 1895, closed(A)))
	then	{	adoptz(respondToRequest(1895, 50) : Infinite, priority 10)
		}
},
{	SentProposal(4555, 0, open, 14)
}


org notification: Time [clock=16, time=2015-06-03 17:52:26.158]
object notification: Time [clock=16, time=2015-06-03 17:52:26.158]
object notification: Time [clock=16, time=2015-06-03 17:52:26.158]
org notification: Time [clock=16, time=2015-06-03 17:52:26.158]
object notification: Time [clock=16, time=2015-06-03 17:52:26.158]
[Planbase]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 1895)
}


[new scheduled]:[B(timetowait(Wait)); if B(12>12+Wait) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 1895)]
[After]:{	B(timetowait(Wait));
	if	B(12>12+Wait)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 1895)
}


Event processed UpdateClock(16)
Event processed UpdateClock(16)
[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	ReceivedProposal(3, 4555, open)
},
{	UpdateClock(16)
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), ReceivedProposal(3, 4555, open), UpdateClock(16)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	ReceivedProposal(3, 4555, open)
},
{	UpdateClock(16)
}


Event processed UpdateClock(16)
[Planbase]:{	UpdateClock(16)
}


[new scheduled]:[findNextStep(neco, 700), UpdateClock(16)]
[After]:{	findNextStep(neco, 700)
},
{	UpdateClock(16)
}


[Planbase]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(16)
}


[new scheduled]:[if B(12>12+7) then {NoNextStep(2, 2, 1895); ReceivedResponse(noresponse, 1895)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(16)]
[After]:{	if	B(12>12+7)
	then	{	NoNextStep(2, 2, 1895);
			ReceivedResponse(noresponse, 1895)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(16)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if G(acceptRequest(4555, 300)) then skip else if B(not scoreAfterExchange(4555, Score)) then getScoreAfterExchange(4555); B(scoreAfterExchange(4555, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4555, Answer), if G(acceptRequests(4555, V2)) then skip else if G(respondToRequest(4555, V2)) then skip else if G(acceptRequest(4555, V2)) then skip else if B(not receivedP(3, 4555, closed(A))) then adoptz(respondToRequest(4555, 50) : Infinite, priority 10), if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	G(acceptRequests(4555, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(4555, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(4555, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 4555, closed(A)))
							then	{	adoptz(respondToRequest(4555, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	G(acceptRequest(4555, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(4555, Score))
			then	{	getScoreAfterExchange(4555)
				}
		};
	B(scoreAfterExchange(4555, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4555, Answer)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(12>14+Wait)
	then	{	NoNextStep(5, 4, 4555);
			ReceivedResponse(noresponse, 4555)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(12>14+Wait) then {NoNextStep(5, 4, 4555); ReceivedResponse(noresponse, 4555)}]
[After]:{	B(timetowait(Wait));
	if	B(12>14+Wait)
	then	{	NoNextStep(5, 4, 4555);
			ReceivedResponse(noresponse, 4555)
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(4555, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4555, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 4555, closed(A)))
					then	{	adoptz(respondToRequest(4555, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(4555, Score))
	then	{	getScoreAfterExchange(4555)
		};
	B(scoreAfterExchange(4555, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4555, Answer)
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if G(respondToRequest(4555, V2)) then skip else if G(acceptRequest(4555, V2)) then skip else if B(not receivedP(3, 4555, closed(A))) then adoptz(respondToRequest(4555, 50) : Infinite, priority 10), if B(not scoreAfterExchange(4555, Score)) then getScoreAfterExchange(4555); B(scoreAfterExchange(4555, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4555, Answer)]
[After]:{	if	G(respondToRequest(4555, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4555, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 4555, closed(A)))
					then	{	adoptz(respondToRequest(4555, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(4555, Score))
	then	{	getScoreAfterExchange(4555)
		};
	B(scoreAfterExchange(4555, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4555, Answer)
},
{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(12>14+7)
	then	{	NoNextStep(5, 4, 4555);
			ReceivedResponse(noresponse, 4555)
		}
}


[new scheduled]:[if B(12>14+7) then {NoNextStep(5, 4, 4555); ReceivedResponse(noresponse, 4555)}]
[After]:{	if	B(12>14+7)
	then	{	NoNextStep(5, 4, 4555);
			ReceivedResponse(noresponse, 4555)
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 2, 2),L2,0);
	if	B(L2=[actionresult([2,2])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 2, Clock)
		};
	NoNextStep(2, 2, 1895)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 2, 2),L2,0); if B(L2=[actionresult([2,2])]) then {B(clock(Clock)); UpdatePosition(2, 2, Clock)}; NoNextStep(2, 2, 1895), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	@ctenv(moveStepToGoal(neco, 2, 2),L2,0);
	if	B(L2=[actionresult([2,2])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 2, Clock)
		};
	NoNextStep(2, 2, 1895)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a30[CTAH] moveStepToGoal returns: no
org notification: Position [subject=a30, id=null, cell=Cell [x=2, y=2], time=2015-06-03 17:52:26.778, clock=16]
org notification: Position [subject=a30, id=null, cell=Cell [x=2, y=2], time=2015-06-03 17:52:26.778, clock=16]
object notification: Position [subject=a30, id=null, cell=Cell [x=2, y=2], time=2015-06-03 17:52:26.778, clock=16]
object notification: Obligation [subject=a30, obligation=[makeMove(2, 2, a30)], sanction=[reduce(a30, 300)], deadline=31, time=2015-06-03 17:52:26.788, clock=16]
object notification: Obligation [subject=a30, obligation=[makeMove(2, 2, a30)], sanction=[reduce(a30, 300)], deadline=31, time=2015-06-03 17:52:26.788, clock=12]
object notification: Points [subject=a30, time=2015-06-03 17:52:26.795, clock=16, value=900, id=null]
object notification: Points [subject=a30, time=2015-06-03 17:52:26.821, clock=16, value=900, id=null]
Event processed UpdatePosition(2, 2, 16)
Event processed adoptObligation(makeMove(2, 2, a30), 31, reduce(a30, 300))
Event processed adoptObligation(makeMove(2, 2, a30), 31, reduce(a30, 300))
Event processed UpdatePoints(900)
Event processed UpdatePoints(900)
[Planbase]:{	skip
},
{	getScoreAfterExchange(4555);
	B(scoreAfterExchange(4555, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4555, Answer)
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[skip, getScoreAfterExchange(4555); B(scoreAfterExchange(4555, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4555, Answer), if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	skip
},
{	getScoreAfterExchange(4555);
	B(scoreAfterExchange(4555, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4555, Answer)
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	NoNextStep(2, 2, 1895)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdatePosition(2, 2, 16)
},
{	adoptObligation(makeMove(2, 2, a30), 31, reduce(a30, 300))
},
{	adoptObligation(makeMove(2, 2, a30), 31, reduce(a30, 300))
},
{	UpdatePoints(900)
},
{	UpdatePoints(900)
}


[new scheduled]:[NoNextStep(2, 2, 1895), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdatePosition(2, 2, 16), adoptObligation(makeMove(2, 2, a30), 31, reduce(a30, 300)), adoptObligation(makeMove(2, 2, a30), 31, reduce(a30, 300)), UpdatePoints(900), UpdatePoints(900)]
[After]:{	NoNextStep(2, 2, 1895)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdatePosition(2, 2, 16)
},
{	adoptObligation(makeMove(2, 2, a30), 31, reduce(a30, 300))
},
{	adoptObligation(makeMove(2, 2, a30), 31, reduce(a30, 300))
},
{	UpdatePoints(900)
},
{	UpdatePoints(900)
}


[Planbase]:{	GetScoreAfterExchange(4555, yes);
	B(scoreAfterExchange(4555, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4555, Answer)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if G(acceptRequests(4555, V2)) then skip else if G(respondToRequest(4555, V2)) then skip else if G(acceptRequest(4555, V2)) then skip else if B(not receivedP(3, 4555, closed(A))) then adoptz(respondToRequest(4555, 50) : Infinite, priority 10), GetScoreAfterExchange(4555, yes); B(scoreAfterExchange(4555, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4555, Answer), if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	G(acceptRequests(4555, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(4555, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(4555, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 4555, closed(A)))
							then	{	adoptz(respondToRequest(4555, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	GetScoreAfterExchange(4555, yes);
	B(scoreAfterExchange(4555, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4555, Answer)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>14+Wait)
	then	{	NoNextStep(5, 4, 4555);
			ReceivedResponse(noresponse, 4555)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>14+Wait) then {NoNextStep(5, 4, 4555); ReceivedResponse(noresponse, 4555)}]
[After]:{	B(timetowait(Wait));
	if	B(16>14+Wait)
	then	{	NoNextStep(5, 4, 4555);
			ReceivedResponse(noresponse, 4555)
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	adoptz(makeMove(2, 2, 300) : 3 Jun 2015 17:09:06 GMT, priority 10)
},
{	adoptz(makeMove(2, 2, 300) : 3 Jun 2015 17:09:06 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), adoptz(makeMove(2, 2, 300) : 3 Jun 2015 17:09:06 GMT, priority 10), adoptz(makeMove(2, 2, 300) : 3 Jun 2015 17:09:06 GMT, priority 10)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	adoptz(makeMove(2, 2, 300) : 3 Jun 2015 17:09:06 GMT, priority 10)
},
{	adoptz(makeMove(2, 2, 300) : 3 Jun 2015 17:09:06 GMT, priority 10)
}


obligation to be adopted: makeMove(2, 2, 300) : 3 Jun 2015 17:09:06 GMT, priority 10
obligation to be adopted: makeMove(2, 2, 300) : 3 Jun 2015 17:09:06 GMT, priority 10
[Planbase]:{	if	G(respondToRequest(4555, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4555, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 4555, closed(A)))
					then	{	adoptz(respondToRequest(4555, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(4555, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4555, Answer)
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if G(respondToRequest(4555, V2)) then skip else if G(acceptRequest(4555, V2)) then skip else if B(not receivedP(3, 4555, closed(A))) then adoptz(respondToRequest(4555, 50) : Infinite, priority 10), B(scoreAfterExchange(4555, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4555, Answer)]
[After]:{	if	G(respondToRequest(4555, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4555, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 4555, closed(A)))
					then	{	adoptz(respondToRequest(4555, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(4555, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4555, Answer)
},
{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(16>14+7)
	then	{	NoNextStep(5, 4, 4555);
			ReceivedResponse(noresponse, 4555)
		}
}


[new scheduled]:[if B(16>14+7) then {NoNextStep(5, 4, 4555); ReceivedResponse(noresponse, 4555)}]
[After]:{	if	B(16>14+7)
	then	{	NoNextStep(5, 4, 4555);
			ReceivedResponse(noresponse, 4555)
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4555, Answer)
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[skip, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4555, Answer), if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4555, Answer)
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B([A,B]=[5,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B([A,B]=[5,4]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B([A,B]=[5,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(4555, accept)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if G(acceptRequests(4555, V2)) then skip else if G(respondToRequest(4555, V2)) then skip else if G(acceptRequest(4555, V2)) then skip else if B(not receivedP(3, 4555, closed(A))) then adoptz(respondToRequest(4555, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(4555, accept), if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	G(acceptRequests(4555, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(4555, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(4555, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 4555, closed(A)))
							then	{	adoptz(respondToRequest(4555, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(4555, accept)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>14+Wait)
	then	{	NoNextStep(5, 4, 4555);
			ReceivedResponse(noresponse, 4555)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>14+Wait) then {NoNextStep(5, 4, 4555); ReceivedResponse(noresponse, 4555)}]
[After]:{	B(timetowait(Wait));
	if	B(16>14+Wait)
	then	{	NoNextStep(5, 4, 4555);
			ReceivedResponse(noresponse, 4555)
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(4555, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4555, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 4555, closed(A)))
					then	{	adoptz(respondToRequest(4555, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(4555, accept)
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if G(respondToRequest(4555, V2)) then skip else if G(acceptRequest(4555, V2)) then skip else if B(not receivedP(3, 4555, closed(A))) then adoptz(respondToRequest(4555, 50) : Infinite, priority 10), B(accept=accept); sendResponse(4555, accept)]
[After]:{	if	G(respondToRequest(4555, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4555, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 4555, closed(A)))
					then	{	adoptz(respondToRequest(4555, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(4555, accept)
},
{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(16>14+7)
	then	{	NoNextStep(5, 4, 4555);
			ReceivedResponse(noresponse, 4555)
		}
}


[new scheduled]:[if B(16>14+7) then {NoNextStep(5, 4, 4555); ReceivedResponse(noresponse, 4555)}]
[After]:{	if	B(16>14+7)
	then	{	NoNextStep(5, 4, 4555);
			ReceivedResponse(noresponse, 4555)
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 5, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(yellow, no, 5, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 5, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	skip
},
{	sendResponse(4555, accept)
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[skip, sendResponse(4555, accept), if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	skip
},
{	sendResponse(4555, accept)
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a30[CTAH] going goal: 5,4 color: neco
[Planbase]:{	@ctenv(sendResponse(4555, accept),L1,0);
	SentResponse(accept, 4555)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if G(acceptRequests(4555, V2)) then skip else if G(respondToRequest(4555, V2)) then skip else if G(acceptRequest(4555, V2)) then skip else if B(not receivedP(3, 4555, closed(A))) then adoptz(respondToRequest(4555, 50) : Infinite, priority 10), @ctenv(sendResponse(4555, accept),L1,0); SentResponse(accept, 4555), if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	G(acceptRequests(4555, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(4555, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(4555, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 4555, closed(A)))
							then	{	adoptz(respondToRequest(4555, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	@ctenv(sendResponse(4555, accept),L1,0);
	SentResponse(accept, 4555)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>14+Wait)
	then	{	NoNextStep(5, 4, 4555);
			ReceivedResponse(noresponse, 4555)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>14+Wait) then {NoNextStep(5, 4, 4555); ReceivedResponse(noresponse, 4555)}]
[After]:{	B(timetowait(Wait));
	if	B(16>14+Wait)
	then	{	NoNextStep(5, 4, 4555);
			ReceivedResponse(noresponse, 4555)
		}
}


a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 3.

Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
org notification: Response [id=4555, response=accepted, clock=16, time=2015-06-03 17:52:27.636]
org notification: Response [id=4555, response=accepted, clock=16, time=2015-06-03 17:52:27.636]
Event processed @ctenv(functionToList(message(response, 4555, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	G(respondToRequest(4555, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4555, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 4555, closed(A)))
					then	{	adoptz(respondToRequest(4555, 50) : Infinite, priority 10)
						}
				}
		}
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if G(respondToRequest(4555, V2)) then skip else if G(acceptRequest(4555, V2)) then skip else if B(not receivedP(3, 4555, closed(A))) then adoptz(respondToRequest(4555, 50) : Infinite, priority 10)]
[After]:{	if	G(respondToRequest(4555, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4555, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 4555, closed(A)))
					then	{	adoptz(respondToRequest(4555, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(16>14+7)
	then	{	NoNextStep(5, 4, 4555);
			ReceivedResponse(noresponse, 4555)
		}
},
{	@ctenv(functionToList(message(response, 4555, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(16>14+7) then {NoNextStep(5, 4, 4555); ReceivedResponse(noresponse, 4555)}, @ctenv(functionToList(message(response, 4555, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(16>14+7)
	then	{	NoNextStep(5, 4, 4555);
			ReceivedResponse(noresponse, 4555)
		}
},
{	@ctenv(functionToList(message(response, 4555, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@32cc67fa
[CTAH] The created APLList : [response,4555,accept]
[Planbase]:{	if	G(acceptRequest(4555, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(3, 4555, closed(A)))
			then	{	adoptz(respondToRequest(4555, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if G(acceptRequest(4555, V2)) then skip else if B(not receivedP(3, 4555, closed(A))) then adoptz(respondToRequest(4555, 50) : Infinite, priority 10), if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	G(acceptRequest(4555, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(3, 4555, closed(A)))
			then	{	adoptz(respondToRequest(4555, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(response=response)
	then	{	ReceivedResponse(accept, 4555)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(response=response) then ReceivedResponse(accept, 4555)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 4555)
		}
}


[Planbase]:{	if	B(not receivedP(3, 4555, closed(A)))
	then	{	adoptz(respondToRequest(4555, 50) : Infinite, priority 10)
		}
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(not receivedP(3, 4555, closed(A))) then adoptz(respondToRequest(4555, 50) : Infinite, priority 10), if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(not receivedP(3, 4555, closed(A)))
	then	{	adoptz(respondToRequest(4555, 50) : Infinite, priority 10)
		}
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>14+Wait)
	then	{	NoNextStep(5, 4, 4555);
			ReceivedResponse(noresponse, 4555)
		}
},
{	ReceivedResponse(accept, 4555)
}


[new scheduled]:[B(timetowait(Wait)); if B(16>14+Wait) then {NoNextStep(5, 4, 4555); ReceivedResponse(noresponse, 4555)}, ReceivedResponse(accept, 4555)]
[After]:{	B(timetowait(Wait));
	if	B(16>14+Wait)
	then	{	NoNextStep(5, 4, 4555);
			ReceivedResponse(noresponse, 4555)
		}
},
{	ReceivedResponse(accept, 4555)
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(16>14+7)
	then	{	NoNextStep(5, 4, 4555);
			ReceivedResponse(noresponse, 4555)
		}
}


[new scheduled]:[if B(16>14+7) then {NoNextStep(5, 4, 4555); ReceivedResponse(noresponse, 4555)}]
[After]:{	if	B(16>14+7)
	then	{	NoNextStep(5, 4, 4555);
			ReceivedResponse(noresponse, 4555)
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 5, 4),L2,0);
	if	B(L2=[actionresult([5,4])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 4, Clock)
		};
	NoNextStep(5, 4, 4555)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 5, 4),L2,0); if B(L2=[actionresult([5,4])]) then {B(clock(Clock)); UpdatePosition(5, 4, Clock)}; NoNextStep(5, 4, 4555)]
[After]:{	@ctenv(moveStepToGoal(neco, 5, 4),L2,0);
	if	B(L2=[actionresult([5,4])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 4, Clock)
		};
	NoNextStep(5, 4, 4555)
}


Need to wait 3 more seconds
org notification: Position [subject=a40, id=null, cell=Cell [x=5, y=4], time=2015-06-03 17:52:28.473, clock=16]
org notification: Position [subject=a40, id=null, cell=Cell [x=5, y=4], time=2015-06-03 17:52:28.473, clock=16]
object notification: Position [subject=a40, id=null, cell=Cell [x=5, y=4], time=2015-06-03 17:52:28.473, clock=16]
[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [2][2] [3][2] [4][2] [4][3] [4][4] [5][4]

a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:3,C:2)
a30[CTAH] moveStepToGoalTest sent proposal for: [3,2,1,5902]
org notification: Proposal [id=5902, agent=a30, agent2=a20, clock=16, time=2015-06-03 17:52:30.936]
org notification: Proposal [id=5902, agent=a30, agent2=a20, clock=16, time=2015-06-03 17:52:30.936]
[Planbase]:{	B(clock(Clock));
	if	B(not 5902=no)
	then	{	NextStep(3, 2, 5902);
			SentProposal(5902, 1, open, Clock)
		}
	else	{	NextStep(3, 2)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(clock(Clock)); if B(not 5902=no) then {NextStep(3, 2, 5902); SentProposal(5902, 1, open, Clock)} else NextStep(3, 2), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(clock(Clock));
	if	B(not 5902=no)
	then	{	NextStep(3, 2, 5902);
			SentProposal(5902, 1, open, Clock)
		}
	else	{	NextStep(3, 2)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(not 5902=no)
	then	{	NextStep(3, 2, 5902);
			SentProposal(5902, 1, open, 16)
		}
	else	{	NextStep(3, 2)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(not 5902=no) then {NextStep(3, 2, 5902); SentProposal(5902, 1, open, 16)} else NextStep(3, 2), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(not 5902=no)
	then	{	NextStep(3, 2, 5902);
			SentProposal(5902, 1, open, 16)
		}
	else	{	NextStep(3, 2)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	NextStep(3, 2, 5902);
	SentProposal(5902, 1, open, 16)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[NextStep(3, 2, 5902); SentProposal(5902, 1, open, 16), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	NextStep(3, 2, 5902);
	SentProposal(5902, 1, open, 16)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	SentProposal(5902, 1, open, 16)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[SentProposal(5902, 1, open, 16), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	SentProposal(5902, 1, open, 16)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(16>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(16>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(16>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


a40[CTAH] moveStepToGoal returns: [5,4]
[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


Event processed UpdatePosition(5, 4, 16)
[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(clock(Clock));
	UpdatePosition(5, 4, Clock);
	NoNextStep(5, 4, 4555)
},
{	UpdatePosition(5, 4, 16)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(5, 4, Clock); NoNextStep(5, 4, 4555), UpdatePosition(5, 4, 16)]
[After]:{	B(clock(Clock));
	UpdatePosition(5, 4, Clock);
	NoNextStep(5, 4, 4555)
},
{	UpdatePosition(5, 4, 16)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	UpdatePosition(5, 4, 16);
	NoNextStep(5, 4, 4555)
}


[new scheduled]:[UpdatePosition(5, 4, 16); NoNextStep(5, 4, 4555)]
[After]:{	UpdatePosition(5, 4, 16);
	NoNextStep(5, 4, 4555)
}


[Planbase]:{	if	B(16>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(16>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(16>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	NoNextStep(5, 4, 4555)
}


[new scheduled]:[NoNextStep(5, 4, 4555)]
[After]:{	NoNextStep(5, 4, 4555)
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


org notification: Time [clock=13, time=2015-06-03 17:52:31.903]
org notification: Time [clock=13, time=2015-06-03 17:52:31.903]
object notification: Time [clock=13, time=2015-06-03 17:52:31.903]
object notification: Time [clock=13, time=2015-06-03 17:52:31.903]
object notification: Time [clock=13, time=2015-06-03 17:52:31.903]
Event processed UpdateClock(13)
[Planbase]:{	B(timetowait(Wait));
	if	B(16>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	UpdateClock(13)
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, UpdateClock(13)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	UpdateClock(13)
}


Event processed UpdateClock(13)
Event processed UpdateClock(13)
[Planbase]:{	if	B(16>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(13)
}


[new scheduled]:[if B(16>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(13)]
[After]:{	if	B(16>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(13)
}


[Planbase]:{	UpdateClock(13)
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), UpdateClock(13)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdateClock(13)
}


[Planbase]:{	B([A,B]=[4,5]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[4,5]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[4,5]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 5, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 5, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 5, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 4, 5, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(yellow, no, 4, 5, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 4, 5, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(13>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a40[CTAH] going goal: 4,5 color: neco
[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(13>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(13>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(13>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(13>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(13>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(13>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(13>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(13>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(13>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(13>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(13>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(13>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(13>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


org notification: Time [clock=17, time=2015-06-03 17:52:36.161]
org notification: Time [clock=17, time=2015-06-03 17:52:36.161]
object notification: Time [clock=17, time=2015-06-03 17:52:36.161]
object notification: Time [clock=17, time=2015-06-03 17:52:36.161]
object notification: Time [clock=17, time=2015-06-03 17:52:36.161]
Event processed UpdateClock(17)
Event processed UpdateClock(17)
[Planbase]:{	if	B(13>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(17)
}


[new scheduled]:[if B(13>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(17)]
[After]:{	if	B(13>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(17)
}


[Planbase]:{	UpdateClock(17)
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), UpdateClock(17)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdateClock(17)
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


a40[CTAH] paths: 1000
Need to wait 4 more seconds
[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(17>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(17>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


object notification: Time [clock=14, time=2015-06-03 17:52:41.905]
org notification: Time [clock=14, time=2015-06-03 17:52:41.905]
org notification: Time [clock=14, time=2015-06-03 17:52:41.905]
object notification: Time [clock=14, time=2015-06-03 17:52:41.905]
object notification: Time [clock=14, time=2015-06-03 17:52:41.905]
Event processed UpdateClock(14)
Event processed UpdateClock(14)
[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
},
{	UpdateClock(14)
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10), UpdateClock(14)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
},
{	UpdateClock(14)
}


[Planbase]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(14)
}


[new scheduled]:[if B(17>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(14)]
[After]:{	if	B(17>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(14)
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a40[CTAH] path: 0
a40[CTAH] path: Path: [5][4] [4][4] [4][5]

a40[CTAH] moveStepToGoalTest returns I have chip: [4,4,no,no]
[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


Event processed UpdateClock(17)
Event processed UpdateClock(14)
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(4, 4, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(4, 4)
		}
},
{	UpdateClock(17)
},
{	UpdateClock(14)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(4, 4, no); SentProposal(no, no, open, Clock)} else NextStep(4, 4), UpdateClock(17), UpdateClock(14)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(4, 4, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(4, 4)
		}
},
{	UpdateClock(17)
},
{	UpdateClock(14)
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(4, 4, no);
			SentProposal(no, no, open, 13)
		}
	else	{	NextStep(4, 4)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(4, 4, no); SentProposal(no, no, open, 13)} else NextStep(4, 4)]
[After]:{	if	B(not no=no)
	then	{	NextStep(4, 4, no);
			SentProposal(no, no, open, 13)
		}
	else	{	NextStep(4, 4)
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	NextStep(4, 4)
}


[new scheduled]:[NextStep(4, 4)]
[After]:{	NextStep(4, 4)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 4, 4),L2,0);
	if	B(L2=[actionresult([4,4])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 4, Clock)
		};
	NoNextStep(4, 4)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 4, 4),L2,0); if B(L2=[actionresult([4,4])]) then {B(clock(Clock)); UpdatePosition(4, 4, Clock)}; NoNextStep(4, 4)]
[After]:{	@ctenv(moveStepToGoal(neco, 4, 4),L2,0);
	if	B(L2=[actionresult([4,4])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 4, Clock)
		};
	NoNextStep(4, 4)
}


Need to wait 4 more seconds
object notification: Position [subject=a40, id=null, cell=Cell [x=4, y=4], time=2015-06-03 17:52:45.433, clock=14]
org notification: Position [subject=a40, id=null, cell=Cell [x=4, y=4], time=2015-06-03 17:52:45.433, clock=14]
org notification: Position [subject=a40, id=null, cell=Cell [x=4, y=4], time=2015-06-03 17:52:45.433, clock=14]
[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(14>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(14>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


org notification: Time [clock=18, time=2015-06-03 17:52:46.164]
object notification: Time [clock=18, time=2015-06-03 17:52:46.164]
org notification: Time [clock=18, time=2015-06-03 17:52:46.164]
object notification: Time [clock=18, time=2015-06-03 17:52:46.164]
object notification: Time [clock=18, time=2015-06-03 17:52:46.164]
Event processed UpdateClock(18)
Event processed UpdateClock(18)
[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
},
{	UpdateClock(18)
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10), UpdateClock(18)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
},
{	UpdateClock(18)
}


[Planbase]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(18)
}


[new scheduled]:[if B(14>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(18)]
[After]:{	if	B(14>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(18)
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a40[CTAH] moveStepToGoal returns: [4,4]
[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


Event processed UpdatePosition(4, 4, 14)
Event processed UpdateClock(18)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(4, 4, Clock);
	NoNextStep(4, 4)
},
{	UpdatePosition(4, 4, 14)
},
{	UpdateClock(18)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(4, 4, Clock); NoNextStep(4, 4), UpdatePosition(4, 4, 14), UpdateClock(18)]
[After]:{	B(clock(Clock));
	UpdatePosition(4, 4, Clock);
	NoNextStep(4, 4)
},
{	UpdatePosition(4, 4, 14)
},
{	UpdateClock(18)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	UpdatePosition(4, 4, 14);
	NoNextStep(4, 4)
}


[new scheduled]:[UpdatePosition(4, 4, 14); NoNextStep(4, 4)]
[After]:{	UpdatePosition(4, 4, 14);
	NoNextStep(4, 4)
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	NoNextStep(4, 4)
}


[new scheduled]:[NoNextStep(4, 4)]
[After]:{	NoNextStep(4, 4)
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	B([A,B]=[4,5]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[4,5]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[4,5]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 5, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 5, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 5, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 4, 5, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(yellow, no, 4, 5, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 4, 5, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 5, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a40[CTAH] going goal: 4,5 color: neco
[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


org notification: Time [clock=15, time=2015-06-03 17:52:51.906]
org notification: Time [clock=15, time=2015-06-03 17:52:51.906]
object notification: Time [clock=15, time=2015-06-03 17:52:51.906]
object notification: Time [clock=15, time=2015-06-03 17:52:51.906]
object notification: Time [clock=15, time=2015-06-03 17:52:51.906]
Event processed UpdateClock(15)
[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	UpdateClock(15)
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), UpdateClock(15)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	UpdateClock(15)
}


Event processed UpdateClock(15)
[Planbase]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(15)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(15)]
[After]:{	B(timetowait(Wait));
	if	B(18>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(15)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(18>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(18>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=5902, response=accepted, clock=15, time=2015-06-03 17:52:52.206]
org notification: Response [id=5902, response=accepted, clock=15, time=2015-06-03 17:52:52.206]
[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


Event processed @ctenv(functionToList(message(response, 5902, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	B(timetowait(Wait));
	if	B(15>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 5902, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), @ctenv(functionToList(message(response, 5902, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(timetowait(Wait));
	if	B(15>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 5902, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@3a9ae631
[CTAH] The created APLList : [response,5902,accept]
[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(15>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 5902)
		}
}


[new scheduled]:[if B(15>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B(response=response) then ReceivedResponse(accept, 5902)]
[After]:{	if	B(15>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 5902)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 5902)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 5902)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 5902)
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(15>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(15>16+Wait) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(15>16+Wait)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(15>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(15>16+7) then {NoNextStep(3, 2, 5902); ReceivedResponse(noresponse, 5902)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(15>16+7)
	then	{	NoNextStep(3, 2, 5902);
			ReceivedResponse(noresponse, 5902)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 3, 2),L2,0);
	if	B(L2=[actionresult([3,2])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 2, Clock)
		};
	NoNextStep(3, 2, 5902)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 3, 2),L2,0); if B(L2=[actionresult([3,2])]) then {B(clock(Clock)); UpdatePosition(3, 2, Clock)}; NoNextStep(3, 2, 5902), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	@ctenv(moveStepToGoal(neco, 3, 2),L2,0);
	if	B(L2=[actionresult([3,2])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 2, Clock)
		};
	NoNextStep(3, 2, 5902)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a30[CTAH] moveStepToGoal returns: no
org notification: Position [subject=a30, id=null, cell=Cell [x=3, y=2], time=2015-06-03 17:52:53.094, clock=15]
object notification: Position [subject=a30, id=null, cell=Cell [x=3, y=2], time=2015-06-03 17:52:53.094, clock=15]
org notification: Position [subject=a30, id=null, cell=Cell [x=3, y=2], time=2015-06-03 17:52:53.094, clock=15]
Event processed UpdatePosition(3, 2, 15)
[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	NoNextStep(3, 2, 5902)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdatePosition(3, 2, 15)
}


[new scheduled]:[NoNextStep(3, 2, 5902), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdatePosition(3, 2, 15)]
[After]:{	NoNextStep(3, 2, 5902)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdatePosition(3, 2, 15)
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	B([A,B]=[5,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B([A,B]=[5,4]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B([A,B]=[5,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 5, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(yellow, no, 5, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 5, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a30[CTAH] going goal: 5,4 color: neco
[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


org notification: Time [clock=19, time=2015-06-03 17:52:56.167]
org notification: Time [clock=19, time=2015-06-03 17:52:56.167]
object notification: Time [clock=19, time=2015-06-03 17:52:56.167]
object notification: Time [clock=19, time=2015-06-03 17:52:56.167]
object notification: Time [clock=19, time=2015-06-03 17:52:56.167]
Event processed UpdateClock(19)
[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	UpdateClock(19)
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), UpdateClock(19)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	UpdateClock(19)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [3][2] [4][2] [4][3] [4][4] [5][4]

a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:4,C:2)
a30[CTAH] moveStepToGoalTest sent proposal for: [4,2,0,3005]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=3005, agent=a30, agent2=a10, clock=19, time=2015-06-03 17:53:01.591]
org notification: Proposal [id=3005, agent=a30, agent2=a10, clock=19, time=2015-06-03 17:53:01.591]
object notification: Obligation [subject=a10, obligation=[respondToRequest(3005)], sanction=[reduce(a10, 300)], deadline=24, time=2015-06-03 17:53:01.594, clock=19]
object notification: Obligation [subject=a10, obligation=[respondToRequest(3005)], sanction=[reduce(a10, 300)], deadline=24, time=2015-06-03 17:53:01.594, clock=15]
Event processed UpdateClock(19)
Event processed @ctenv(functionToList(proposal(proposal, 2, 3005, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(3005), 24, reduce(a10, 300))
Event processed adoptObligation(respondToRequest(3005), 24, reduce(a10, 300))
[Planbase]:{	B(clock(Clock));
	if	B(not 3005=no)
	then	{	NextStep(4, 2, 3005);
			SentProposal(3005, 0, open, Clock)
		}
	else	{	NextStep(4, 2)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(19)
}


[new scheduled]:[B(clock(Clock)); if B(not 3005=no) then {NextStep(4, 2, 3005); SentProposal(3005, 0, open, Clock)} else NextStep(4, 2), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(19)]
[After]:{	B(clock(Clock));
	if	B(not 3005=no)
	then	{	NextStep(4, 2, 3005);
			SentProposal(3005, 0, open, Clock)
		}
	else	{	NextStep(4, 2)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(19)
}


[Planbase]:{	@ctenv(functionToList(proposal(proposal, 2, 3005, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(3005), 24, reduce(a10, 300))
},
{	adoptObligation(respondToRequest(3005), 24, reduce(a10, 300))
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), @ctenv(functionToList(proposal(proposal, 2, 3005, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(3005), 24, reduce(a10, 300)), adoptObligation(respondToRequest(3005), 24, reduce(a10, 300))]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 2, 3005, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(3005), 24, reduce(a10, 300))
},
{	adoptObligation(respondToRequest(3005), 24, reduce(a10, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@4683d8a8
[CTAH] The created APLList : [proposal,2,3005,open]
[Planbase]:{	if	B(not 3005=no)
	then	{	NextStep(4, 2, 3005);
			SentProposal(3005, 0, open, 15)
		}
	else	{	NextStep(4, 2)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(not 3005=no) then {NextStep(4, 2, 3005); SentProposal(3005, 0, open, 15)} else NextStep(4, 2), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(not 3005=no)
	then	{	NextStep(4, 2, 3005);
			SentProposal(3005, 0, open, 15)
		}
	else	{	NextStep(4, 2)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	if	B([actionresult([proposal,2,3005,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,3005,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(3005, 300) : 3 Jun 2015 17:09:41 GMT, priority 10)
},
{	adoptz(respondToRequest(3005, 300) : 3 Jun 2015 17:09:41 GMT, priority 10)
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if B([actionresult([proposal,2,3005,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,2,3005,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(3005, 300) : 3 Jun 2015 17:09:41 GMT, priority 10), adoptz(respondToRequest(3005, 300) : 3 Jun 2015 17:09:41 GMT, priority 10)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	if	B([actionresult([proposal,2,3005,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,3005,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(3005, 300) : 3 Jun 2015 17:09:41 GMT, priority 10)
},
{	adoptz(respondToRequest(3005, 300) : 3 Jun 2015 17:09:41 GMT, priority 10)
}


obligation to be adopted: respondToRequest(3005, 300) : 3 Jun 2015 17:09:41 GMT, priority 10
obligation to be adopted: respondToRequest(3005, 300) : 3 Jun 2015 17:09:41 GMT, priority 10
[Planbase]:{	NextStep(4, 2, 3005);
	SentProposal(3005, 0, open, 15)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[NextStep(4, 2, 3005); SentProposal(3005, 0, open, 15), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	NextStep(4, 2, 3005);
	SentProposal(3005, 0, open, 15)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
},
{	if	B([actionresult([proposal,2,3005,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10), if B([actionresult([proposal,2,3005,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
},
{	if	B([actionresult([proposal,2,3005,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


org notification: Time [clock=16, time=2015-06-03 17:53:01.908]
object notification: Time [clock=16, time=2015-06-03 17:53:01.908]
object notification: Time [clock=16, time=2015-06-03 17:53:01.908]
org notification: Time [clock=16, time=2015-06-03 17:53:01.908]
object notification: Time [clock=16, time=2015-06-03 17:53:01.908]
Event processed UpdateClock(16)
[Planbase]:{	SentProposal(3005, 0, open, 15)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[SentProposal(3005, 0, open, 15), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	SentProposal(3005, 0, open, 15)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 3005, open)
		}
},
{	UpdateClock(16)
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if B(proposal=proposal) then ReceivedProposal(2, 3005, open), UpdateClock(16)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 3005, open)
		}
},
{	UpdateClock(16)
}


Event processed UpdateClock(16)
[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(16)
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdateClock(16)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdateClock(16)
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	ReceivedProposal(2, 3005, open)
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), ReceivedProposal(2, 3005, open)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	ReceivedProposal(2, 3005, open)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(19>15+Wait)
	then	{	NoNextStep(4, 2, 3005);
			ReceivedResponse(noresponse, 3005)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(19>15+Wait) then {NoNextStep(4, 2, 3005); ReceivedResponse(noresponse, 3005)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(19>15+Wait)
	then	{	NoNextStep(4, 2, 3005);
			ReceivedResponse(noresponse, 3005)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if G(acceptRequest(3005, 300)) then skip else if B(not scoreAfterExchange(3005, Score)) then getScoreAfterExchange(3005); B(scoreAfterExchange(3005, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3005, Answer), if G(acceptRequests(3005, V2)) then skip else if G(respondToRequest(3005, V2)) then skip else if G(acceptRequest(3005, V2)) then skip else if B(not receivedP(2, 3005, closed(A))) then adoptz(respondToRequest(3005, 50) : Infinite, priority 10), if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	G(acceptRequests(3005, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(3005, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(3005, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 3005, closed(A)))
							then	{	adoptz(respondToRequest(3005, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	G(acceptRequest(3005, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(3005, Score))
			then	{	getScoreAfterExchange(3005)
				}
		};
	B(scoreAfterExchange(3005, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3005, Answer)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(19>15+7)
	then	{	NoNextStep(4, 2, 3005);
			ReceivedResponse(noresponse, 3005)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(19>15+7) then {NoNextStep(4, 2, 3005); ReceivedResponse(noresponse, 3005)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(19>15+7)
	then	{	NoNextStep(4, 2, 3005);
			ReceivedResponse(noresponse, 3005)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(3005, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3005, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 3005, closed(A)))
					then	{	adoptz(respondToRequest(3005, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(3005, Score))
	then	{	getScoreAfterExchange(3005)
		};
	B(scoreAfterExchange(3005, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3005, Answer)
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if G(respondToRequest(3005, V2)) then skip else if G(acceptRequest(3005, V2)) then skip else if B(not receivedP(2, 3005, closed(A))) then adoptz(respondToRequest(3005, 50) : Infinite, priority 10), if B(not scoreAfterExchange(3005, Score)) then getScoreAfterExchange(3005); B(scoreAfterExchange(3005, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3005, Answer)]
[After]:{	if	G(respondToRequest(3005, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3005, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 3005, closed(A)))
					then	{	adoptz(respondToRequest(3005, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(3005, Score))
	then	{	getScoreAfterExchange(3005)
		};
	B(scoreAfterExchange(3005, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3005, Answer)
},
{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	skip
},
{	getScoreAfterExchange(3005);
	B(scoreAfterExchange(3005, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3005, Answer)
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[skip, getScoreAfterExchange(3005); B(scoreAfterExchange(3005, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3005, Answer), if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	skip
},
{	getScoreAfterExchange(3005);
	B(scoreAfterExchange(3005, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3005, Answer)
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>15+Wait)
	then	{	NoNextStep(4, 2, 3005);
			ReceivedResponse(noresponse, 3005)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>15+Wait) then {NoNextStep(4, 2, 3005); ReceivedResponse(noresponse, 3005)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>15+Wait)
	then	{	NoNextStep(4, 2, 3005);
			ReceivedResponse(noresponse, 3005)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	GetScoreAfterExchange(3005, yes);
	B(scoreAfterExchange(3005, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3005, Answer)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if G(acceptRequests(3005, V2)) then skip else if G(respondToRequest(3005, V2)) then skip else if G(acceptRequest(3005, V2)) then skip else if B(not receivedP(2, 3005, closed(A))) then adoptz(respondToRequest(3005, 50) : Infinite, priority 10), GetScoreAfterExchange(3005, yes); B(scoreAfterExchange(3005, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3005, Answer), if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	G(acceptRequests(3005, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(3005, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(3005, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 3005, closed(A)))
							then	{	adoptz(respondToRequest(3005, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	GetScoreAfterExchange(3005, yes);
	B(scoreAfterExchange(3005, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3005, Answer)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(16>15+7)
	then	{	NoNextStep(4, 2, 3005);
			ReceivedResponse(noresponse, 3005)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(16>15+7) then {NoNextStep(4, 2, 3005); ReceivedResponse(noresponse, 3005)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(16>15+7)
	then	{	NoNextStep(4, 2, 3005);
			ReceivedResponse(noresponse, 3005)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(3005, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3005, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 3005, closed(A)))
					then	{	adoptz(respondToRequest(3005, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(3005, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3005, Answer)
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if G(respondToRequest(3005, V2)) then skip else if G(acceptRequest(3005, V2)) then skip else if B(not receivedP(2, 3005, closed(A))) then adoptz(respondToRequest(3005, 50) : Infinite, priority 10), B(scoreAfterExchange(3005, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3005, Answer)]
[After]:{	if	G(respondToRequest(3005, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3005, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 3005, closed(A)))
					then	{	adoptz(respondToRequest(3005, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(3005, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3005, Answer)
},
{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3005, Answer)
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[skip, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3005, Answer), if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3005, Answer)
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>15+Wait)
	then	{	NoNextStep(4, 2, 3005);
			ReceivedResponse(noresponse, 3005)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>15+Wait) then {NoNextStep(4, 2, 3005); ReceivedResponse(noresponse, 3005)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>15+Wait)
	then	{	NoNextStep(4, 2, 3005);
			ReceivedResponse(noresponse, 3005)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3005, accept)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if G(acceptRequests(3005, V2)) then skip else if G(respondToRequest(3005, V2)) then skip else if G(acceptRequest(3005, V2)) then skip else if B(not receivedP(2, 3005, closed(A))) then adoptz(respondToRequest(3005, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(3005, accept), if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	G(acceptRequests(3005, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(3005, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(3005, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 3005, closed(A)))
							then	{	adoptz(respondToRequest(3005, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3005, accept)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(16>15+7)
	then	{	NoNextStep(4, 2, 3005);
			ReceivedResponse(noresponse, 3005)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(16>15+7) then {NoNextStep(4, 2, 3005); ReceivedResponse(noresponse, 3005)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(16>15+7)
	then	{	NoNextStep(4, 2, 3005);
			ReceivedResponse(noresponse, 3005)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(3005, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3005, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 3005, closed(A)))
					then	{	adoptz(respondToRequest(3005, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(3005, accept)
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if G(respondToRequest(3005, V2)) then skip else if G(acceptRequest(3005, V2)) then skip else if B(not receivedP(2, 3005, closed(A))) then adoptz(respondToRequest(3005, 50) : Infinite, priority 10), B(accept=accept); sendResponse(3005, accept)]
[After]:{	if	G(respondToRequest(3005, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3005, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 3005, closed(A)))
					then	{	adoptz(respondToRequest(3005, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(3005, accept)
},
{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	skip
},
{	sendResponse(3005, accept)
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[skip, sendResponse(3005, accept), if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	skip
},
{	sendResponse(3005, accept)
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>15+Wait)
	then	{	NoNextStep(4, 2, 3005);
			ReceivedResponse(noresponse, 3005)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(16>15+Wait) then {NoNextStep(4, 2, 3005); ReceivedResponse(noresponse, 3005)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	B(timetowait(Wait));
	if	B(16>15+Wait)
	then	{	NoNextStep(4, 2, 3005);
			ReceivedResponse(noresponse, 3005)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	@ctenv(sendResponse(3005, accept),L1,0);
	SentResponse(accept, 3005)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if G(acceptRequests(3005, V2)) then skip else if G(respondToRequest(3005, V2)) then skip else if G(acceptRequest(3005, V2)) then skip else if B(not receivedP(2, 3005, closed(A))) then adoptz(respondToRequest(3005, 50) : Infinite, priority 10), @ctenv(sendResponse(3005, accept),L1,0); SentResponse(accept, 3005), if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	G(acceptRequests(3005, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(3005, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(3005, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 3005, closed(A)))
							then	{	adoptz(respondToRequest(3005, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	@ctenv(sendResponse(3005, accept),L1,0);
	SentResponse(accept, 3005)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 2.

Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=3005, response=accepted, clock=16, time=2015-06-03 17:53:03.143]
org notification: Response [id=3005, response=accepted, clock=16, time=2015-06-03 17:53:03.143]
Event processed @ctenv(functionToList(message(response, 3005, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(16>15+7)
	then	{	NoNextStep(4, 2, 3005);
			ReceivedResponse(noresponse, 3005)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 3005, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(16>15+7) then {NoNextStep(4, 2, 3005); ReceivedResponse(noresponse, 3005)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), @ctenv(functionToList(message(response, 3005, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(16>15+7)
	then	{	NoNextStep(4, 2, 3005);
			ReceivedResponse(noresponse, 3005)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 3005, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	G(respondToRequest(3005, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3005, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 3005, closed(A)))
					then	{	adoptz(respondToRequest(3005, 50) : Infinite, priority 10)
						}
				}
		}
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if G(respondToRequest(3005, V2)) then skip else if G(acceptRequest(3005, V2)) then skip else if B(not receivedP(2, 3005, closed(A))) then adoptz(respondToRequest(3005, 50) : Infinite, priority 10)]
[After]:{	if	G(respondToRequest(3005, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3005, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 3005, closed(A)))
					then	{	adoptz(respondToRequest(3005, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@1d1dbec1
[CTAH] The created APLList : [response,3005,accept]
[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 3005)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), if B(response=response) then ReceivedResponse(accept, 3005)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 3005)
		}
}


[Planbase]:{	if	G(acceptRequest(3005, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 3005, closed(A)))
			then	{	adoptz(respondToRequest(3005, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if G(acceptRequest(3005, V2)) then skip else if B(not receivedP(2, 3005, closed(A))) then adoptz(respondToRequest(3005, 50) : Infinite, priority 10), if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	G(acceptRequest(3005, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 3005, closed(A)))
			then	{	adoptz(respondToRequest(3005, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(16>15+Wait)
	then	{	NoNextStep(4, 2, 3005);
			ReceivedResponse(noresponse, 3005)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 3005)
}


[new scheduled]:[B(timetowait(Wait)); if B(16>15+Wait) then {NoNextStep(4, 2, 3005); ReceivedResponse(noresponse, 3005)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), ReceivedResponse(accept, 3005)]
[After]:{	B(timetowait(Wait));
	if	B(16>15+Wait)
	then	{	NoNextStep(4, 2, 3005);
			ReceivedResponse(noresponse, 3005)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	ReceivedResponse(accept, 3005)
}


[Planbase]:{	if	B(not receivedP(2, 3005, closed(A)))
	then	{	adoptz(respondToRequest(3005, 50) : Infinite, priority 10)
		}
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(not receivedP(2, 3005, closed(A))) then adoptz(respondToRequest(3005, 50) : Infinite, priority 10), if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(not receivedP(2, 3005, closed(A)))
	then	{	adoptz(respondToRequest(3005, 50) : Infinite, priority 10)
		}
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(16>15+7)
	then	{	NoNextStep(4, 2, 3005);
			ReceivedResponse(noresponse, 3005)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[if B(16>15+7) then {NoNextStep(4, 2, 3005); ReceivedResponse(noresponse, 3005)}, if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	if	B(16>15+7)
	then	{	NoNextStep(4, 2, 3005);
			ReceivedResponse(noresponse, 3005)
		}
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 4, 2),L2,0);
	if	B(L2=[actionresult([4,2])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 2, Clock)
		};
	NoNextStep(4, 2, 3005)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 4, 2),L2,0); if B(L2=[actionresult([4,2])]) then {B(clock(Clock)); UpdatePosition(4, 2, Clock)}; NoNextStep(4, 2, 3005), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	@ctenv(moveStepToGoal(neco, 4, 2),L2,0);
	if	B(L2=[actionresult([4,2])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 2, Clock)
		};
	NoNextStep(4, 2, 3005)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


a30[CTAH] moveStepToGoal returns: no
object notification: Position [subject=a30, id=null, cell=Cell [x=4, y=2], time=2015-06-03 17:53:03.729, clock=16]
org notification: Position [subject=a30, id=null, cell=Cell [x=4, y=2], time=2015-06-03 17:53:03.729, clock=16]
org notification: Position [subject=a30, id=null, cell=Cell [x=4, y=2], time=2015-06-03 17:53:03.729, clock=16]
[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


Event processed UpdatePosition(4, 2, 16)
[Planbase]:{	NoNextStep(4, 2, 3005)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdatePosition(4, 2, 16)
}


[new scheduled]:[NoNextStep(4, 2, 3005), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100), UpdatePosition(4, 2, 16)]
[After]:{	NoNextStep(4, 2, 3005)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
},
{	UpdatePosition(4, 2, 16)
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(tile(white, 1, 2)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(tile(white, 1, 2))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	B([A,B]=[5,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[5,4]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[5,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 5, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(yellow, no, 5, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 5, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a30[CTAH] going goal: 5,4 color: neco
[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


a40[CTAH] paths: 1000
Need to wait 3 more seconds
[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


org notification: Time [clock=20, time=2015-06-03 17:53:06.17]
org notification: Time [clock=20, time=2015-06-03 17:53:06.17]
object notification: Time [clock=20, time=2015-06-03 17:53:06.17]
object notification: Time [clock=20, time=2015-06-03 17:53:06.17]
object notification: Time [clock=20, time=2015-06-03 17:53:06.17]
Event processed UpdateClock(20)
[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	UpdateClock(20)
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), UpdateClock(20)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	UpdateClock(20)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


a40[CTAH] path: 0
a40[CTAH] path: Path: [4][4] [4][5]

a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:4,C:5)
a40[CTAH] moveStepToGoalTest sent proposal for: [4,5,1,6328]
org notification: Proposal [id=6328, agent=a40, agent2=a20, clock=20, time=2015-06-03 17:53:08.79]
org notification: Proposal [id=6328, agent=a40, agent2=a20, clock=20, time=2015-06-03 17:53:08.79]
Event processed UpdateClock(15)
Event processed UpdateClock(19)
Event processed UpdateClock(16)
Event processed UpdateClock(20)
[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(not 6328=no)
	then	{	NextStep(4, 5, 6328);
			SentProposal(6328, 1, open, Clock)
		}
	else	{	NextStep(4, 5)
		}
},
{	UpdateClock(15)
},
{	UpdateClock(19)
},
{	UpdateClock(16)
},
{	UpdateClock(20)
}


[new scheduled]:[B(clock(Clock)); if B(not 6328=no) then {NextStep(4, 5, 6328); SentProposal(6328, 1, open, Clock)} else NextStep(4, 5), UpdateClock(15), UpdateClock(19), UpdateClock(16), UpdateClock(20)]
[After]:{	B(clock(Clock));
	if	B(not 6328=no)
	then	{	NextStep(4, 5, 6328);
			SentProposal(6328, 1, open, Clock)
		}
	else	{	NextStep(4, 5)
		}
},
{	UpdateClock(15)
},
{	UpdateClock(19)
},
{	UpdateClock(16)
},
{	UpdateClock(20)
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(not 6328=no)
	then	{	NextStep(4, 5, 6328);
			SentProposal(6328, 1, open, 18)
		}
	else	{	NextStep(4, 5)
		}
}


[new scheduled]:[if B(not 6328=no) then {NextStep(4, 5, 6328); SentProposal(6328, 1, open, 18)} else NextStep(4, 5)]
[After]:{	if	B(not 6328=no)
	then	{	NextStep(4, 5, 6328);
			SentProposal(6328, 1, open, 18)
		}
	else	{	NextStep(4, 5)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	NextStep(4, 5, 6328);
	SentProposal(6328, 1, open, 18)
}


[new scheduled]:[NextStep(4, 5, 6328); SentProposal(6328, 1, open, 18)]
[After]:{	NextStep(4, 5, 6328);
	SentProposal(6328, 1, open, 18)
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	SentProposal(6328, 1, open, 18)
}


[new scheduled]:[SentProposal(6328, 1, open, 18)]
[After]:{	SentProposal(6328, 1, open, 18)
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(20>18+Wait)
	then	{	NoNextStep(4, 5, 6328);
			ReceivedResponse(noresponse, 6328)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(20>18+Wait) then {NoNextStep(4, 5, 6328); ReceivedResponse(noresponse, 6328)}]
[After]:{	B(timetowait(Wait));
	if	B(20>18+Wait)
	then	{	NoNextStep(4, 5, 6328);
			ReceivedResponse(noresponse, 6328)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(20>18+7)
	then	{	NoNextStep(4, 5, 6328);
			ReceivedResponse(noresponse, 6328)
		}
}


[new scheduled]:[if B(20>18+7) then {NoNextStep(4, 5, 6328); ReceivedResponse(noresponse, 6328)}]
[After]:{	if	B(20>18+7)
	then	{	NoNextStep(4, 5, 6328);
			ReceivedResponse(noresponse, 6328)
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(20>18+Wait)
	then	{	NoNextStep(4, 5, 6328);
			ReceivedResponse(noresponse, 6328)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(20>18+Wait) then {NoNextStep(4, 5, 6328); ReceivedResponse(noresponse, 6328)}]
[After]:{	B(timetowait(Wait));
	if	B(20>18+Wait)
	then	{	NoNextStep(4, 5, 6328);
			ReceivedResponse(noresponse, 6328)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(20>18+7)
	then	{	NoNextStep(4, 5, 6328);
			ReceivedResponse(noresponse, 6328)
		}
}


[new scheduled]:[if B(20>18+7) then {NoNextStep(4, 5, 6328); ReceivedResponse(noresponse, 6328)}]
[After]:{	if	B(20>18+7)
	then	{	NoNextStep(4, 5, 6328);
			ReceivedResponse(noresponse, 6328)
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(20>18+Wait)
	then	{	NoNextStep(4, 5, 6328);
			ReceivedResponse(noresponse, 6328)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(20>18+Wait) then {NoNextStep(4, 5, 6328); ReceivedResponse(noresponse, 6328)}]
[After]:{	B(timetowait(Wait));
	if	B(20>18+Wait)
	then	{	NoNextStep(4, 5, 6328);
			ReceivedResponse(noresponse, 6328)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(20>18+7)
	then	{	NoNextStep(4, 5, 6328);
			ReceivedResponse(noresponse, 6328)
		}
}


[new scheduled]:[if B(20>18+7) then {NoNextStep(4, 5, 6328); ReceivedResponse(noresponse, 6328)}]
[After]:{	if	B(20>18+7)
	then	{	NoNextStep(4, 5, 6328);
			ReceivedResponse(noresponse, 6328)
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(20>18+Wait)
	then	{	NoNextStep(4, 5, 6328);
			ReceivedResponse(noresponse, 6328)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(20>18+Wait) then {NoNextStep(4, 5, 6328); ReceivedResponse(noresponse, 6328)}]
[After]:{	B(timetowait(Wait));
	if	B(20>18+Wait)
	then	{	NoNextStep(4, 5, 6328);
			ReceivedResponse(noresponse, 6328)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(20>18+7)
	then	{	NoNextStep(4, 5, 6328);
			ReceivedResponse(noresponse, 6328)
		}
}


[new scheduled]:[if B(20>18+7) then {NoNextStep(4, 5, 6328); ReceivedResponse(noresponse, 6328)}]
[After]:{	if	B(20>18+7)
	then	{	NoNextStep(4, 5, 6328);
			ReceivedResponse(noresponse, 6328)
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(20>18+Wait)
	then	{	NoNextStep(4, 5, 6328);
			ReceivedResponse(noresponse, 6328)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(20>18+Wait) then {NoNextStep(4, 5, 6328); ReceivedResponse(noresponse, 6328)}]
[After]:{	B(timetowait(Wait));
	if	B(20>18+Wait)
	then	{	NoNextStep(4, 5, 6328);
			ReceivedResponse(noresponse, 6328)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
org notification: Response [id=6328, response=accepted, clock=20, time=2015-06-03 17:53:10.684]
org notification: Response [id=6328, response=accepted, clock=20, time=2015-06-03 17:53:10.684]
[Planbase]:{	if	B(20>18+7)
	then	{	NoNextStep(4, 5, 6328);
			ReceivedResponse(noresponse, 6328)
		}
}


[new scheduled]:[if B(20>18+7) then {NoNextStep(4, 5, 6328); ReceivedResponse(noresponse, 6328)}]
[After]:{	if	B(20>18+7)
	then	{	NoNextStep(4, 5, 6328);
			ReceivedResponse(noresponse, 6328)
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


Event processed @ctenv(functionToList(message(response, 6328, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(response, 6328, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), @ctenv(functionToList(message(response, 6328, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700)
},
{	@ctenv(functionToList(message(response, 6328, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@b9913e0
[CTAH] The created APLList : [response,6328,accept]
[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(20>18+Wait)
	then	{	NoNextStep(4, 5, 6328);
			ReceivedResponse(noresponse, 6328)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 6328)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(20>18+Wait) then {NoNextStep(4, 5, 6328); ReceivedResponse(noresponse, 6328)}, if B(response=response) then ReceivedResponse(accept, 6328)]
[After]:{	B(timetowait(Wait));
	if	B(20>18+Wait)
	then	{	NoNextStep(4, 5, 6328);
			ReceivedResponse(noresponse, 6328)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 6328)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(20>18+7)
	then	{	NoNextStep(4, 5, 6328);
			ReceivedResponse(noresponse, 6328)
		}
},
{	ReceivedResponse(accept, 6328)
}


[new scheduled]:[if B(20>18+7) then {NoNextStep(4, 5, 6328); ReceivedResponse(noresponse, 6328)}, ReceivedResponse(accept, 6328)]
[After]:{	if	B(20>18+7)
	then	{	NoNextStep(4, 5, 6328);
			ReceivedResponse(noresponse, 6328)
		}
},
{	ReceivedResponse(accept, 6328)
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 4, 5),L2,0);
	if	B(L2=[actionresult([4,5])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 5, Clock)
		};
	NoNextStep(4, 5, 6328)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 4, 5),L2,0); if B(L2=[actionresult([4,5])]) then {B(clock(Clock)); UpdatePosition(4, 5, Clock)}; NoNextStep(4, 5, 6328)]
[After]:{	@ctenv(moveStepToGoal(neco, 4, 5),L2,0);
	if	B(L2=[actionresult([4,5])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 5, Clock)
		};
	NoNextStep(4, 5, 6328)
}


Need to wait 4 more seconds
org notification: Position [subject=a40, id=null, cell=Cell [x=4, y=5], time=2015-06-03 17:53:11.283, clock=20]
org notification: Position [subject=a40, id=null, cell=Cell [x=4, y=5], time=2015-06-03 17:53:11.283, clock=20]
object notification: Position [subject=a40, id=null, cell=Cell [x=4, y=5], time=2015-06-03 17:53:11.283, clock=20]
[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


org notification: Time [clock=17, time=2015-06-03 17:53:11.918]
org notification: Time [clock=17, time=2015-06-03 17:53:11.918]
object notification: Time [clock=17, time=2015-06-03 17:53:11.918]
object notification: Time [clock=17, time=2015-06-03 17:53:11.918]
object notification: Time [clock=17, time=2015-06-03 17:53:11.918]
Event processed UpdateClock(17)
[Planbase]:{	UpdateClock(17)
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), UpdateClock(17)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdateClock(17)
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [4][2] [5][2] [5][3] [5][4]

a30[CTAH] moveStepToGoalTest returns I have chip: [5,2,no,no]
Event processed UpdateClock(20)
Event processed UpdateClock(17)
[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(5, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(5, 2)
		}
},
{	UpdateClock(20)
},
{	UpdateClock(17)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(5, 2, no); SentProposal(no, no, open, Clock)} else NextStep(5, 2), UpdateClock(20), UpdateClock(17)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(5, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(5, 2)
		}
},
{	UpdateClock(20)
},
{	UpdateClock(17)
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(5, 2, no);
			SentProposal(no, no, open, 16)
		}
	else	{	NextStep(5, 2)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(5, 2, no); SentProposal(no, no, open, 16)} else NextStep(5, 2)]
[After]:{	if	B(not no=no)
	then	{	NextStep(5, 2, no);
			SentProposal(no, no, open, 16)
		}
	else	{	NextStep(5, 2)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	NextStep(5, 2)
}


[new scheduled]:[NextStep(5, 2)]
[After]:{	NextStep(5, 2)
}


a40[CTAH] moveStepToGoal returns: [4,5]
[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


Event processed UpdatePosition(4, 5, 20)
Event processed UpdateClock(17)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(4, 5, Clock);
	NoNextStep(4, 5, 6328)
},
{	UpdatePosition(4, 5, 20)
},
{	UpdateClock(17)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(4, 5, Clock); NoNextStep(4, 5, 6328), UpdatePosition(4, 5, 20), UpdateClock(17)]
[After]:{	B(clock(Clock));
	UpdatePosition(4, 5, Clock);
	NoNextStep(4, 5, 6328)
},
{	UpdatePosition(4, 5, 20)
},
{	UpdateClock(17)
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 5, 2),L2,0);
	if	B(L2=[actionresult([5,2])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 2, Clock)
		};
	NoNextStep(5, 2)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 5, 2),L2,0); if B(L2=[actionresult([5,2])]) then {B(clock(Clock)); UpdatePosition(5, 2, Clock)}; NoNextStep(5, 2)]
[After]:{	@ctenv(moveStepToGoal(neco, 5, 2),L2,0);
	if	B(L2=[actionresult([5,2])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 2, Clock)
		};
	NoNextStep(5, 2)
}


a30[CTAH] moveStepToGoal returns: no
org notification: Position [subject=a30, id=null, cell=Cell [x=5, y=2], time=2015-06-03 17:53:15.43, clock=17]
object notification: Position [subject=a30, id=null, cell=Cell [x=5, y=2], time=2015-06-03 17:53:15.43, clock=17]
org notification: Position [subject=a30, id=null, cell=Cell [x=5, y=2], time=2015-06-03 17:53:15.43, clock=17]
[Planbase]:{	UpdatePosition(4, 5, 20);
	NoNextStep(4, 5, 6328)
}


[new scheduled]:[UpdatePosition(4, 5, 20); NoNextStep(4, 5, 6328)]
[After]:{	UpdatePosition(4, 5, 20);
	NoNextStep(4, 5, 6328)
}


Event processed UpdatePosition(5, 2, 17)
[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	NoNextStep(5, 2)
},
{	UpdatePosition(5, 2, 17)
}


[new scheduled]:[NoNextStep(5, 2), UpdatePosition(5, 2, 17)]
[After]:{	NoNextStep(5, 2)
},
{	UpdatePosition(5, 2, 17)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	B([A,B]=[5,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[5,4]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[5,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 5, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(yellow, no, 5, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 5, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a30[CTAH] going goal: 5,4 color: neco
[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


org notification: Time [clock=21, time=2015-06-03 17:53:16.171]
org notification: Time [clock=21, time=2015-06-03 17:53:16.171]
object notification: Time [clock=21, time=2015-06-03 17:53:16.171]
object notification: Time [clock=21, time=2015-06-03 17:53:16.171]
object notification: Time [clock=21, time=2015-06-03 17:53:16.171]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


Event processed UpdateClock(21)
Event processed UpdateClock(21)
[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
},
{	UpdateClock(21)
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10), UpdateClock(21)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
},
{	UpdateClock(21)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


org notification: Time [clock=18, time=2015-06-03 17:53:21.92]
org notification: Time [clock=18, time=2015-06-03 17:53:21.92]
object notification: Time [clock=18, time=2015-06-03 17:53:21.92]
object notification: Time [clock=18, time=2015-06-03 17:53:21.92]
object notification: Time [clock=18, time=2015-06-03 17:53:21.92]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(18)
[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	UpdateClock(18)
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), UpdateClock(18)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	UpdateClock(18)
}


Event processed UpdateClock(18)
[Planbase]:{	UpdateClock(18)
}


[new scheduled]:[UpdateClock(18)]
[After]:{	UpdateClock(18)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [5][2] [5][3] [5][4]

a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:5,C:3)
a30[CTAH] moveStepToGoalTest sent proposal for: [5,3,3,3320]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
Received a proposal creating event
org notification: Proposal [id=3320, agent=a30, agent2=a40, clock=18, time=2015-06-03 17:53:24.142]
org notification: Proposal [id=3320, agent=a30, agent2=a40, clock=18, time=2015-06-03 17:53:24.142]
object notification: Obligation [subject=a40, obligation=[respondToRequest(3320)], sanction=[reduce(a40, 300)], deadline=23, time=2015-06-03 17:53:24.144, clock=21]
object notification: Obligation [subject=a40, obligation=[respondToRequest(3320)], sanction=[reduce(a40, 300)], deadline=23, time=2015-06-03 17:53:24.145, clock=18]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


Event processed UpdateClock(21)
Event processed UpdateClock(18)
[Planbase]:{	B(clock(Clock));
	if	B(not 3320=no)
	then	{	NextStep(5, 3, 3320);
			SentProposal(3320, 3, open, Clock)
		}
	else	{	NextStep(5, 3)
		}
},
{	UpdateClock(21)
},
{	UpdateClock(18)
}


[new scheduled]:[B(clock(Clock)); if B(not 3320=no) then {NextStep(5, 3, 3320); SentProposal(3320, 3, open, Clock)} else NextStep(5, 3), UpdateClock(21), UpdateClock(18)]
[After]:{	B(clock(Clock));
	if	B(not 3320=no)
	then	{	NextStep(5, 3, 3320);
			SentProposal(3320, 3, open, Clock)
		}
	else	{	NextStep(5, 3)
		}
},
{	UpdateClock(21)
},
{	UpdateClock(18)
}


Event processed @ctenv(functionToList(proposal(proposal, 2, 3320, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(3320), 23, reduce(a40, 300))
Event processed adoptObligation(respondToRequest(3320), 23, reduce(a40, 300))
[Planbase]:{	@ctenv(functionToList(proposal(proposal, 2, 3320, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(3320), 23, reduce(a40, 300))
},
{	adoptObligation(respondToRequest(3320), 23, reduce(a40, 300))
}


[new scheduled]:[@ctenv(functionToList(proposal(proposal, 2, 3320, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(3320), 23, reduce(a40, 300)), adoptObligation(respondToRequest(3320), 23, reduce(a40, 300))]
[After]:{	@ctenv(functionToList(proposal(proposal, 2, 3320, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(3320), 23, reduce(a40, 300))
},
{	adoptObligation(respondToRequest(3320), 23, reduce(a40, 300))
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@8a677fd
[CTAH] The created APLList : [proposal,2,3320,open]
[Planbase]:{	if	B(not 3320=no)
	then	{	NextStep(5, 3, 3320);
			SentProposal(3320, 3, open, 17)
		}
	else	{	NextStep(5, 3)
		}
}


[new scheduled]:[if B(not 3320=no) then {NextStep(5, 3, 3320); SentProposal(3320, 3, open, 17)} else NextStep(5, 3)]
[After]:{	if	B(not 3320=no)
	then	{	NextStep(5, 3, 3320);
			SentProposal(3320, 3, open, 17)
		}
	else	{	NextStep(5, 3)
		}
}


[Planbase]:{	if	B([actionresult([proposal,2,3320,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,3320,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(3320, 300) : 3 Jun 2015 17:10:04 GMT, priority 10)
},
{	adoptz(respondToRequest(3320, 300) : 3 Jun 2015 17:10:04 GMT, priority 10)
}


[new scheduled]:[if B([actionresult([proposal,2,3320,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,2,3320,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(3320, 300) : 3 Jun 2015 17:10:04 GMT, priority 10), adoptz(respondToRequest(3320, 300) : 3 Jun 2015 17:10:04 GMT, priority 10)]
[After]:{	if	B([actionresult([proposal,2,3320,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,3320,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(3320, 300) : 3 Jun 2015 17:10:04 GMT, priority 10)
},
{	adoptz(respondToRequest(3320, 300) : 3 Jun 2015 17:10:04 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


obligation to be adopted: respondToRequest(3320, 300) : 3 Jun 2015 17:10:04 GMT, priority 10
obligation to be adopted: respondToRequest(3320, 300) : 3 Jun 2015 17:10:04 GMT, priority 10
[Planbase]:{	NextStep(5, 3, 3320);
	SentProposal(3320, 3, open, 17)
}


[new scheduled]:[NextStep(5, 3, 3320); SentProposal(3320, 3, open, 17)]
[After]:{	NextStep(5, 3, 3320);
	SentProposal(3320, 3, open, 17)
}


[Planbase]:{	if	B([actionresult([proposal,2,3320,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B([actionresult([proposal,2,3320,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([proposal,2,3320,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	SentProposal(3320, 3, open, 17)
}


[new scheduled]:[SentProposal(3320, 3, open, 17)]
[After]:{	SentProposal(3320, 3, open, 17)
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 3320, open)
		}
}


[new scheduled]:[if B(proposal=proposal) then ReceivedProposal(2, 3320, open)]
[After]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 3320, open)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	ReceivedProposal(2, 3320, open)
}


[new scheduled]:[ReceivedProposal(2, 3320, open)]
[After]:{	ReceivedProposal(2, 3320, open)
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(5, 3, 3320);
			ReceivedResponse(noresponse, 3320)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(5, 3, 3320); ReceivedResponse(noresponse, 3320)}]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(5, 3, 3320);
			ReceivedResponse(noresponse, 3320)
		}
}


[Planbase]:


[new scheduled]:[if G(acceptRequest(3320, 300)) then skip else if B(not scoreAfterExchange(3320, Score)) then getScoreAfterExchange(3320); B(scoreAfterExchange(3320, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3320, Answer), if G(acceptRequests(3320, V2)) then skip else if G(respondToRequest(3320, V2)) then skip else if G(acceptRequest(3320, V2)) then skip else if B(not receivedP(2, 3320, closed(A))) then adoptz(respondToRequest(3320, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequests(3320, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(3320, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(3320, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 3320, closed(A)))
							then	{	adoptz(respondToRequest(3320, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	G(acceptRequest(3320, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(3320, Score))
			then	{	getScoreAfterExchange(3320)
				}
		};
	B(scoreAfterExchange(3320, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3320, Answer)
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(5, 3, 3320);
			ReceivedResponse(noresponse, 3320)
		}
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(5, 3, 3320); ReceivedResponse(noresponse, 3320)}]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(5, 3, 3320);
			ReceivedResponse(noresponse, 3320)
		}
}


[Planbase]:{	if	G(respondToRequest(3320, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3320, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 3320, closed(A)))
					then	{	adoptz(respondToRequest(3320, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(3320, Score))
	then	{	getScoreAfterExchange(3320)
		};
	B(scoreAfterExchange(3320, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3320, Answer)
}


[new scheduled]:[if G(respondToRequest(3320, V2)) then skip else if G(acceptRequest(3320, V2)) then skip else if B(not receivedP(2, 3320, closed(A))) then adoptz(respondToRequest(3320, 50) : Infinite, priority 10), if B(not scoreAfterExchange(3320, Score)) then getScoreAfterExchange(3320); B(scoreAfterExchange(3320, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3320, Answer)]
[After]:{	if	G(respondToRequest(3320, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3320, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 3320, closed(A)))
					then	{	adoptz(respondToRequest(3320, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(3320, Score))
	then	{	getScoreAfterExchange(3320)
		};
	B(scoreAfterExchange(3320, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3320, Answer)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	skip
},
{	getScoreAfterExchange(3320);
	B(scoreAfterExchange(3320, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3320, Answer)
}


[new scheduled]:[skip, getScoreAfterExchange(3320); B(scoreAfterExchange(3320, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3320, Answer)]
[After]:{	skip
},
{	getScoreAfterExchange(3320);
	B(scoreAfterExchange(3320, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3320, Answer)
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(5, 3, 3320);
			ReceivedResponse(noresponse, 3320)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(5, 3, 3320); ReceivedResponse(noresponse, 3320)}]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(5, 3, 3320);
			ReceivedResponse(noresponse, 3320)
		}
}


[Planbase]:{	GetScoreAfterExchange(3320, yes);
	B(scoreAfterExchange(3320, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3320, Answer)
}


[new scheduled]:[if G(acceptRequests(3320, V2)) then skip else if G(respondToRequest(3320, V2)) then skip else if G(acceptRequest(3320, V2)) then skip else if B(not receivedP(2, 3320, closed(A))) then adoptz(respondToRequest(3320, 50) : Infinite, priority 10), GetScoreAfterExchange(3320, yes); B(scoreAfterExchange(3320, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3320, Answer)]
[After]:{	if	G(acceptRequests(3320, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(3320, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(3320, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 3320, closed(A)))
							then	{	adoptz(respondToRequest(3320, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	GetScoreAfterExchange(3320, yes);
	B(scoreAfterExchange(3320, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3320, Answer)
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(5, 3, 3320);
			ReceivedResponse(noresponse, 3320)
		}
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(5, 3, 3320); ReceivedResponse(noresponse, 3320)}]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(5, 3, 3320);
			ReceivedResponse(noresponse, 3320)
		}
}


[Planbase]:{	if	G(respondToRequest(3320, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3320, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 3320, closed(A)))
					then	{	adoptz(respondToRequest(3320, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(3320, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3320, Answer)
}


[new scheduled]:[if G(respondToRequest(3320, V2)) then skip else if G(acceptRequest(3320, V2)) then skip else if B(not receivedP(2, 3320, closed(A))) then adoptz(respondToRequest(3320, 50) : Infinite, priority 10), B(scoreAfterExchange(3320, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3320, Answer)]
[After]:{	if	G(respondToRequest(3320, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3320, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 3320, closed(A)))
					then	{	adoptz(respondToRequest(3320, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(3320, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3320, Answer)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3320, Answer)
}


[new scheduled]:[skip, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3320, Answer)]
[After]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3320, Answer)
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(5, 3, 3320);
			ReceivedResponse(noresponse, 3320)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(5, 3, 3320); ReceivedResponse(noresponse, 3320)}]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(5, 3, 3320);
			ReceivedResponse(noresponse, 3320)
		}
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3320, accept)
}


[new scheduled]:[if G(acceptRequests(3320, V2)) then skip else if G(respondToRequest(3320, V2)) then skip else if G(acceptRequest(3320, V2)) then skip else if B(not receivedP(2, 3320, closed(A))) then adoptz(respondToRequest(3320, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(3320, accept)]
[After]:{	if	G(acceptRequests(3320, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(3320, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(3320, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 3320, closed(A)))
							then	{	adoptz(respondToRequest(3320, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3320, accept)
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(5, 3, 3320);
			ReceivedResponse(noresponse, 3320)
		}
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(5, 3, 3320); ReceivedResponse(noresponse, 3320)}]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(5, 3, 3320);
			ReceivedResponse(noresponse, 3320)
		}
}


[Planbase]:{	if	G(respondToRequest(3320, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3320, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 3320, closed(A)))
					then	{	adoptz(respondToRequest(3320, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(3320, accept)
}


[new scheduled]:[if G(respondToRequest(3320, V2)) then skip else if G(acceptRequest(3320, V2)) then skip else if B(not receivedP(2, 3320, closed(A))) then adoptz(respondToRequest(3320, 50) : Infinite, priority 10), B(accept=accept); sendResponse(3320, accept)]
[After]:{	if	G(respondToRequest(3320, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3320, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 3320, closed(A)))
					then	{	adoptz(respondToRequest(3320, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(3320, accept)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	skip
},
{	sendResponse(3320, accept)
}


[new scheduled]:[skip, sendResponse(3320, accept)]
[After]:{	skip
},
{	sendResponse(3320, accept)
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(5, 3, 3320);
			ReceivedResponse(noresponse, 3320)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(5, 3, 3320); ReceivedResponse(noresponse, 3320)}]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(5, 3, 3320);
			ReceivedResponse(noresponse, 3320)
		}
}


[Planbase]:{	@ctenv(sendResponse(3320, accept),L1,0);
	SentResponse(accept, 3320)
}


[new scheduled]:[if G(acceptRequests(3320, V2)) then skip else if G(respondToRequest(3320, V2)) then skip else if G(acceptRequest(3320, V2)) then skip else if B(not receivedP(2, 3320, closed(A))) then adoptz(respondToRequest(3320, 50) : Infinite, priority 10), @ctenv(sendResponse(3320, accept),L1,0); SentResponse(accept, 3320)]
[After]:{	if	G(acceptRequests(3320, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(3320, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(3320, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 3320, closed(A)))
							then	{	adoptz(respondToRequest(3320, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	@ctenv(sendResponse(3320, accept),L1,0);
	SentResponse(accept, 3320)
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


a40[CTAH] sent response: Discourse Message...
From PerGameId: 3.
To PerGameId: 2.

Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=3320, response=accepted, clock=18, time=2015-06-03 17:53:25.504]
org notification: Response [id=3320, response=accepted, clock=18, time=2015-06-03 17:53:25.504]
[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(5, 3, 3320);
			ReceivedResponse(noresponse, 3320)
		}
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(5, 3, 3320); ReceivedResponse(noresponse, 3320)}]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(5, 3, 3320);
			ReceivedResponse(noresponse, 3320)
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 2
[MSG] i'm: 2
Received a proposal creating event
org notification: Proposal [id=4895, agent=a20, agent2=a30, clock=18, time=2015-06-03 17:53:25.57]
org notification: Proposal [id=4895, agent=a20, agent2=a30, clock=18, time=2015-06-03 17:53:25.57]
object notification: Obligation [subject=a30, obligation=[respondToRequest(4895)], sanction=[reduce(a30, 300)], deadline=23, time=2015-06-03 17:53:25.574, clock=21]
object notification: Obligation [subject=a30, obligation=[respondToRequest(4895)], sanction=[reduce(a30, 300)], deadline=23, time=2015-06-03 17:53:25.574, clock=18]
[Planbase]:{	if	G(respondToRequest(3320, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3320, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 3320, closed(A)))
					then	{	adoptz(respondToRequest(3320, 50) : Infinite, priority 10)
						}
				}
		}
}


[new scheduled]:[if G(respondToRequest(3320, V2)) then skip else if G(acceptRequest(3320, V2)) then skip else if B(not receivedP(2, 3320, closed(A))) then adoptz(respondToRequest(3320, 50) : Infinite, priority 10)]
[After]:{	if	G(respondToRequest(3320, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3320, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 3320, closed(A)))
					then	{	adoptz(respondToRequest(3320, 50) : Infinite, priority 10)
						}
				}
		}
}


Event processed @ctenv(functionToList(message(response, 3320, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(proposal(proposal, 1, 4895, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(4895), 23, reduce(a30, 300))
Event processed adoptObligation(respondToRequest(4895), 23, reduce(a30, 300))
[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	@ctenv(functionToList(message(response, 3320, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 1, 4895, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(4895), 23, reduce(a30, 300))
},
{	adoptObligation(respondToRequest(4895), 23, reduce(a30, 300))
}


[new scheduled]:[findNextStep(neco, 700), @ctenv(functionToList(message(response, 3320, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), @ctenv(functionToList(proposal(proposal, 1, 4895, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(4895), 23, reduce(a30, 300)), adoptObligation(respondToRequest(4895), 23, reduce(a30, 300))]
[After]:{	findNextStep(neco, 700)
},
{	@ctenv(functionToList(message(response, 3320, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 1, 4895, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(4895), 23, reduce(a30, 300))
},
{	adoptObligation(respondToRequest(4895), 23, reduce(a30, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@5d68d4a4
[CTAH] The created APLList : [response,3320,accept]
[CTAH] Array of Terms: [Lapapl.data.Term;@d608ae5
[CTAH] The created APLList : [proposal,1,4895,open]
[Planbase]:{	if	G(acceptRequest(3320, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 3320, closed(A)))
			then	{	adoptz(respondToRequest(3320, 50) : Infinite, priority 10)
				}
		}
}


[new scheduled]:[if G(acceptRequest(3320, V2)) then skip else if B(not receivedP(2, 3320, closed(A))) then adoptz(respondToRequest(3320, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(3320, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 3320, closed(A)))
			then	{	adoptz(respondToRequest(3320, 50) : Infinite, priority 10)
				}
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(5, 3, 3320);
			ReceivedResponse(noresponse, 3320)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 3320)
		}
},
{	if	B([actionresult([proposal,1,4895,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,4895,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(4895, 300) : 3 Jun 2015 17:10:05 GMT, priority 10)
},
{	adoptz(respondToRequest(4895, 300) : 3 Jun 2015 17:10:05 GMT, priority 10)
}


[new scheduled]:[B(timetowait(Wait)); if B(18>17+Wait) then {NoNextStep(5, 3, 3320); ReceivedResponse(noresponse, 3320)}, if B(response=response) then ReceivedResponse(accept, 3320), if B([actionresult([proposal,1,4895,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,4895,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(4895, 300) : 3 Jun 2015 17:10:05 GMT, priority 10), adoptz(respondToRequest(4895, 300) : 3 Jun 2015 17:10:05 GMT, priority 10)]
[After]:{	B(timetowait(Wait));
	if	B(18>17+Wait)
	then	{	NoNextStep(5, 3, 3320);
			ReceivedResponse(noresponse, 3320)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 3320)
		}
},
{	if	B([actionresult([proposal,1,4895,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,4895,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(4895, 300) : 3 Jun 2015 17:10:05 GMT, priority 10)
},
{	adoptz(respondToRequest(4895, 300) : 3 Jun 2015 17:10:05 GMT, priority 10)
}


obligation to be adopted: respondToRequest(4895, 300) : 3 Jun 2015 17:10:05 GMT, priority 10
obligation to be adopted: respondToRequest(4895, 300) : 3 Jun 2015 17:10:05 GMT, priority 10
[Planbase]:{	if	B(not receivedP(2, 3320, closed(A)))
	then	{	adoptz(respondToRequest(3320, 50) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(not receivedP(2, 3320, closed(A))) then adoptz(respondToRequest(3320, 50) : Infinite, priority 10)]
[After]:{	if	B(not receivedP(2, 3320, closed(A)))
	then	{	adoptz(respondToRequest(3320, 50) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(18>17+7)
	then	{	NoNextStep(5, 3, 3320);
			ReceivedResponse(noresponse, 3320)
		}
},
{	ReceivedResponse(accept, 3320)
},
{	if	B([actionresult([proposal,1,4895,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B(18>17+7) then {NoNextStep(5, 3, 3320); ReceivedResponse(noresponse, 3320)}, ReceivedResponse(accept, 3320), if B([actionresult([proposal,1,4895,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(18>17+7)
	then	{	NoNextStep(5, 3, 3320);
			ReceivedResponse(noresponse, 3320)
		}
},
{	ReceivedResponse(accept, 3320)
},
{	if	B([actionresult([proposal,1,4895,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 4895, open)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(proposal=proposal) then ReceivedProposal(1, 4895, open)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 4895, open)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 5, 3),L2,0);
	if	B(L2=[actionresult([5,3])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 3, Clock)
		};
	NoNextStep(5, 3, 3320)
},
{	ReceivedProposal(1, 4895, open)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 5, 3),L2,0); if B(L2=[actionresult([5,3])]) then {B(clock(Clock)); UpdatePosition(5, 3, Clock)}; NoNextStep(5, 3, 3320), ReceivedProposal(1, 4895, open)]
[After]:{	@ctenv(moveStepToGoal(neco, 5, 3),L2,0);
	if	B(L2=[actionresult([5,3])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 3, Clock)
		};
	NoNextStep(5, 3, 3320)
},
{	ReceivedProposal(1, 4895, open)
}


a30[CTAH] moveStepToGoal returns: no
org notification: Position [subject=a30, id=null, cell=Cell [x=5, y=3], time=2015-06-03 17:53:26.033, clock=18]
object notification: Position [subject=a30, id=null, cell=Cell [x=5, y=3], time=2015-06-03 17:53:26.033, clock=18]
org notification: Position [subject=a30, id=null, cell=Cell [x=5, y=3], time=2015-06-03 17:53:26.033, clock=18]
Event processed UpdatePosition(5, 3, 18)
[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	NoNextStep(5, 3, 3320)
},
{	UpdatePosition(5, 3, 18)
}


[new scheduled]:[if G(acceptRequest(4895, 300)) then skip else if B(not scoreAfterExchange(4895, Score)) then getScoreAfterExchange(4895); B(scoreAfterExchange(4895, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4895, Answer), if G(acceptRequests(4895, V2)) then skip else if G(respondToRequest(4895, V2)) then skip else if G(acceptRequest(4895, V2)) then skip else if B(not receivedP(1, 4895, closed(A))) then adoptz(respondToRequest(4895, 50) : Infinite, priority 10), NoNextStep(5, 3, 3320), UpdatePosition(5, 3, 18)]
[After]:{	if	G(acceptRequests(4895, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(4895, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(4895, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 4895, closed(A)))
							then	{	adoptz(respondToRequest(4895, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	NoNextStep(5, 3, 3320)
},
{	if	G(acceptRequest(4895, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(4895, Score))
			then	{	getScoreAfterExchange(4895)
				}
		};
	B(scoreAfterExchange(4895, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4895, Answer)
},
{	UpdatePosition(5, 3, 18)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	G(respondToRequest(4895, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4895, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 4895, closed(A)))
					then	{	adoptz(respondToRequest(4895, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(4895, Score))
	then	{	getScoreAfterExchange(4895)
		};
	B(scoreAfterExchange(4895, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4895, Answer)
}


[new scheduled]:[findNextStep(neco, 700), if G(respondToRequest(4895, V2)) then skip else if G(acceptRequest(4895, V2)) then skip else if B(not receivedP(1, 4895, closed(A))) then adoptz(respondToRequest(4895, 50) : Infinite, priority 10), if B(not scoreAfterExchange(4895, Score)) then getScoreAfterExchange(4895); B(scoreAfterExchange(4895, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4895, Answer)]
[After]:{	if	G(respondToRequest(4895, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4895, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 4895, closed(A)))
					then	{	adoptz(respondToRequest(4895, 50) : Infinite, priority 10)
						}
				}
		}
},
{	findNextStep(neco, 700)
},
{	if	B(not scoreAfterExchange(4895, Score))
	then	{	getScoreAfterExchange(4895)
		};
	B(scoreAfterExchange(4895, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4895, Answer)
}


org notification: Time [clock=22, time=2015-06-03 17:53:26.174]
object notification: Time [clock=22, time=2015-06-03 17:53:26.174]
object notification: Time [clock=22, time=2015-06-03 17:53:26.174]
org notification: Time [clock=22, time=2015-06-03 17:53:26.174]
object notification: Time [clock=22, time=2015-06-03 17:53:26.174]
object notification: Points [subject=a10, time=2015-06-03 17:53:26.184, clock=22, value=900, id=null]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(22)
Event processed UpdatePoints(900)
[Planbase]:{	UpdateClock(22)
},
{	UpdatePoints(900)
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), UpdateClock(22), UpdatePoints(900)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdateClock(22)
},
{	UpdatePoints(900)
}


Event processed UpdateClock(22)
[Planbase]:{	skip
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	getScoreAfterExchange(4895);
	B(scoreAfterExchange(4895, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4895, Answer)
},
{	UpdateClock(22)
}


[new scheduled]:[skip, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, getScoreAfterExchange(4895); B(scoreAfterExchange(4895, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4895, Answer), UpdateClock(22)]
[After]:{	skip
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	getScoreAfterExchange(4895);
	B(scoreAfterExchange(4895, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4895, Answer)
},
{	UpdateClock(22)
}


Event processed UpdateClock(22)
[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B([A,B]=[5,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	GetScoreAfterExchange(4895, yes);
	B(scoreAfterExchange(4895, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4895, Answer)
}


[new scheduled]:[if G(acceptRequests(4895, V2)) then skip else if G(respondToRequest(4895, V2)) then skip else if G(acceptRequest(4895, V2)) then skip else if B(not receivedP(1, 4895, closed(A))) then adoptz(respondToRequest(4895, 50) : Infinite, priority 10), B([A,B]=[5,4]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, GetScoreAfterExchange(4895, yes); B(scoreAfterExchange(4895, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4895, Answer)]
[After]:{	if	G(acceptRequests(4895, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(4895, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(4895, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 4895, closed(A)))
							then	{	adoptz(respondToRequest(4895, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	B([A,B]=[5,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	GetScoreAfterExchange(4895, yes);
	B(scoreAfterExchange(4895, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4895, Answer)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	G(respondToRequest(4895, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4895, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 4895, closed(A)))
					then	{	adoptz(respondToRequest(4895, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(scoreAfterExchange(4895, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4895, Answer)
}


[new scheduled]:[if G(respondToRequest(4895, V2)) then skip else if G(acceptRequest(4895, V2)) then skip else if B(not receivedP(1, 4895, closed(A))) then adoptz(respondToRequest(4895, 50) : Infinite, priority 10), if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 5, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, B(scoreAfterExchange(4895, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4895, Answer)]
[After]:{	if	G(respondToRequest(4895, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4895, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 4895, closed(A)))
					then	{	adoptz(respondToRequest(4895, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 5, 4, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(scoreAfterExchange(4895, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4895, Answer)
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	skip
},
{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 5, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4895, Answer)
}


[new scheduled]:[skip, if B(100>700) then @ctenv(moveStepToGoalTest(yellow, no, 5, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4895, Answer)]
[After]:{	skip
},
{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(yellow, no, 5, 4, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4895, Answer)
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(4895, accept)
}


[new scheduled]:[if G(acceptRequests(4895, V2)) then skip else if G(respondToRequest(4895, V2)) then skip else if G(acceptRequest(4895, V2)) then skip else if B(not receivedP(1, 4895, closed(A))) then adoptz(respondToRequest(4895, 50) : Infinite, priority 10), @ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}, if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(4895, accept)]
[After]:{	if	G(acceptRequests(4895, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(4895, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(4895, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 4895, closed(A)))
							then	{	adoptz(respondToRequest(4895, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	@ctenv(moveStepToGoalTest(neco, any, 5, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(4895, accept)
}


a30[CTAH] going goal: 5,4 color: neco
[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 2
[MSG] i'm: 2
Received a proposal creating event
org notification: Proposal [id=3073, agent=a20, agent2=a30, clock=22, time=2015-06-03 17:53:27.03]
org notification: Proposal [id=3073, agent=a20, agent2=a30, clock=22, time=2015-06-03 17:53:27.03]
object notification: Obligation [subject=a30, obligation=[respondToRequest(3073)], sanction=[reduce(a30, 300)], deadline=27, time=2015-06-03 17:53:27.035, clock=22]
object notification: Obligation [subject=a30, obligation=[respondToRequest(3073)], sanction=[reduce(a30, 300)], deadline=27, time=2015-06-03 17:53:27.035, clock=18]
[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


org notification: Time [clock=19, time=2015-06-03 17:53:31.922]
org notification: Time [clock=19, time=2015-06-03 17:53:31.922]
object notification: Time [clock=19, time=2015-06-03 17:53:31.922]
object notification: Time [clock=19, time=2015-06-03 17:53:31.922]
object notification: Time [clock=19, time=2015-06-03 17:53:31.922]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


Event processed UpdateClock(19)
Event processed UpdateClock(19)
[Planbase]:{	UpdateClock(19)
}


[new scheduled]:[UpdateClock(19)]
[After]:{	UpdateClock(19)
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	UpdateClock(19)
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), UpdateClock(19)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	UpdateClock(19)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


object notification: Time [clock=23, time=2015-06-03 17:53:36.176]
object notification: Time [clock=23, time=2015-06-03 17:53:36.176]
org notification: Time [clock=23, time=2015-06-03 17:53:36.176]
org notification: Time [clock=23, time=2015-06-03 17:53:36.176]
object notification: Time [clock=23, time=2015-06-03 17:53:36.176]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(23)
[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), UpdateClock(23)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdateClock(23)
}


Event processed UpdateClock(23)
[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [5][3] [5][4]

a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:5,C:4)
a30[CTAH] moveStepToGoalTest sent proposal for: [5,4,0,2125]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=2125, agent=a30, agent2=a10, clock=23, time=2015-06-03 17:53:39.361]
org notification: Proposal [id=2125, agent=a30, agent2=a10, clock=23, time=2015-06-03 17:53:39.361]
object notification: Obligation [subject=a10, obligation=[respondToRequest(2125)], sanction=[reduce(a10, 300)], deadline=28, time=2015-06-03 17:53:39.365, clock=23]
object notification: Obligation [subject=a10, obligation=[respondToRequest(2125)], sanction=[reduce(a10, 300)], deadline=28, time=2015-06-03 17:53:39.365, clock=19]
Event processed @ctenv(functionToList(proposal(proposal, 1, 3073, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(3073), 27, reduce(a30, 300))
Event processed adoptObligation(respondToRequest(3073), 27, reduce(a30, 300))
Event processed UpdateClock(19)
Event processed UpdateClock(23)
Event processed @ctenv(functionToList(proposal(proposal, 2, 2125, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(2125), 28, reduce(a10, 300))
Event processed adoptObligation(respondToRequest(2125), 28, reduce(a10, 300))
[Planbase]:{	if	G(respondToRequest(4895, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4895, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 4895, closed(A)))
					then	{	adoptz(respondToRequest(4895, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(clock(Clock));
	if	B(not 2125=no)
	then	{	NextStep(5, 4, 2125);
			SentProposal(2125, 0, open, Clock)
		}
	else	{	NextStep(5, 4)
		}
},
{	B(accept=accept);
	sendResponse(4895, accept)
},
{	@ctenv(functionToList(proposal(proposal, 1, 3073, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(3073), 27, reduce(a30, 300))
},
{	adoptObligation(respondToRequest(3073), 27, reduce(a30, 300))
},
{	UpdateClock(19)
},
{	UpdateClock(23)
}


[new scheduled]:[if G(respondToRequest(4895, V2)) then skip else if G(acceptRequest(4895, V2)) then skip else if B(not receivedP(1, 4895, closed(A))) then adoptz(respondToRequest(4895, 50) : Infinite, priority 10), B(clock(Clock)); if B(not 2125=no) then {NextStep(5, 4, 2125); SentProposal(2125, 0, open, Clock)} else NextStep(5, 4), B(accept=accept); sendResponse(4895, accept), @ctenv(functionToList(proposal(proposal, 1, 3073, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(3073), 27, reduce(a30, 300)), adoptObligation(respondToRequest(3073), 27, reduce(a30, 300)), UpdateClock(19), UpdateClock(23)]
[After]:{	if	G(respondToRequest(4895, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4895, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 4895, closed(A)))
					then	{	adoptz(respondToRequest(4895, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(clock(Clock));
	if	B(not 2125=no)
	then	{	NextStep(5, 4, 2125);
			SentProposal(2125, 0, open, Clock)
		}
	else	{	NextStep(5, 4)
		}
},
{	B(accept=accept);
	sendResponse(4895, accept)
},
{	@ctenv(functionToList(proposal(proposal, 1, 3073, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(3073), 27, reduce(a30, 300))
},
{	adoptObligation(respondToRequest(3073), 27, reduce(a30, 300))
},
{	UpdateClock(19)
},
{	UpdateClock(23)
}


[Planbase]:{	@ctenv(functionToList(proposal(proposal, 2, 2125, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(2125), 28, reduce(a10, 300))
},
{	adoptObligation(respondToRequest(2125), 28, reduce(a10, 300))
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), @ctenv(functionToList(proposal(proposal, 2, 2125, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(2125), 28, reduce(a10, 300)), adoptObligation(respondToRequest(2125), 28, reduce(a10, 300))]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 2, 2125, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(2125), 28, reduce(a10, 300))
},
{	adoptObligation(respondToRequest(2125), 28, reduce(a10, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@3d002bbc
[CTAH] The created APLList : [proposal,1,3073,open]
[CTAH] Array of Terms: [Lapapl.data.Term;@7ae03ffd
[CTAH] The created APLList : [proposal,2,2125,open]
[Planbase]:{	skip
},
{	if	B(not 2125=no)
	then	{	NextStep(5, 4, 2125);
			SentProposal(2125, 0, open, 22)
		}
	else	{	NextStep(5, 4)
		}
},
{	sendResponse(4895, accept)
},
{	if	B([actionresult([proposal,1,3073,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,3073,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(3073, 300) : 3 Jun 2015 17:10:19 GMT, priority 10)
},
{	adoptz(respondToRequest(3073, 300) : 3 Jun 2015 17:10:19 GMT, priority 10)
}


[new scheduled]:[skip, if B(not 2125=no) then {NextStep(5, 4, 2125); SentProposal(2125, 0, open, 22)} else NextStep(5, 4), sendResponse(4895, accept), if B([actionresult([proposal,1,3073,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,3073,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(3073, 300) : 3 Jun 2015 17:10:19 GMT, priority 10), adoptz(respondToRequest(3073, 300) : 3 Jun 2015 17:10:19 GMT, priority 10)]
[After]:{	skip
},
{	if	B(not 2125=no)
	then	{	NextStep(5, 4, 2125);
			SentProposal(2125, 0, open, 22)
		}
	else	{	NextStep(5, 4)
		}
},
{	sendResponse(4895, accept)
},
{	if	B([actionresult([proposal,1,3073,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,3073,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(3073, 300) : 3 Jun 2015 17:10:19 GMT, priority 10)
},
{	adoptz(respondToRequest(3073, 300) : 3 Jun 2015 17:10:19 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	if	B([actionresult([proposal,2,2125,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,2125,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(2125, 300) : 3 Jun 2015 17:10:19 GMT, priority 10)
},
{	adoptz(respondToRequest(2125, 300) : 3 Jun 2015 17:10:19 GMT, priority 10)
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if B([actionresult([proposal,2,2125,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,2,2125,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(2125, 300) : 3 Jun 2015 17:10:19 GMT, priority 10), adoptz(respondToRequest(2125, 300) : 3 Jun 2015 17:10:19 GMT, priority 10)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	if	B([actionresult([proposal,2,2125,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,2125,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(2125, 300) : 3 Jun 2015 17:10:19 GMT, priority 10)
},
{	adoptz(respondToRequest(2125, 300) : 3 Jun 2015 17:10:19 GMT, priority 10)
}


obligation to be adopted: respondToRequest(3073, 300) : 3 Jun 2015 17:10:19 GMT, priority 10
obligation to be adopted: respondToRequest(3073, 300) : 3 Jun 2015 17:10:19 GMT, priority 10
obligation to be adopted: respondToRequest(2125, 300) : 3 Jun 2015 17:10:19 GMT, priority 10
obligation to be adopted: respondToRequest(2125, 300) : 3 Jun 2015 17:10:19 GMT, priority 10
[Planbase]:{	NextStep(5, 4, 2125);
	SentProposal(2125, 0, open, 22)
},
{	@ctenv(sendResponse(4895, accept),L1,0);
	SentResponse(accept, 4895)
},
{	if	B([actionresult([proposal,1,3073,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if G(acceptRequests(4895, V2)) then skip else if G(respondToRequest(4895, V2)) then skip else if G(acceptRequest(4895, V2)) then skip else if B(not receivedP(1, 4895, closed(A))) then adoptz(respondToRequest(4895, 50) : Infinite, priority 10), NextStep(5, 4, 2125); SentProposal(2125, 0, open, 22), @ctenv(sendResponse(4895, accept),L1,0); SentResponse(accept, 4895), if B([actionresult([proposal,1,3073,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	G(acceptRequests(4895, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(4895, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(4895, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 4895, closed(A)))
							then	{	adoptz(respondToRequest(4895, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	NextStep(5, 4, 2125);
	SentProposal(2125, 0, open, 22)
},
{	@ctenv(sendResponse(4895, accept),L1,0);
	SentResponse(accept, 4895)
},
{	if	B([actionresult([proposal,1,3073,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
},
{	if	B([actionresult([proposal,2,2125,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10), if B([actionresult([proposal,2,2125,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
},
{	if	B([actionresult([proposal,2,2125,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


a30[CTAH] sent response: Discourse Message...
From PerGameId: 2.
To PerGameId: 1.

org notification: Response [id=4895, response=accepted, clock=23, time=2015-06-03 17:53:39.636]
org notification: Response [id=4895, response=accepted, clock=23, time=2015-06-03 17:53:39.636]
[Planbase]:{	if	G(respondToRequest(4895, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4895, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 4895, closed(A)))
					then	{	adoptz(respondToRequest(4895, 50) : Infinite, priority 10)
						}
				}
		}
},
{	SentProposal(2125, 0, open, 22)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 3073, open)
		}
}


[new scheduled]:[if G(respondToRequest(4895, V2)) then skip else if G(acceptRequest(4895, V2)) then skip else if B(not receivedP(1, 4895, closed(A))) then adoptz(respondToRequest(4895, 50) : Infinite, priority 10), SentProposal(2125, 0, open, 22), if B(proposal=proposal) then ReceivedProposal(1, 3073, open)]
[After]:{	if	G(respondToRequest(4895, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4895, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 4895, closed(A)))
					then	{	adoptz(respondToRequest(4895, 50) : Infinite, priority 10)
						}
				}
		}
},
{	SentProposal(2125, 0, open, 22)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 3073, open)
		}
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 2125, open)
		}
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if B(proposal=proposal) then ReceivedProposal(2, 2125, open)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 2125, open)
		}
}


[Planbase]:{	if	G(acceptRequest(4895, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 4895, closed(A)))
			then	{	adoptz(respondToRequest(4895, 50) : Infinite, priority 10)
				}
		}
},
{	ReceivedProposal(1, 3073, open)
}


[new scheduled]:[findNextStep(neco, 700), if G(acceptRequest(4895, V2)) then skip else if B(not receivedP(1, 4895, closed(A))) then adoptz(respondToRequest(4895, 50) : Infinite, priority 10), ReceivedProposal(1, 3073, open)]
[After]:{	if	G(acceptRequest(4895, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 4895, closed(A)))
			then	{	adoptz(respondToRequest(4895, 50) : Infinite, priority 10)
				}
		}
},
{	findNextStep(neco, 700)
},
{	ReceivedProposal(1, 3073, open)
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	ReceivedProposal(2, 2125, open)
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), ReceivedProposal(2, 2125, open)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	ReceivedProposal(2, 2125, open)
}


[Planbase]:{	if	B(not receivedP(1, 4895, closed(A)))
	then	{	adoptz(respondToRequest(4895, 50) : Infinite, priority 10)
		}
},
{	B(timetowait(Wait));
	if	B(23>22+Wait)
	then	{	NoNextStep(5, 4, 2125);
			ReceivedResponse(noresponse, 2125)
		}
}


[new scheduled]:[if G(acceptRequest(3073, 300)) then skip else if B(not scoreAfterExchange(3073, Score)) then getScoreAfterExchange(3073); B(scoreAfterExchange(3073, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3073, Answer), if B(not receivedP(1, 4895, closed(A))) then adoptz(respondToRequest(4895, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(23>22+Wait) then {NoNextStep(5, 4, 2125); ReceivedResponse(noresponse, 2125)}]
[After]:{	if	B(not receivedP(1, 4895, closed(A)))
	then	{	adoptz(respondToRequest(4895, 50) : Infinite, priority 10)
		}
},
{	B(timetowait(Wait));
	if	B(23>22+Wait)
	then	{	NoNextStep(5, 4, 2125);
			ReceivedResponse(noresponse, 2125)
		}
},
{	if	G(acceptRequest(3073, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(3073, Score))
			then	{	getScoreAfterExchange(3073)
				}
		};
	B(scoreAfterExchange(3073, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3073, Answer)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if G(acceptRequest(2125, 300)) then skip else if B(not scoreAfterExchange(2125, Score)) then getScoreAfterExchange(2125); B(scoreAfterExchange(2125, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(2125, Answer), if G(acceptRequests(2125, V2)) then skip else if G(respondToRequest(2125, V2)) then skip else if G(acceptRequest(2125, V2)) then skip else if B(not receivedP(2, 2125, closed(A))) then adoptz(respondToRequest(2125, 50) : Infinite, priority 10), if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	G(acceptRequests(2125, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(2125, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(2125, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 2125, closed(A)))
							then	{	adoptz(respondToRequest(2125, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	G(acceptRequest(2125, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(2125, Score))
			then	{	getScoreAfterExchange(2125)
				}
		};
	B(scoreAfterExchange(2125, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2125, Answer)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(23>22+7)
	then	{	NoNextStep(5, 4, 2125);
			ReceivedResponse(noresponse, 2125)
		}
},
{	if	B(not scoreAfterExchange(3073, Score))
	then	{	getScoreAfterExchange(3073)
		};
	B(scoreAfterExchange(3073, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3073, Answer)
}


[new scheduled]:[if G(acceptRequests(3073, V2)) then skip else if G(respondToRequest(3073, V2)) then skip else if G(acceptRequest(3073, V2)) then skip else if B(not receivedP(1, 3073, closed(A))) then adoptz(respondToRequest(3073, 50) : Infinite, priority 10), if B(23>22+7) then {NoNextStep(5, 4, 2125); ReceivedResponse(noresponse, 2125)}, if B(not scoreAfterExchange(3073, Score)) then getScoreAfterExchange(3073); B(scoreAfterExchange(3073, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3073, Answer)]
[After]:{	if	G(acceptRequests(3073, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(3073, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(3073, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 3073, closed(A)))
							then	{	adoptz(respondToRequest(3073, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(23>22+7)
	then	{	NoNextStep(5, 4, 2125);
			ReceivedResponse(noresponse, 2125)
		}
},
{	if	B(not scoreAfterExchange(3073, Score))
	then	{	getScoreAfterExchange(3073)
		};
	B(scoreAfterExchange(3073, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3073, Answer)
}


[Planbase]:{	if	G(respondToRequest(2125, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(2125, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 2125, closed(A)))
					then	{	adoptz(respondToRequest(2125, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(2125, Score))
	then	{	getScoreAfterExchange(2125)
		};
	B(scoreAfterExchange(2125, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2125, Answer)
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if G(respondToRequest(2125, V2)) then skip else if G(acceptRequest(2125, V2)) then skip else if B(not receivedP(2, 2125, closed(A))) then adoptz(respondToRequest(2125, 50) : Infinite, priority 10), if B(not scoreAfterExchange(2125, Score)) then getScoreAfterExchange(2125); B(scoreAfterExchange(2125, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(2125, Answer)]
[After]:{	if	G(respondToRequest(2125, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(2125, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 2125, closed(A)))
					then	{	adoptz(respondToRequest(2125, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(2125, Score))
	then	{	getScoreAfterExchange(2125)
		};
	B(scoreAfterExchange(2125, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2125, Answer)
},
{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(3073, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3073, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 3073, closed(A)))
					then	{	adoptz(respondToRequest(3073, 50) : Infinite, priority 10)
						}
				}
		}
},
{	getScoreAfterExchange(3073);
	B(scoreAfterExchange(3073, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3073, Answer)
}


[new scheduled]:[findNextStep(neco, 700), if G(respondToRequest(3073, V2)) then skip else if G(acceptRequest(3073, V2)) then skip else if B(not receivedP(1, 3073, closed(A))) then adoptz(respondToRequest(3073, 50) : Infinite, priority 10), getScoreAfterExchange(3073); B(scoreAfterExchange(3073, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3073, Answer)]
[After]:{	if	G(respondToRequest(3073, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3073, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 3073, closed(A)))
					then	{	adoptz(respondToRequest(3073, 50) : Infinite, priority 10)
						}
				}
		}
},
{	findNextStep(neco, 700)
},
{	getScoreAfterExchange(3073);
	B(scoreAfterExchange(3073, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3073, Answer)
}


[Planbase]:{	skip
},
{	getScoreAfterExchange(2125);
	B(scoreAfterExchange(2125, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2125, Answer)
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[skip, getScoreAfterExchange(2125); B(scoreAfterExchange(2125, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(2125, Answer), if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	skip
},
{	getScoreAfterExchange(2125);
	B(scoreAfterExchange(2125, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2125, Answer)
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	skip
},
{	B(timetowait(Wait));
	if	B(23>22+Wait)
	then	{	NoNextStep(5, 4, 2125);
			ReceivedResponse(noresponse, 2125)
		}
},
{	GetScoreAfterExchange(3073, yes);
	B(scoreAfterExchange(3073, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3073, Answer)
}


[new scheduled]:[skip, B(timetowait(Wait)); if B(23>22+Wait) then {NoNextStep(5, 4, 2125); ReceivedResponse(noresponse, 2125)}, GetScoreAfterExchange(3073, yes); B(scoreAfterExchange(3073, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3073, Answer)]
[After]:{	skip
},
{	B(timetowait(Wait));
	if	B(23>22+Wait)
	then	{	NoNextStep(5, 4, 2125);
			ReceivedResponse(noresponse, 2125)
		}
},
{	GetScoreAfterExchange(3073, yes);
	B(scoreAfterExchange(3073, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3073, Answer)
}


[Planbase]:{	GetScoreAfterExchange(2125, yes);
	B(scoreAfterExchange(2125, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2125, Answer)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if G(acceptRequests(2125, V2)) then skip else if G(respondToRequest(2125, V2)) then skip else if G(acceptRequest(2125, V2)) then skip else if B(not receivedP(2, 2125, closed(A))) then adoptz(respondToRequest(2125, 50) : Infinite, priority 10), GetScoreAfterExchange(2125, yes); B(scoreAfterExchange(2125, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(2125, Answer), if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	G(acceptRequests(2125, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(2125, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(2125, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 2125, closed(A)))
							then	{	adoptz(respondToRequest(2125, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	GetScoreAfterExchange(2125, yes);
	B(scoreAfterExchange(2125, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2125, Answer)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(23>22+7)
	then	{	NoNextStep(5, 4, 2125);
			ReceivedResponse(noresponse, 2125)
		}
},
{	B(scoreAfterExchange(3073, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3073, Answer)
}


[new scheduled]:[if G(acceptRequests(3073, V2)) then skip else if G(respondToRequest(3073, V2)) then skip else if G(acceptRequest(3073, V2)) then skip else if B(not receivedP(1, 3073, closed(A))) then adoptz(respondToRequest(3073, 50) : Infinite, priority 10), if B(23>22+7) then {NoNextStep(5, 4, 2125); ReceivedResponse(noresponse, 2125)}, B(scoreAfterExchange(3073, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3073, Answer)]
[After]:{	if	G(acceptRequests(3073, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(3073, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(3073, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 3073, closed(A)))
							then	{	adoptz(respondToRequest(3073, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(23>22+7)
	then	{	NoNextStep(5, 4, 2125);
			ReceivedResponse(noresponse, 2125)
		}
},
{	B(scoreAfterExchange(3073, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3073, Answer)
}


[Planbase]:{	if	G(respondToRequest(2125, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(2125, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 2125, closed(A)))
					then	{	adoptz(respondToRequest(2125, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(2125, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2125, Answer)
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if G(respondToRequest(2125, V2)) then skip else if G(acceptRequest(2125, V2)) then skip else if B(not receivedP(2, 2125, closed(A))) then adoptz(respondToRequest(2125, 50) : Infinite, priority 10), B(scoreAfterExchange(2125, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(2125, Answer)]
[After]:{	if	G(respondToRequest(2125, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(2125, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 2125, closed(A)))
					then	{	adoptz(respondToRequest(2125, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(2125, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2125, Answer)
},
{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(3073, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3073, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 3073, closed(A)))
					then	{	adoptz(respondToRequest(3073, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3073, Answer)
}


[new scheduled]:[findNextStep(neco, 700), if G(respondToRequest(3073, V2)) then skip else if G(acceptRequest(3073, V2)) then skip else if B(not receivedP(1, 3073, closed(A))) then adoptz(respondToRequest(3073, 50) : Infinite, priority 10), B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3073, Answer)]
[After]:{	if	G(respondToRequest(3073, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3073, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 3073, closed(A)))
					then	{	adoptz(respondToRequest(3073, 50) : Infinite, priority 10)
						}
				}
		}
},
{	findNextStep(neco, 700)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3073, Answer)
}


[Planbase]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2125, Answer)
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[skip, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(2125, Answer), if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(2125, Answer)
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	skip
},
{	B(timetowait(Wait));
	if	B(23>22+Wait)
	then	{	NoNextStep(5, 4, 2125);
			ReceivedResponse(noresponse, 2125)
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3073, accept)
}


[new scheduled]:[skip, B(timetowait(Wait)); if B(23>22+Wait) then {NoNextStep(5, 4, 2125); ReceivedResponse(noresponse, 2125)}, if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(3073, accept)]
[After]:{	skip
},
{	B(timetowait(Wait));
	if	B(23>22+Wait)
	then	{	NoNextStep(5, 4, 2125);
			ReceivedResponse(noresponse, 2125)
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3073, accept)
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(2125, accept)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if G(acceptRequests(2125, V2)) then skip else if G(respondToRequest(2125, V2)) then skip else if G(acceptRequest(2125, V2)) then skip else if B(not receivedP(2, 2125, closed(A))) then adoptz(respondToRequest(2125, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(2125, accept), if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	G(acceptRequests(2125, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(2125, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(2125, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 2125, closed(A)))
							then	{	adoptz(respondToRequest(2125, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(2125, accept)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(23>22+7)
	then	{	NoNextStep(5, 4, 2125);
			ReceivedResponse(noresponse, 2125)
		}
},
{	B(accept=accept);
	sendResponse(3073, accept)
}


[new scheduled]:[if G(acceptRequests(3073, V2)) then skip else if G(respondToRequest(3073, V2)) then skip else if G(acceptRequest(3073, V2)) then skip else if B(not receivedP(1, 3073, closed(A))) then adoptz(respondToRequest(3073, 50) : Infinite, priority 10), if B(23>22+7) then {NoNextStep(5, 4, 2125); ReceivedResponse(noresponse, 2125)}, B(accept=accept); sendResponse(3073, accept)]
[After]:{	if	G(acceptRequests(3073, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(3073, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(3073, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 3073, closed(A)))
							then	{	adoptz(respondToRequest(3073, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(23>22+7)
	then	{	NoNextStep(5, 4, 2125);
			ReceivedResponse(noresponse, 2125)
		}
},
{	B(accept=accept);
	sendResponse(3073, accept)
}


[Planbase]:{	if	G(respondToRequest(2125, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(2125, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 2125, closed(A)))
					then	{	adoptz(respondToRequest(2125, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(2125, accept)
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if G(respondToRequest(2125, V2)) then skip else if G(acceptRequest(2125, V2)) then skip else if B(not receivedP(2, 2125, closed(A))) then adoptz(respondToRequest(2125, 50) : Infinite, priority 10), B(accept=accept); sendResponse(2125, accept)]
[After]:{	if	G(respondToRequest(2125, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(2125, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 2125, closed(A)))
					then	{	adoptz(respondToRequest(2125, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(2125, accept)
},
{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	G(respondToRequest(3073, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3073, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 3073, closed(A)))
					then	{	adoptz(respondToRequest(3073, 50) : Infinite, priority 10)
						}
				}
		}
},
{	sendResponse(3073, accept)
}


[new scheduled]:[findNextStep(neco, 700), if G(respondToRequest(3073, V2)) then skip else if G(acceptRequest(3073, V2)) then skip else if B(not receivedP(1, 3073, closed(A))) then adoptz(respondToRequest(3073, 50) : Infinite, priority 10), sendResponse(3073, accept)]
[After]:{	if	G(respondToRequest(3073, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3073, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 3073, closed(A)))
					then	{	adoptz(respondToRequest(3073, 50) : Infinite, priority 10)
						}
				}
		}
},
{	findNextStep(neco, 700)
},
{	sendResponse(3073, accept)
}


[Planbase]:{	skip
},
{	sendResponse(2125, accept)
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[skip, sendResponse(2125, accept), if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	skip
},
{	sendResponse(2125, accept)
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	skip
},
{	B(timetowait(Wait));
	if	B(23>22+Wait)
	then	{	NoNextStep(5, 4, 2125);
			ReceivedResponse(noresponse, 2125)
		}
},
{	@ctenv(sendResponse(3073, accept),L1,0);
	SentResponse(accept, 3073)
}


[new scheduled]:[skip, B(timetowait(Wait)); if B(23>22+Wait) then {NoNextStep(5, 4, 2125); ReceivedResponse(noresponse, 2125)}, @ctenv(sendResponse(3073, accept),L1,0); SentResponse(accept, 3073)]
[After]:{	skip
},
{	B(timetowait(Wait));
	if	B(23>22+Wait)
	then	{	NoNextStep(5, 4, 2125);
			ReceivedResponse(noresponse, 2125)
		}
},
{	@ctenv(sendResponse(3073, accept),L1,0);
	SentResponse(accept, 3073)
}


a30[CTAH] sent response: Discourse Message...
From PerGameId: 2.
To PerGameId: 1.

org notification: Response [id=3073, response=accepted, clock=23, time=2015-06-03 17:53:40.676]
org notification: Response [id=3073, response=accepted, clock=23, time=2015-06-03 17:53:40.676]
[Planbase]:{	@ctenv(sendResponse(2125, accept),L1,0);
	SentResponse(accept, 2125)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if G(acceptRequests(2125, V2)) then skip else if G(respondToRequest(2125, V2)) then skip else if G(acceptRequest(2125, V2)) then skip else if B(not receivedP(2, 2125, closed(A))) then adoptz(respondToRequest(2125, 50) : Infinite, priority 10), @ctenv(sendResponse(2125, accept),L1,0); SentResponse(accept, 2125), if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	G(acceptRequests(2125, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(2125, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(2125, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(2, 2125, closed(A)))
							then	{	adoptz(respondToRequest(2125, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	@ctenv(sendResponse(2125, accept),L1,0);
	SentResponse(accept, 2125)
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(23>22+7)
	then	{	NoNextStep(5, 4, 2125);
			ReceivedResponse(noresponse, 2125)
		}
}


[new scheduled]:[if B(23>22+7) then {NoNextStep(5, 4, 2125); ReceivedResponse(noresponse, 2125)}]
[After]:{	if	B(23>22+7)
	then	{	NoNextStep(5, 4, 2125);
			ReceivedResponse(noresponse, 2125)
		}
}


a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 2.

Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=2125, response=accepted, clock=23, time=2015-06-03 17:53:40.749]
org notification: Response [id=2125, response=accepted, clock=23, time=2015-06-03 17:53:40.749]
Event processed @ctenv(functionToList(message(response, 2125, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	G(respondToRequest(2125, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(2125, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 2125, closed(A)))
					then	{	adoptz(respondToRequest(2125, 50) : Infinite, priority 10)
						}
				}
		}
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if G(respondToRequest(2125, V2)) then skip else if G(acceptRequest(2125, V2)) then skip else if B(not receivedP(2, 2125, closed(A))) then adoptz(respondToRequest(2125, 50) : Infinite, priority 10)]
[After]:{	if	G(respondToRequest(2125, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(2125, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(2, 2125, closed(A)))
					then	{	adoptz(respondToRequest(2125, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(response, 2125, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), @ctenv(functionToList(message(response, 2125, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700)
},
{	@ctenv(functionToList(message(response, 2125, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@7203cea
[CTAH] The created APLList : [response,2125,accept]
[Planbase]:{	if	G(acceptRequest(2125, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 2125, closed(A)))
			then	{	adoptz(respondToRequest(2125, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if G(acceptRequest(2125, V2)) then skip else if B(not receivedP(2, 2125, closed(A))) then adoptz(respondToRequest(2125, 50) : Infinite, priority 10), if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	G(acceptRequest(2125, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(2, 2125, closed(A)))
			then	{	adoptz(respondToRequest(2125, 50) : Infinite, priority 10)
				}
		}
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(23>22+Wait)
	then	{	NoNextStep(5, 4, 2125);
			ReceivedResponse(noresponse, 2125)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 2125)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(23>22+Wait) then {NoNextStep(5, 4, 2125); ReceivedResponse(noresponse, 2125)}, if B(response=response) then ReceivedResponse(accept, 2125)]
[After]:{	B(timetowait(Wait));
	if	B(23>22+Wait)
	then	{	NoNextStep(5, 4, 2125);
			ReceivedResponse(noresponse, 2125)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 2125)
		}
}


[Planbase]:{	if	B(not receivedP(2, 2125, closed(A)))
	then	{	adoptz(respondToRequest(2125, 50) : Infinite, priority 10)
		}
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(not receivedP(2, 2125, closed(A))) then adoptz(respondToRequest(2125, 50) : Infinite, priority 10), if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(not receivedP(2, 2125, closed(A)))
	then	{	adoptz(respondToRequest(2125, 50) : Infinite, priority 10)
		}
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(23>22+7)
	then	{	NoNextStep(5, 4, 2125);
			ReceivedResponse(noresponse, 2125)
		}
},
{	ReceivedResponse(accept, 2125)
}


[new scheduled]:[if B(23>22+7) then {NoNextStep(5, 4, 2125); ReceivedResponse(noresponse, 2125)}, ReceivedResponse(accept, 2125)]
[After]:{	if	B(23>22+7)
	then	{	NoNextStep(5, 4, 2125);
			ReceivedResponse(noresponse, 2125)
		}
},
{	ReceivedResponse(accept, 2125)
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 5, 4),L2,0);
	if	B(L2=[actionresult([5,4])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 4, Clock)
		};
	NoNextStep(5, 4, 2125)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 5, 4),L2,0); if B(L2=[actionresult([5,4])]) then {B(clock(Clock)); UpdatePosition(5, 4, Clock)}; NoNextStep(5, 4, 2125)]
[After]:{	@ctenv(moveStepToGoal(neco, 5, 4),L2,0);
	if	B(L2=[actionresult([5,4])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 4, Clock)
		};
	NoNextStep(5, 4, 2125)
}


a30[CTAH] moveStepToGoal returns: no
object notification: Position [subject=a30, id=null, cell=Cell [x=5, y=4], time=2015-06-03 17:53:41.119, clock=23]
org notification: Position [subject=a30, id=null, cell=Cell [x=5, y=4], time=2015-06-03 17:53:41.119, clock=23]
org notification: Position [subject=a30, id=null, cell=Cell [x=5, y=4], time=2015-06-03 17:53:41.119, clock=23]
Event processed UpdatePosition(5, 4, 23)
[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	NoNextStep(5, 4, 2125)
},
{	UpdatePosition(5, 4, 23)
}


[new scheduled]:[NoNextStep(5, 4, 2125), UpdatePosition(5, 4, 23)]
[After]:{	NoNextStep(5, 4, 2125)
},
{	UpdatePosition(5, 4, 23)
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


org notification: Position [subject=a20, id=null, cell=Cell [x=5, y=0], time=2015-06-03 17:53:41.562, clock=23]
org notification: Position [subject=a20, id=null, cell=Cell [x=5, y=0], time=2015-06-03 17:53:41.562, clock=23]
[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


org notification: Time [clock=20, time=2015-06-03 17:53:41.929]
object notification: Time [clock=20, time=2015-06-03 17:53:41.929]
org notification: Time [clock=20, time=2015-06-03 17:53:41.929]
object notification: Time [clock=20, time=2015-06-03 17:53:41.929]
object notification: Time [clock=20, time=2015-06-03 17:53:41.929]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(20)
[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	UpdateClock(20)
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), UpdateClock(20)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	UpdateClock(20)
}


Event processed UpdateClock(20)
Event processed UpdateClock(20)
[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


org notification: Time [clock=24, time=2015-06-03 17:53:46.178]
object notification: Time [clock=24, time=2015-06-03 17:53:46.178]
object notification: Time [clock=24, time=2015-06-03 17:53:46.178]
object notification: Time [clock=24, time=2015-06-03 17:53:46.178]
org notification: Time [clock=24, time=2015-06-03 17:53:46.178]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


Event processed UpdateClock(24)
Event processed UpdateClock(24)
Event processed UpdateClock(24)
[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), UpdateClock(24)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	UpdateClock(24)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


setPhases in ClientGameStatus, the current phase is Feedback Phase
setPhases in ClientGameStatus, the current phase is Feedback Phase
setPhases in ClientGameStatus, the current phase is Feedback Phase
[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10), @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@546e88b
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@6c0280df
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@3bd1a7c1
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	ReceivedEvent(phasechange)
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), ReceivedEvent(phasechange)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
},
{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[update, if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	update
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(tile(yellow, 4, 3)) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100), getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(tile(yellow, 4, 3))
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(yellow, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(yellow, 100)
				}
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated, if B(prohibition(useColor(yellow, V2))) then if B(V2>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10) else findNextStep(yellow, 100)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(V2>100)
			then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(yellow, 100)
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated, if B(100>100) then dropgoal(useColor(yellow, 100) : Infinite, priority 10)]
[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(100>100)
	then	{	dropgoal(useColor(yellow, 100) : Infinite, priority 10)
		}
}


[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


(((((((((((((((((Game ended)))))))))))
Game ended 
(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 0.
PIN: 10.
Pos: (R:4,C:3).
Chips: { chips  'blue':0 'white':4 'brown':0 'yellow':0 }.
Score: 900.
Team: -1.

My PlayerStatus is: Game Player...
PerGameId: 2.
PIN: 30.
Pos: (R:5,C:4).
Chips: { chips  'blue':6 'white':0 'brown':0 'yellow':0 }.
Score: 900.
Team: -1.

(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 3.
PIN: 40.
Pos: (R:4,C:5).
Chips: { chips  'blue':0 'white':0 'brown':0 'yellow':5 }.
Score: 900.
Team: -1.

Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@aa35f43
[CTAH] The created APLList : [game_ended]
[CTAH] Array of Terms: [Lapapl.data.Term;@c99ac98
[CTAH] The created APLList : [game_ended]
[CTAH] Array of Terms: [Lapapl.data.Term;@25b3ecd6
[CTAH] The created APLList : [game_ended]
[Planbase]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedEvent(game_ended)]
[After]:{	ReceivedEvent(game_ended)
}


[Planbase]:{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedEvent(game_ended)]
[After]:{	ReceivedEvent(game_ended)
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=1715, agent=a20, agent2=a10, clock=24, time=2015-06-03 17:53:50.749]
org notification: Proposal [id=1715, agent=a20, agent2=a10, clock=24, time=2015-06-03 17:53:50.749]
object notification: Obligation [subject=a10, obligation=[respondToRequest(1715)], sanction=[reduce(a10, 300)], deadline=29, time=2015-06-03 17:53:50.753, clock=24]
object notification: Obligation [subject=a10, obligation=[respondToRequest(1715)], sanction=[reduce(a10, 300)], deadline=29, time=2015-06-03 17:53:50.753, clock=20]
[Planbase]:{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedEvent(game_ended)]
[After]:{	ReceivedEvent(game_ended)
}


Event processed @ctenv(functionToList(proposal(proposal, 1, 1715, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(1715), 29, reduce(a10, 300))
Event processed adoptObligation(respondToRequest(1715), 29, reduce(a10, 300))
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(functionToList(proposal(proposal, 1, 1715, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(1715), 29, reduce(a10, 300))
},
{	adoptObligation(respondToRequest(1715), 29, reduce(a10, 300))
}


[new scheduled]:[@ctenv(functionToList(proposal(proposal, 1, 1715, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(1715), 29, reduce(a10, 300)), adoptObligation(respondToRequest(1715), 29, reduce(a10, 300))]
[After]:{	@ctenv(functionToList(proposal(proposal, 1, 1715, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(1715), 29, reduce(a10, 300))
},
{	adoptObligation(respondToRequest(1715), 29, reduce(a10, 300))
}


[Planbase]:


[new scheduled]:[]
[After]:


[CTAH] Array of Terms: [Lapapl.data.Term;@68fbe392
[CTAH] The created APLList : [proposal,1,1715,open]
[Planbase]:{	if	B([actionresult([proposal,1,1715,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,1715,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(1715, 300) : 3 Jun 2015 17:10:30 GMT, priority 10)
},
{	adoptz(respondToRequest(1715, 300) : 3 Jun 2015 17:10:30 GMT, priority 10)
}


[new scheduled]:[if B([actionresult([proposal,1,1715,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,1715,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(1715, 300) : 3 Jun 2015 17:10:30 GMT, priority 10), adoptz(respondToRequest(1715, 300) : 3 Jun 2015 17:10:30 GMT, priority 10)]
[After]:{	if	B([actionresult([proposal,1,1715,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,1715,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(1715, 300) : 3 Jun 2015 17:10:30 GMT, priority 10)
},
{	adoptz(respondToRequest(1715, 300) : 3 Jun 2015 17:10:30 GMT, priority 10)
}


obligation to be adopted: respondToRequest(1715, 300) : 3 Jun 2015 17:10:30 GMT, priority 10
obligation to be adopted: respondToRequest(1715, 300) : 3 Jun 2015 17:10:30 GMT, priority 10
[Planbase]:{	if	B([actionresult([proposal,1,1715,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B([actionresult([proposal,1,1715,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([proposal,1,1715,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 1715, open)
		}
}


[new scheduled]:[if B(proposal=proposal) then ReceivedProposal(1, 1715, open)]
[After]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 1715, open)
		}
}


[Planbase]:{	ReceivedProposal(1, 1715, open)
}


[new scheduled]:[ReceivedProposal(1, 1715, open)]
[After]:{	ReceivedProposal(1, 1715, open)
}


[Planbase]:


[new scheduled]:[if G(acceptRequest(1715, 300)) then skip else if B(not scoreAfterExchange(1715, Score)) then getScoreAfterExchange(1715); B(scoreAfterExchange(1715, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1715, Answer), if G(acceptRequests(1715, V2)) then skip else if G(respondToRequest(1715, V2)) then skip else if G(acceptRequest(1715, V2)) then skip else if B(not receivedP(1, 1715, closed(A))) then adoptz(respondToRequest(1715, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequests(1715, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(1715, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(1715, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 1715, closed(A)))
							then	{	adoptz(respondToRequest(1715, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	G(acceptRequest(1715, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(1715, Score))
			then	{	getScoreAfterExchange(1715)
				}
		};
	B(scoreAfterExchange(1715, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1715, Answer)
}


[Planbase]:{	if	G(respondToRequest(1715, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1715, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 1715, closed(A)))
					then	{	adoptz(respondToRequest(1715, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(1715, Score))
	then	{	getScoreAfterExchange(1715)
		};
	B(scoreAfterExchange(1715, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1715, Answer)
}


[new scheduled]:[if G(respondToRequest(1715, V2)) then skip else if G(acceptRequest(1715, V2)) then skip else if B(not receivedP(1, 1715, closed(A))) then adoptz(respondToRequest(1715, 50) : Infinite, priority 10), if B(not scoreAfterExchange(1715, Score)) then getScoreAfterExchange(1715); B(scoreAfterExchange(1715, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1715, Answer)]
[After]:{	if	G(respondToRequest(1715, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1715, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 1715, closed(A)))
					then	{	adoptz(respondToRequest(1715, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(1715, Score))
	then	{	getScoreAfterExchange(1715)
		};
	B(scoreAfterExchange(1715, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1715, Answer)
}


[Planbase]:{	skip
},
{	getScoreAfterExchange(1715);
	B(scoreAfterExchange(1715, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1715, Answer)
}


[new scheduled]:[skip, getScoreAfterExchange(1715); B(scoreAfterExchange(1715, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1715, Answer)]
[After]:{	skip
},
{	getScoreAfterExchange(1715);
	B(scoreAfterExchange(1715, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1715, Answer)
}


[Planbase]:{	GetScoreAfterExchange(1715, yes);
	B(scoreAfterExchange(1715, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1715, Answer)
}


[new scheduled]:[if G(acceptRequests(1715, V2)) then skip else if G(respondToRequest(1715, V2)) then skip else if G(acceptRequest(1715, V2)) then skip else if B(not receivedP(1, 1715, closed(A))) then adoptz(respondToRequest(1715, 50) : Infinite, priority 10), GetScoreAfterExchange(1715, yes); B(scoreAfterExchange(1715, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1715, Answer)]
[After]:{	if	G(acceptRequests(1715, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(1715, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(1715, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 1715, closed(A)))
							then	{	adoptz(respondToRequest(1715, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	GetScoreAfterExchange(1715, yes);
	B(scoreAfterExchange(1715, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1715, Answer)
}


[Planbase]:{	if	G(respondToRequest(1715, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1715, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 1715, closed(A)))
					then	{	adoptz(respondToRequest(1715, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(1715, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1715, Answer)
}


[new scheduled]:[if G(respondToRequest(1715, V2)) then skip else if G(acceptRequest(1715, V2)) then skip else if B(not receivedP(1, 1715, closed(A))) then adoptz(respondToRequest(1715, 50) : Infinite, priority 10), B(scoreAfterExchange(1715, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1715, Answer)]
[After]:{	if	G(respondToRequest(1715, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1715, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 1715, closed(A)))
					then	{	adoptz(respondToRequest(1715, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(1715, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1715, Answer)
}


[Planbase]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1715, Answer)
}


[new scheduled]:[skip, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1715, Answer)]
[After]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1715, Answer)
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(1715, accept)
}


[new scheduled]:[if G(acceptRequests(1715, V2)) then skip else if G(respondToRequest(1715, V2)) then skip else if G(acceptRequest(1715, V2)) then skip else if B(not receivedP(1, 1715, closed(A))) then adoptz(respondToRequest(1715, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(1715, accept)]
[After]:{	if	G(acceptRequests(1715, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(1715, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(1715, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 1715, closed(A)))
							then	{	adoptz(respondToRequest(1715, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(1715, accept)
}


[Planbase]:{	if	G(respondToRequest(1715, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1715, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 1715, closed(A)))
					then	{	adoptz(respondToRequest(1715, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(1715, accept)
}


[new scheduled]:[if G(respondToRequest(1715, V2)) then skip else if G(acceptRequest(1715, V2)) then skip else if B(not receivedP(1, 1715, closed(A))) then adoptz(respondToRequest(1715, 50) : Infinite, priority 10), B(accept=accept); sendResponse(1715, accept)]
[After]:{	if	G(respondToRequest(1715, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1715, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 1715, closed(A)))
					then	{	adoptz(respondToRequest(1715, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(1715, accept)
}


[Planbase]:{	skip
},
{	sendResponse(1715, accept)
}


[new scheduled]:[skip, sendResponse(1715, accept)]
[After]:{	skip
},
{	sendResponse(1715, accept)
}


[Planbase]:{	@ctenv(sendResponse(1715, accept),L1,0);
	SentResponse(accept, 1715)
}


[new scheduled]:[if G(acceptRequests(1715, V2)) then skip else if G(respondToRequest(1715, V2)) then skip else if G(acceptRequest(1715, V2)) then skip else if B(not receivedP(1, 1715, closed(A))) then adoptz(respondToRequest(1715, 50) : Infinite, priority 10), @ctenv(sendResponse(1715, accept),L1,0); SentResponse(accept, 1715)]
[After]:{	if	G(acceptRequests(1715, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(1715, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(1715, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 1715, closed(A)))
							then	{	adoptz(respondToRequest(1715, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	@ctenv(sendResponse(1715, accept),L1,0);
	SentResponse(accept, 1715)
}


a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 1.

org notification: Response [id=1715, response=accepted, clock=24, time=2015-06-03 17:53:51.588]
org notification: Response [id=1715, response=accepted, clock=24, time=2015-06-03 17:53:51.588]
[Planbase]:{	if	G(respondToRequest(1715, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1715, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 1715, closed(A)))
					then	{	adoptz(respondToRequest(1715, 50) : Infinite, priority 10)
						}
				}
		}
}


[new scheduled]:[if G(respondToRequest(1715, V2)) then skip else if G(acceptRequest(1715, V2)) then skip else if B(not receivedP(1, 1715, closed(A))) then adoptz(respondToRequest(1715, 50) : Infinite, priority 10)]
[After]:{	if	G(respondToRequest(1715, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1715, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 1715, closed(A)))
					then	{	adoptz(respondToRequest(1715, 50) : Infinite, priority 10)
						}
				}
		}
}


[Planbase]:{	if	G(acceptRequest(1715, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 1715, closed(A)))
			then	{	adoptz(respondToRequest(1715, 50) : Infinite, priority 10)
				}
		}
}


[new scheduled]:[if G(acceptRequest(1715, V2)) then skip else if B(not receivedP(1, 1715, closed(A))) then adoptz(respondToRequest(1715, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(1715, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 1715, closed(A)))
			then	{	adoptz(respondToRequest(1715, 50) : Infinite, priority 10)
				}
		}
}


[Planbase]:{	if	B(not receivedP(1, 1715, closed(A)))
	then	{	adoptz(respondToRequest(1715, 50) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(not receivedP(1, 1715, closed(A))) then adoptz(respondToRequest(1715, 50) : Infinite, priority 10)]
[After]:{	if	B(not receivedP(1, 1715, closed(A)))
	then	{	adoptz(respondToRequest(1715, 50) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=21, time=2015-06-03 17:53:51.932]
org notification: Time [clock=21, time=2015-06-03 17:53:51.932]
object notification: Time [clock=21, time=2015-06-03 17:53:51.932]
object notification: Time [clock=21, time=2015-06-03 17:53:51.932]
org notification: Time [clock=21, time=2015-06-03 17:53:51.932]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(21)
Event processed UpdateClock(21)
Event processed UpdateClock(21)
[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Position [subject=a20, id=null, cell=Cell [x=4, y=0], time=2015-06-03 17:53:54.86, clock=21]
org notification: Position [subject=a20, id=null, cell=Cell [x=4, y=0], time=2015-06-03 17:53:54.86, clock=21]
org notification: Position [subject=a20, id=null, cell=Cell [x=4, y=1], time=2015-06-03 17:53:56.145, clock=21]
org notification: Position [subject=a20, id=null, cell=Cell [x=4, y=1], time=2015-06-03 17:53:56.145, clock=21]
org notification: Time [clock=25, time=2015-06-03 17:53:56.179]
object notification: Time [clock=25, time=2015-06-03 17:53:56.179]
object notification: Time [clock=25, time=2015-06-03 17:53:56.179]
org notification: Time [clock=25, time=2015-06-03 17:53:56.179]
object notification: Time [clock=25, time=2015-06-03 17:53:56.179]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(25)
Event processed UpdateClock(25)
Event processed UpdateClock(25)
[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=22, time=2015-06-03 17:54:01.935]
object notification: Time [clock=22, time=2015-06-03 17:54:01.935]
org notification: Time [clock=22, time=2015-06-03 17:54:01.935]
object notification: Time [clock=22, time=2015-06-03 17:54:01.935]
object notification: Time [clock=22, time=2015-06-03 17:54:01.935]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(22)
Event processed UpdateClock(22)
Event processed UpdateClock(22)
[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=26, time=2015-06-03 17:54:06.181]
object notification: Time [clock=26, time=2015-06-03 17:54:06.181]
object notification: Time [clock=26, time=2015-06-03 17:54:06.181]
object notification: Time [clock=26, time=2015-06-03 17:54:06.181]
org notification: Time [clock=26, time=2015-06-03 17:54:06.181]
object notification: Points [subject=a40, time=2015-06-03 17:54:06.199, clock=26, value=600, id=null]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(26)
Event processed UpdateClock(26)
Event processed UpdatePoints(600)
Event processed UpdateClock(26)
[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


[Planbase]:{	UpdateClock(26)
},
{	UpdatePoints(600)
}


[new scheduled]:[UpdateClock(26), UpdatePoints(600)]
[After]:{	UpdateClock(26)
},
{	UpdatePoints(600)
}


[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=23, time=2015-06-03 17:54:11.938]
object notification: Time [clock=23, time=2015-06-03 17:54:11.938]
object notification: Time [clock=23, time=2015-06-03 17:54:11.938]
org notification: Time [clock=23, time=2015-06-03 17:54:11.938]
org notification: Time [clock=23, time=2015-06-03 17:54:11.938]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(23)
Event processed UpdateClock(23)
[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


Event processed UpdateClock(23)
[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=27, time=2015-06-03 17:54:16.185]
org notification: Time [clock=27, time=2015-06-03 17:54:16.185]
org notification: Time [clock=27, time=2015-06-03 17:54:16.185]
object notification: Time [clock=27, time=2015-06-03 17:54:16.185]
object notification: Time [clock=27, time=2015-06-03 17:54:16.185]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(27)
Event processed UpdateClock(27)
Event processed UpdateClock(27)
[Planbase]:{	UpdateClock(27)
}


[new scheduled]:[UpdateClock(27)]
[After]:{	UpdateClock(27)
}


[Planbase]:{	UpdateClock(27)
}


[new scheduled]:[UpdateClock(27)]
[After]:{	UpdateClock(27)
}


[Planbase]:{	UpdateClock(27)
}


[new scheduled]:[UpdateClock(27)]
[After]:{	UpdateClock(27)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=24, time=2015-06-03 17:54:21.942]
org notification: Time [clock=24, time=2015-06-03 17:54:21.942]
org notification: Time [clock=24, time=2015-06-03 17:54:21.942]
object notification: Time [clock=24, time=2015-06-03 17:54:21.942]
object notification: Time [clock=24, time=2015-06-03 17:54:21.942]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(24)
Event processed UpdateClock(24)
[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


Event processed UpdateClock(24)
[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=28, time=2015-06-03 17:54:26.188]
object notification: Time [clock=28, time=2015-06-03 17:54:26.188]
object notification: Time [clock=28, time=2015-06-03 17:54:26.188]
object notification: Time [clock=28, time=2015-06-03 17:54:26.188]
org notification: Time [clock=28, time=2015-06-03 17:54:26.188]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(28)
[Planbase]:{	UpdateClock(28)
}


[new scheduled]:[UpdateClock(28)]
[After]:{	UpdateClock(28)
}


Event processed UpdateClock(28)
Event processed UpdateClock(28)
[Planbase]:{	UpdateClock(28)
}


[new scheduled]:[UpdateClock(28)]
[After]:{	UpdateClock(28)
}


[Planbase]:{	UpdateClock(28)
}


[new scheduled]:[UpdateClock(28)]
[After]:{	UpdateClock(28)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=25, time=2015-06-03 17:54:31.945]
object notification: Time [clock=25, time=2015-06-03 17:54:31.945]
org notification: Time [clock=25, time=2015-06-03 17:54:31.945]
object notification: Time [clock=25, time=2015-06-03 17:54:31.945]
object notification: Time [clock=25, time=2015-06-03 17:54:31.945]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(25)
Event processed UpdateClock(25)
Event processed UpdateClock(25)
[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=29, time=2015-06-03 17:54:36.192]
org notification: Time [clock=29, time=2015-06-03 17:54:36.192]
object notification: Time [clock=29, time=2015-06-03 17:54:36.192]
object notification: Time [clock=29, time=2015-06-03 17:54:36.192]
org notification: Time [clock=29, time=2015-06-03 17:54:36.192]
object notification: Points [subject=a10, time=2015-06-03 17:54:36.209, clock=29, value=600, id=null]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(29)
Event processed UpdateClock(29)
Event processed UpdateClock(29)
Event processed UpdatePoints(600)
[Planbase]:{	UpdateClock(29)
}


[new scheduled]:[UpdateClock(29)]
[After]:{	UpdateClock(29)
}


[Planbase]:{	UpdateClock(29)
}


[new scheduled]:[UpdateClock(29)]
[After]:{	UpdateClock(29)
}


[Planbase]:{	UpdateClock(29)
},
{	UpdatePoints(600)
}


[new scheduled]:[UpdateClock(29), UpdatePoints(600)]
[After]:{	UpdateClock(29)
},
{	UpdatePoints(600)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=26, time=2015-06-03 17:54:41.948]
object notification: Time [clock=26, time=2015-06-03 17:54:41.948]
org notification: Time [clock=26, time=2015-06-03 17:54:41.948]
org notification: Time [clock=26, time=2015-06-03 17:54:41.948]
object notification: Time [clock=26, time=2015-06-03 17:54:41.948]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(26)
Event processed UpdateClock(26)
[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


Event processed UpdateClock(26)
[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=30, time=2015-06-03 17:54:46.195]
object notification: Time [clock=30, time=2015-06-03 17:54:46.195]
org notification: Time [clock=30, time=2015-06-03 17:54:46.195]
org notification: Time [clock=30, time=2015-06-03 17:54:46.195]
object notification: Time [clock=30, time=2015-06-03 17:54:46.195]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(30)
Event processed UpdateClock(30)
[Planbase]:{	UpdateClock(30)
}


[new scheduled]:[UpdateClock(30)]
[After]:{	UpdateClock(30)
}


Event processed UpdateClock(30)
[Planbase]:{	UpdateClock(30)
}


[new scheduled]:[UpdateClock(30)]
[After]:{	UpdateClock(30)
}


[Planbase]:{	UpdateClock(30)
}


[new scheduled]:[UpdateClock(30)]
[After]:{	UpdateClock(30)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=27, time=2015-06-03 17:54:51.951]
org notification: Time [clock=27, time=2015-06-03 17:54:51.951]
object notification: Time [clock=27, time=2015-06-03 17:54:51.951]
object notification: Time [clock=27, time=2015-06-03 17:54:51.951]
object notification: Time [clock=27, time=2015-06-03 17:54:51.951]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(27)
Event processed UpdateClock(27)
Event processed UpdateClock(27)
[Planbase]:{	UpdateClock(27)
}


[new scheduled]:[UpdateClock(27)]
[After]:{	UpdateClock(27)
}


[Planbase]:{	UpdateClock(27)
}


[new scheduled]:[UpdateClock(27)]
[After]:{	UpdateClock(27)
}


[Planbase]:{	UpdateClock(27)
}


[new scheduled]:[UpdateClock(27)]
[After]:{	UpdateClock(27)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=31, time=2015-06-03 17:54:56.199]
org notification: Time [clock=31, time=2015-06-03 17:54:56.199]
org notification: Time [clock=31, time=2015-06-03 17:54:56.199]
object notification: Time [clock=31, time=2015-06-03 17:54:56.199]
object notification: Time [clock=31, time=2015-06-03 17:54:56.199]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(31)
Event processed UpdateClock(31)
Event processed UpdateClock(31)
[Planbase]:{	UpdateClock(31)
}


[new scheduled]:[UpdateClock(31)]
[After]:{	UpdateClock(31)
}


[Planbase]:{	UpdateClock(31)
}


[new scheduled]:[UpdateClock(31)]
[After]:{	UpdateClock(31)
}


[Planbase]:{	UpdateClock(31)
}


[new scheduled]:[UpdateClock(31)]
[After]:{	UpdateClock(31)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


