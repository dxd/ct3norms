2015-06-03 21:23:47,717 CONFIG [com.gigaspaces.logger] - Log file: /Users/dxd/git/ct3/logs/2015-06-03~21.23-gigaspaces-service-192.168.1.102-65190.log
-------------------------last log tuples start--------------------------------
Group [name=g, ra=a10, type=raaa, clock=0, time=2015-06-03 21:19:53.696]
Tile [id=null, cell=Cell [x=3, y=0], subject=blue, time=2015-06-03 21:19:53.56, clock=0]
Goal [id=null, cell=Cell [x=4, y=2], agent=null, time=2015-06-03 21:19:53.639, clock=0]
Prohibition [subject=a40, prohibition=[moveTooFast(a40)], sanction=[reduce(a40, 300)], clock=1, time=2015-06-03 21:19:54.107]
Time [clock=11, time=2015-06-03 21:21:30.886]
Tile [id=null, cell=Cell [x=2, y=1], subject=brown, time=2015-06-03 21:19:53.546, clock=0]
Time [clock=13, time=2015-06-03 21:21:50.893]
Prohibition [subject=a30, prohibition=[moveTooFast(a30)], sanction=[reduce(a30, 300)], clock=1, time=2015-06-03 21:19:54.104]
Time [clock=4, time=2015-06-03 21:20:20.861]
Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-06-03 21:19:53.566, clock=0]
Prohibition [subject=a10, prohibition=[rejectRequests(a10)], sanction=[reduce(a10, 200)], clock=1, time=2015-06-03 21:19:53.994]
Time [clock=3, time=2015-06-03 21:20:10.858]
Time [clock=6, time=2015-06-03 21:20:40.867]
Time [clock=17, time=2015-06-03 21:22:30.903]
Time [clock=8, time=2015-06-03 21:21:00.873]
Time [clock=19, time=2015-06-03 21:22:50.908]
Prohibition [subject=a10, prohibition=[moveTooFast(a10)], sanction=[reduce(a10, 300)], clock=1, time=2015-06-03 21:19:54.082]
Time [clock=10, time=2015-06-03 21:21:20.882]
Time [clock=15, time=2015-06-03 21:22:10.898]
Time [clock=22, time=2015-06-03 21:23:20.916]
Time [clock=21, time=2015-06-03 21:23:10.913]
Time [clock=18, time=2015-06-03 21:22:40.906]
Time [clock=16, time=2015-06-03 21:22:20.9]
Time [clock=14, time=2015-06-03 21:22:00.895]
Time [clock=12, time=2015-06-03 21:21:40.89]
Prohibition [subject=a30, prohibition=[rejectRequests(a30)], sanction=[reduce(a30, 200)], clock=1, time=2015-06-03 21:19:54.051]
Time [clock=23, time=2015-06-03 21:23:30.921]
Time [clock=20, time=2015-06-03 21:23:00.91]
Time [clock=2, time=2015-06-03 21:20:00.855]
Time [clock=1, time=2015-06-03 21:19:50.839]
Time [clock=5, time=2015-06-03 21:20:30.865]
Prohibition [subject=a20, prohibition=[rejectRequests(a20)], sanction=[reduce(a20, 200)], clock=1, time=2015-06-03 21:19:54.004]
Time [clock=7, time=2015-06-03 21:20:50.87]
Time [clock=9, time=2015-06-03 21:21:10.879]
Tile [id=null, cell=Cell [x=3, y=3], subject=brown, time=2015-06-03 21:19:53.568, clock=0]
Prohibition [subject=a40, prohibition=[rejectRequests(a40)], sanction=[reduce(a40, 200)], clock=1, time=2015-06-03 21:19:54.078]
Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-06-03 21:19:53.555, clock=0]
Prohibition [subject=a20, prohibition=[moveTooFast(a20)], sanction=[reduce(a20, 300)], clock=1, time=2015-06-03 21:19:54.099]
Tile [id=null, cell=Cell [x=5, y=2], subject=white, time=2015-06-03 21:19:53.597, clock=0]
Tile [id=null, cell=Cell [x=5, y=3], subject=white, time=2015-06-03 21:19:53.599, clock=0]
Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-06-03 21:19:53.579, clock=0]
Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-06-03 21:19:53.583, clock=0]
Tile [id=null, cell=Cell [x=4, y=3], subject=white, time=2015-06-03 21:19:53.585, clock=0]
Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-06-03 21:19:53.587, clock=0]
Tile [id=null, cell=Cell [x=4, y=5], subject=white, time=2015-06-03 21:19:53.59, clock=0]
Tile [id=null, cell=Cell [x=5, y=0], subject=blue, time=2015-06-03 21:19:53.592, clock=0]
Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-06-03 21:19:53.601, clock=0]
Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-06-03 21:19:53.574, clock=0]
Tile [id=null, cell=Cell [x=4, y=0], subject=blue, time=2015-06-03 21:19:53.577, clock=0]
Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-06-03 21:19:53.594, clock=0]
Tile [id=null, cell=Cell [x=5, y=5], subject=blue, time=2015-06-03 21:19:53.605, clock=0]
Tile [id=null, cell=Cell [x=0, y=1], subject=yellow, time=2015-06-03 21:19:53.503, clock=0]
Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-06-03 21:19:53.514, clock=0]
Tile [id=null, cell=Cell [x=0, y=5], subject=yellow, time=2015-06-03 21:19:53.517, clock=0]
Tile [id=null, cell=Cell [x=1, y=0], subject=yellow, time=2015-06-03 21:19:53.52, clock=0]
Tile [id=null, cell=Cell [x=2, y=3], subject=brown, time=2015-06-03 21:19:53.551, clock=0]
Tile [id=null, cell=Cell [x=0, y=3], subject=white, time=2015-06-03 21:19:53.51, clock=0]
Tile [id=null, cell=Cell [x=0, y=0], subject=white, time=2015-06-03 21:19:53.463, clock=0]
Tile [id=null, cell=Cell [x=1, y=1], subject=brown, time=2015-06-03 21:19:53.525, clock=0]
Tile [id=null, cell=Cell [x=0, y=2], subject=yellow, time=2015-06-03 21:19:53.507, clock=0]
Tile [id=null, cell=Cell [x=1, y=3], subject=brown, time=2015-06-03 21:19:53.533, clock=0]
Tile [id=null, cell=Cell [x=1, y=5], subject=white, time=2015-06-03 21:19:53.541, clock=0]
Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-06-03 21:19:53.53, clock=0]
Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-06-03 21:19:53.557, clock=0]
Tile [id=null, cell=Cell [x=3, y=1], subject=blue, time=2015-06-03 21:19:53.564, clock=0]
Tile [id=null, cell=Cell [x=1, y=4], subject=yellow, time=2015-06-03 21:19:53.538, clock=0]
Tile [id=null, cell=Cell [x=3, y=4], subject=white, time=2015-06-03 21:19:53.571, clock=0]
Tile [id=null, cell=Cell [x=2, y=0], subject=yellow, time=2015-06-03 21:19:53.543, clock=0]
Tile [id=null, cell=Cell [x=2, y=2], subject=blue, time=2015-06-03 21:19:53.549, clock=0]
-------------------------last log tuples end----------------------------------
[CTAH] started agent 10
[CTAH] Added a new agent to the game by the name of 10.
[ENV] added agent a10
[CTAH] started agent 30
[CTAH] Added a new agent to the game by the name of 30.
[ENV] added agent a30
[CTAH] started agent 40
[CTAH] Added a new agent to the game by the name of 40.
[ENV] added agent a40
object notification: Time [clock=1, time=2015-06-03 21:23:59.526]
object notification: Time [clock=1, time=2015-06-03 21:23:59.526]
org notification: Time [clock=1, time=2015-06-03 21:23:59.526]
object notification: Time [clock=1, time=2015-06-03 21:23:59.526]
object notification: Time [clock=2, time=2015-06-03 21:24:09.547]
object notification: Time [clock=2, time=2015-06-03 21:24:09.547]
object notification: Time [clock=2, time=2015-06-03 21:24:09.547]
org notification: Time [clock=2, time=2015-06-03 21:24:09.547]
object notification: Time [clock=3, time=2015-06-03 21:24:19.551]
object notification: Time [clock=3, time=2015-06-03 21:24:19.551]
object notification: Time [clock=3, time=2015-06-03 21:24:19.551]
org notification: Time [clock=3, time=2015-06-03 21:24:19.551]
object notification: Time [clock=4, time=2015-06-03 21:24:29.554]
object notification: Time [clock=4, time=2015-06-03 21:24:29.554]
org notification: Time [clock=4, time=2015-06-03 21:24:29.554]
object notification: Time [clock=4, time=2015-06-03 21:24:29.554]
org notification: Time [clock=5, time=2015-06-03 21:24:39.557]
object notification: Time [clock=5, time=2015-06-03 21:24:39.557]
object notification: Time [clock=5, time=2015-06-03 21:24:39.557]
object notification: Time [clock=5, time=2015-06-03 21:24:39.557]
object notification: Time [clock=6, time=2015-06-03 21:24:49.56]
org notification: Time [clock=6, time=2015-06-03 21:24:49.56]
object notification: Time [clock=6, time=2015-06-03 21:24:49.56]
object notification: Time [clock=6, time=2015-06-03 21:24:49.56]
#########################Game started
#########################Game started
#########################Game started
[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


Event processed UpdateClock(1)
Event processed UpdateClock(1)
Event processed UpdateClock(2)
Event processed UpdateClock(2)
Event processed UpdateClock(3)
Event processed UpdateClock(3)
Event processed UpdateClock(4)
Event processed UpdateClock(4)
Event processed UpdateClock(5)
Event processed UpdateClock(5)
Event processed UpdateClock(6)
Event processed UpdateClock(6)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateClock(1)
Event processed UpdateClock(2)
Event processed UpdateClock(3)
Event processed UpdateClock(4)
Event processed UpdateClock(5)
Event processed UpdateClock(6)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	UpdateClock(3)
},
{	UpdateClock(4)
},
{	UpdateClock(5)
},
{	UpdateClock(6)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1), UpdateClock(2), UpdateClock(3), UpdateClock(4), UpdateClock(5), UpdateClock(6), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	UpdateClock(3)
},
{	UpdateClock(4)
},
{	UpdateClock(5)
},
{	UpdateClock(6)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@6917ffc5
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	UpdateClock(3)
},
{	UpdateClock(4)
},
{	UpdateClock(5)
},
{	UpdateClock(6)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1), UpdateClock(2), UpdateClock(3), UpdateClock(4), UpdateClock(5), UpdateClock(6), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	UpdateClock(3)
},
{	UpdateClock(4)
},
{	UpdateClock(5)
},
{	UpdateClock(6)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	UpdateClock(3)
},
{	UpdateClock(4)
},
{	UpdateClock(5)
},
{	UpdateClock(6)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1), UpdateClock(2), UpdateClock(3), UpdateClock(4), UpdateClock(5), UpdateClock(6), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	UpdateClock(2)
},
{	UpdateClock(3)
},
{	UpdateClock(4)
},
{	UpdateClock(5)
},
{	UpdateClock(6)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@97dabf4
[CTAH] The created APLList : [game_initialized]
[CTAH] Array of Terms: [Lapapl.data.Term;@6c9d2223
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is 
org notification: Tile [id=null, cell=Cell [x=0, y=0], subject=white, time=2015-06-03 21:24:53.707, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=white, time=2015-06-03 21:24:53.707, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=white, time=2015-06-03 21:24:53.707, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=white, time=2015-06-03 21:24:53.707, clock=0]
setPhases in ClientGameStatus, the current phase is Norm Phase
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=yellow, time=2015-06-03 21:24:53.759, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=yellow, time=2015-06-03 21:24:53.759, clock=0]
setPhases in ClientGameStatus, the current phase is 
org notification: Tile [id=null, cell=Cell [x=0, y=1], subject=yellow, time=2015-06-03 21:24:53.759, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=yellow, time=2015-06-03 21:24:53.759, clock=0]
setPhases in ClientGameStatus, the current phase is Norm Phase
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=brown, time=2015-06-03 21:24:53.762, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=brown, time=2015-06-03 21:24:53.762, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=brown, time=2015-06-03 21:24:53.762, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=2], subject=brown, time=2015-06-03 21:24:53.762, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=brown, time=2015-06-03 21:24:53.769, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=brown, time=2015-06-03 21:24:53.769, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=brown, time=2015-06-03 21:24:53.769, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=3], subject=brown, time=2015-06-03 21:24:53.769, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-06-03 21:24:53.773, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-06-03 21:24:53.773, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-06-03 21:24:53.773, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=white, time=2015-06-03 21:24:53.773, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=brown, time=2015-06-03 21:24:53.778, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=5], subject=brown, time=2015-06-03 21:24:53.778, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=brown, time=2015-06-03 21:24:53.778, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=brown, time=2015-06-03 21:24:53.778, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 21:24:53.783, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 21:24:53.783, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 21:24:53.783, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-06-03 21:24:53.783, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=white, time=2015-06-03 21:24:53.787, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=white, time=2015-06-03 21:24:53.787, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=1], subject=white, time=2015-06-03 21:24:53.787, clock=0]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=white, time=2015-06-03 21:24:53.787, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=blue, time=2015-06-03 21:24:53.791, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=blue, time=2015-06-03 21:24:53.791, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=blue, time=2015-06-03 21:24:53.791, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=2], subject=blue, time=2015-06-03 21:24:53.791, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-06-03 21:24:53.801, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-06-03 21:24:53.801, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-06-03 21:24:53.801, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-06-03 21:24:53.801, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=yellow, time=2015-06-03 21:24:53.808, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=yellow, time=2015-06-03 21:24:53.808, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=yellow, time=2015-06-03 21:24:53.808, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=4], subject=yellow, time=2015-06-03 21:24:53.808, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=blue, time=2015-06-03 21:24:53.815, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=5], subject=blue, time=2015-06-03 21:24:53.815, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=blue, time=2015-06-03 21:24:53.815, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=blue, time=2015-06-03 21:24:53.815, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=yellow, time=2015-06-03 21:24:53.82, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=yellow, time=2015-06-03 21:24:53.82, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=0], subject=yellow, time=2015-06-03 21:24:53.82, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=yellow, time=2015-06-03 21:24:53.82, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=yellow, time=2015-06-03 21:24:53.824, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=1], subject=yellow, time=2015-06-03 21:24:53.824, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=yellow, time=2015-06-03 21:24:53.824, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=yellow, time=2015-06-03 21:24:53.824, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=blue, time=2015-06-03 21:24:53.829, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=2], subject=blue, time=2015-06-03 21:24:53.829, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=blue, time=2015-06-03 21:24:53.829, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=blue, time=2015-06-03 21:24:53.829, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=brown, time=2015-06-03 21:24:53.833, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=brown, time=2015-06-03 21:24:53.833, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=brown, time=2015-06-03 21:24:53.833, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=3], subject=brown, time=2015-06-03 21:24:53.833, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=brown, time=2015-06-03 21:24:53.838, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=brown, time=2015-06-03 21:24:53.838, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=4], subject=brown, time=2015-06-03 21:24:53.838, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=brown, time=2015-06-03 21:24:53.838, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=white, time=2015-06-03 21:24:53.843, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=white, time=2015-06-03 21:24:53.843, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=white, time=2015-06-03 21:24:53.843, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=5], subject=white, time=2015-06-03 21:24:53.843, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-06-03 21:24:53.848, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-06-03 21:24:53.848, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-06-03 21:24:53.848, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-06-03 21:24:53.848, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-03 21:24:53.853, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-03 21:24:53.853, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-03 21:24:53.853, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=1], subject=brown, time=2015-06-03 21:24:53.853, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-06-03 21:24:53.857, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-06-03 21:24:53.857, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-06-03 21:24:53.857, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=white, time=2015-06-03 21:24:53.861, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=white, time=2015-06-03 21:24:53.861, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=white, time=2015-06-03 21:24:53.861, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-06-03 21:24:53.857, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-06-03 21:24:53.866, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-06-03 21:24:53.866, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-06-03 21:24:53.866, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=3], subject=white, time=2015-06-03 21:24:53.861, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=white, time=2015-06-03 21:24:53.872, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=white, time=2015-06-03 21:24:53.872, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=white, time=2015-06-03 21:24:53.872, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-06-03 21:24:53.866, clock=0]
Event processed UpdateTile(white, 0, 0)
Event processed UpdateTile(yellow, 0, 1)
org notification: Tile [id=null, cell=Cell [x=3, y=5], subject=white, time=2015-06-03 21:24:53.872, clock=0]
Event processed UpdateTile(brown, 0, 2)
Event processed UpdateTile(brown, 0, 3)
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=yellow, time=2015-06-03 21:24:53.892, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=yellow, time=2015-06-03 21:24:53.892, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=yellow, time=2015-06-03 21:24:53.892, clock=0]
Event processed UpdateTile(white, 0, 4)
org notification: Tile [id=null, cell=Cell [x=4, y=0], subject=yellow, time=2015-06-03 21:24:53.892, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=brown, time=2015-06-03 21:24:53.896, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=brown, time=2015-06-03 21:24:53.896, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=brown, time=2015-06-03 21:24:53.896, clock=0]
Event processed UpdateTile(brown, 0, 5)
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=blue, time=2015-06-03 21:24:53.902, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=blue, time=2015-06-03 21:24:53.902, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=blue, time=2015-06-03 21:24:53.902, clock=0]
Event processed UpdateTile(brown, 1, 0)
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=brown, time=2015-06-03 21:24:53.905, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=brown, time=2015-06-03 21:24:53.905, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=blue, time=2015-06-03 21:24:53.912, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=brown, time=2015-06-03 21:24:53.905, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=blue, time=2015-06-03 21:24:53.912, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=blue, time=2015-06-03 21:24:53.912, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=1], subject=brown, time=2015-06-03 21:24:53.896, clock=0]
Event processed UpdateTile(white, 1, 1)
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=brown, time=2015-06-03 21:24:53.921, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=brown, time=2015-06-03 21:24:53.921, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=brown, time=2015-06-03 21:24:53.921, clock=0]
Event processed UpdateTile(blue, 1, 2)
org notification: Tile [id=null, cell=Cell [x=4, y=2], subject=blue, time=2015-06-03 21:24:53.902, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-06-03 21:24:53.925, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-06-03 21:24:53.925, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-06-03 21:24:53.925, clock=0]
Event processed UpdateTile(white, 1, 3)
Event processed UpdateTile(yellow, 1, 4)
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=yellow, time=2015-06-03 21:24:53.932, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=3], subject=brown, time=2015-06-03 21:24:53.905, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=yellow, time=2015-06-03 21:24:53.932, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=yellow, time=2015-06-03 21:24:53.932, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-06-03 21:24:53.937, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-06-03 21:24:53.937, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-06-03 21:24:53.937, clock=0]
Event processed UpdateTile(blue, 1, 5)
org notification: Tile [id=null, cell=Cell [x=4, y=4], subject=blue, time=2015-06-03 21:24:53.912, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=white, time=2015-06-03 21:24:53.941, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=white, time=2015-06-03 21:24:53.941, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=white, time=2015-06-03 21:24:53.941, clock=0]
Event processed UpdateTile(yellow, 2, 0)
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=white, time=2015-06-03 21:24:53.945, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=white, time=2015-06-03 21:24:53.945, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=white, time=2015-06-03 21:24:53.945, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=5], subject=brown, time=2015-06-03 21:24:53.921, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-03 21:24:53.949, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-03 21:24:53.949, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-03 21:24:53.949, clock=0]
Event processed UpdateTile(yellow, 2, 1)
Event processed UpdateTile(blue, 2, 2)
org notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-06-03 21:24:53.925, clock=0]
Event processed UpdateTile(brown, 2, 3)
org notification: Tile [id=null, cell=Cell [x=5, y=1], subject=yellow, time=2015-06-03 21:24:53.932, clock=0]
Event processed UpdateTile(brown, 2, 4)
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


Event processed UpdateTile(white, 2, 5)
org notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-06-03 21:24:53.937, clock=0]
Event processed UpdateTile(white, 3, 0)
org notification: Tile [id=null, cell=Cell [x=5, y=3], subject=white, time=2015-06-03 21:24:53.941, clock=0]
Event processed UpdateTile(brown, 3, 1)
Event processed UpdateTile(blue, 3, 2)
org notification: Tile [id=null, cell=Cell [x=5, y=4], subject=white, time=2015-06-03 21:24:53.945, clock=0]
Event processed UpdateTile(white, 3, 3)
org notification: Tile [id=null, cell=Cell [x=5, y=5], subject=white, time=2015-06-03 21:24:53.949, clock=0]
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(white, 3, 5)
org notification: Goal [id=null, cell=Cell [x=1, y=2], agent=null, time=2015-06-03 21:24:54.019, clock=0]
Event processed UpdateTile(yellow, 4, 0)
Event processed UpdateTile(brown, 4, 1)
Event processed UpdateTile(blue, 4, 2)
Event processed UpdateTile(brown, 4, 3)
Event processed UpdateTile(blue, 4, 4)
Event processed UpdateTile(brown, 4, 5)
Event processed UpdateTile(yellow, 5, 0)
Event processed UpdateTile(yellow, 5, 1)
Event processed UpdateTile(brown, 5, 2)
Event processed UpdateTile(white, 5, 3)
org notification: Group [name=g, ra=a10, type=raaa, clock=0, time=2015-06-03 21:24:54.116]
object notification: Prohibition [subject=a10, prohibition=[rejectRequests(a10)], sanction=[reduce(a10, 200)], clock=6, time=2015-06-03 21:24:54.169]
object notification: Obligation [subject=a10, obligation=[surround(1, 2)], sanction=[reduce(g, 700)], deadline=28, time=2015-06-03 21:24:54.136, clock=6]
object notification: Prohibition [subject=a30, prohibition=[rejectRequests(a30)], sanction=[reduce(a30, 200)], clock=6, time=2015-06-03 21:24:54.183]
object notification: Prohibition [subject=a40, prohibition=[rejectRequests(a40)], sanction=[reduce(a40, 200)], clock=6, time=2015-06-03 21:24:54.194]
Event processed UpdateTile(white, 5, 4)
object notification: Prohibition [subject=a10, prohibition=[moveTooFast(a10)], sanction=[reduce(a10, 300)], clock=6, time=2015-06-03 21:24:54.211]
object notification: Prohibition [subject=a30, prohibition=[moveTooFast(a30)], sanction=[reduce(a30, 300)], clock=6, time=2015-06-03 21:24:54.233]
object notification: Prohibition [subject=a40, prohibition=[moveTooFast(a40)], sanction=[reduce(a40, 300)], clock=6, time=2015-06-03 21:24:54.253]
Event processed UpdateTile(white, 5, 5)
Event processed adoptProhibition(rejectRequests(a10), reduce(a10, 200))
Event processed adoptObligation(surround(1, 2), 28, reduce(g, 700))
Event processed adoptProhibition(moveTooFast(a10), reduce(a10, 300))
Event processed UpdateTile(white, 0, 0)
Event processed UpdateTile(yellow, 0, 1)
Event processed UpdateTile(brown, 0, 2)
Event processed UpdateTile(brown, 0, 3)
Event processed UpdateTile(white, 0, 4)
Event processed UpdateTile(brown, 0, 5)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(white, 1, 1)
Event processed UpdateTile(white, 0, 0)
Event processed UpdateTile(yellow, 0, 1)
Event processed UpdateTile(brown, 0, 2)
Event processed UpdateTile(brown, 0, 3)
Event processed UpdateTile(blue, 1, 2)
Event processed UpdateTile(white, 0, 4)
Event processed UpdateTile(brown, 0, 5)
Event processed UpdateTile(white, 1, 3)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(yellow, 1, 4)
Event processed UpdateTile(white, 1, 1)
Event processed UpdateTile(blue, 1, 2)
Event processed UpdateTile(blue, 1, 5)
Event processed UpdateTile(white, 1, 3)
Event processed UpdateTile(yellow, 2, 0)
Event processed UpdateTile(yellow, 1, 4)
#########################Game Initialized
AGENT Thread-16: current phase name: Norm Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
Event processed UpdateTile(yellow, 2, 1)
Event processed UpdateTile(blue, 1, 5)
#########################Game Initialized
AGENT Thread-12: current phase name: Norm Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
Event processed UpdateTile(blue, 2, 2)
Event processed UpdateTile(yellow, 2, 0)
#########################Game Initialized
AGENT Thread-14: current phase name: Norm Phase
we have 0 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
Event processed UpdateTile(brown, 2, 3)
Event processed UpdateTile(yellow, 2, 1)
Event processed UpdateTile(brown, 2, 4)
Event processed UpdateTile(blue, 2, 2)
Event processed UpdateTile(brown, 2, 3)
Event processed UpdateTile(white, 2, 5)
Event processed UpdateTile(brown, 2, 4)
Event processed UpdateTile(white, 3, 0)
Event processed UpdateTile(white, 2, 5)
Event processed UpdateTile(brown, 3, 1)
Event processed UpdateTile(white, 3, 0)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(brown, 3, 1)
[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(yellow, 0, 1)
},
{	UpdateTile(brown, 0, 2)
},
{	UpdateTile(brown, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(brown, 0, 5)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(yellow, 1, 4)
},
{	UpdateTile(blue, 1, 5)
},
{	UpdateTile(yellow, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(blue, 2, 2)
},
{	UpdateTile(brown, 2, 3)
},
{	UpdateTile(brown, 2, 4)
},
{	UpdateTile(white, 2, 5)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(white, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(white, 3, 5)
},
{	UpdateTile(yellow, 4, 0)
},
{	UpdateTile(brown, 4, 1)
},
{	UpdateTile(blue, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(blue, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(yellow, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(white, 5, 3)
},
{	UpdateTile(white, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	adoptProhibition(rejectRequests(a10), reduce(a10, 200))
},
{	adoptObligation(surround(1, 2), 28, reduce(g, 700))
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized), UpdateTile(white, 0, 0), UpdateTile(yellow, 0, 1), UpdateTile(brown, 0, 2), UpdateTile(brown, 0, 3), UpdateTile(white, 0, 4), UpdateTile(brown, 0, 5), UpdateTile(brown, 1, 0), UpdateTile(white, 1, 1), UpdateTile(blue, 1, 2), UpdateTile(white, 1, 3), UpdateTile(yellow, 1, 4), UpdateTile(blue, 1, 5), UpdateTile(yellow, 2, 0), UpdateTile(yellow, 2, 1), UpdateTile(blue, 2, 2), UpdateTile(brown, 2, 3), UpdateTile(brown, 2, 4), UpdateTile(white, 2, 5), UpdateTile(white, 3, 0), UpdateTile(brown, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(white, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(white, 3, 5), UpdateTile(yellow, 4, 0), UpdateTile(brown, 4, 1), UpdateTile(blue, 4, 2), UpdateTile(brown, 4, 3), UpdateTile(blue, 4, 4), UpdateTile(brown, 4, 5), UpdateTile(yellow, 5, 0), UpdateTile(yellow, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(white, 5, 3), UpdateTile(white, 5, 4), UpdateTile(white, 5, 5), adoptProhibition(rejectRequests(a10), reduce(a10, 200)), adoptObligation(surround(1, 2), 28, reduce(g, 700)), adoptProhibition(moveTooFast(a10), reduce(a10, 300))]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(yellow, 0, 1)
},
{	UpdateTile(brown, 0, 2)
},
{	UpdateTile(brown, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(brown, 0, 5)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(yellow, 1, 4)
},
{	UpdateTile(blue, 1, 5)
},
{	UpdateTile(yellow, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(blue, 2, 2)
},
{	UpdateTile(brown, 2, 3)
},
{	UpdateTile(brown, 2, 4)
},
{	UpdateTile(white, 2, 5)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(white, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(white, 3, 5)
},
{	UpdateTile(yellow, 4, 0)
},
{	UpdateTile(brown, 4, 1)
},
{	UpdateTile(blue, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(blue, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(yellow, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(white, 5, 3)
},
{	UpdateTile(white, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	adoptProhibition(rejectRequests(a10), reduce(a10, 200))
},
{	adoptObligation(surround(1, 2), 28, reduce(g, 700))
},
{	adoptProhibition(moveTooFast(a10), reduce(a10, 300))
}


Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(white, 3, 3)
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(white, 3, 3)
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(white, 3, 5)
Event processed UpdateTile(yellow, 4, 0)
Event processed UpdateTile(white, 3, 5)
Event processed UpdateTile(brown, 4, 1)
Event processed UpdateTile(yellow, 4, 0)
Event processed UpdateTile(blue, 4, 2)
Event processed UpdateTile(brown, 4, 1)
Event processed UpdateTile(brown, 4, 3)
Event processed UpdateTile(blue, 4, 2)
Event processed UpdateTile(blue, 4, 4)
Event processed UpdateTile(brown, 4, 3)
Event processed UpdateTile(brown, 4, 5)
Event processed UpdateTile(blue, 4, 4)
Event processed UpdateTile(yellow, 5, 0)
Event processed UpdateTile(brown, 4, 5)
Event processed UpdateTile(yellow, 5, 1)
Event processed UpdateTile(yellow, 5, 0)
Event processed UpdateTile(brown, 5, 2)
Event processed UpdateTile(yellow, 5, 1)
Event processed UpdateTile(white, 5, 3)
Event processed UpdateTile(brown, 5, 2)
Event processed UpdateTile(white, 5, 4)
Event processed UpdateTile(white, 5, 5)
Event processed UpdateTile(white, 5, 3)
Event processed UpdateTile(white, 5, 4)
Event processed adoptProhibition(rejectRequests(a30), reduce(a30, 200))
Event processed UpdateTile(white, 5, 5)
Event processed adoptProhibition(rejectRequests(a40), reduce(a40, 200))
Event processed adoptProhibition(moveTooFast(a40), reduce(a40, 300))
Event processed adoptProhibition(moveTooFast(a30), reduce(a30, 300))
[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	adopta(surround(1, 2, 700) : 3 Jun 2015 20:41:34 GMT, priority 10)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos, AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), adopta(surround(1, 2, 700) : 3 Jun 2015 20:41:34 GMT, priority 10), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	adopta(surround(1, 2, 700) : 3 Jun 2015 20:41:34 GMT, priority 10)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


obligation to be adopted: surround(1, 2, 700) : 3 Jun 2015 20:41:34 GMT, priority 10
[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(yellow, 0, 1)
},
{	UpdateTile(brown, 0, 2)
},
{	UpdateTile(brown, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(brown, 0, 5)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(yellow, 1, 4)
},
{	UpdateTile(blue, 1, 5)
},
{	UpdateTile(yellow, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(blue, 2, 2)
},
{	UpdateTile(brown, 2, 3)
},
{	UpdateTile(brown, 2, 4)
},
{	UpdateTile(white, 2, 5)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(white, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(white, 3, 5)
},
{	UpdateTile(yellow, 4, 0)
},
{	UpdateTile(brown, 4, 1)
},
{	UpdateTile(blue, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(blue, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(yellow, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(white, 5, 3)
},
{	UpdateTile(white, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	adoptProhibition(rejectRequests(a40), reduce(a40, 200))
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
}


[new scheduled]:[Initialize, GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, UpdateTile(white, 0, 0), UpdateTile(yellow, 0, 1), UpdateTile(brown, 0, 2), UpdateTile(brown, 0, 3), UpdateTile(white, 0, 4), UpdateTile(brown, 0, 5), UpdateTile(brown, 1, 0), UpdateTile(white, 1, 1), UpdateTile(blue, 1, 2), UpdateTile(white, 1, 3), UpdateTile(yellow, 1, 4), UpdateTile(blue, 1, 5), UpdateTile(yellow, 2, 0), UpdateTile(yellow, 2, 1), UpdateTile(blue, 2, 2), UpdateTile(brown, 2, 3), UpdateTile(brown, 2, 4), UpdateTile(white, 2, 5), UpdateTile(white, 3, 0), UpdateTile(brown, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(white, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(white, 3, 5), UpdateTile(yellow, 4, 0), UpdateTile(brown, 4, 1), UpdateTile(blue, 4, 2), UpdateTile(brown, 4, 3), UpdateTile(blue, 4, 4), UpdateTile(brown, 4, 5), UpdateTile(yellow, 5, 0), UpdateTile(yellow, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(white, 5, 3), UpdateTile(white, 5, 4), UpdateTile(white, 5, 5), adoptProhibition(rejectRequests(a40), reduce(a40, 200)), adoptProhibition(moveTooFast(a40), reduce(a40, 300))]
[After]:{	Initialize
},
{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(yellow, 0, 1)
},
{	UpdateTile(brown, 0, 2)
},
{	UpdateTile(brown, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(brown, 0, 5)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(yellow, 1, 4)
},
{	UpdateTile(blue, 1, 5)
},
{	UpdateTile(yellow, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(blue, 2, 2)
},
{	UpdateTile(brown, 2, 3)
},
{	UpdateTile(brown, 2, 4)
},
{	UpdateTile(white, 2, 5)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(white, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(white, 3, 5)
},
{	UpdateTile(yellow, 4, 0)
},
{	UpdateTile(brown, 4, 1)
},
{	UpdateTile(blue, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(blue, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(yellow, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(white, 5, 3)
},
{	UpdateTile(white, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	adoptProhibition(rejectRequests(a40), reduce(a40, 200))
},
{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(yellow, 0, 1)
},
{	UpdateTile(brown, 0, 2)
},
{	UpdateTile(brown, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(brown, 0, 5)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(yellow, 1, 4)
},
{	UpdateTile(blue, 1, 5)
},
{	UpdateTile(yellow, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(blue, 2, 2)
},
{	UpdateTile(brown, 2, 3)
},
{	UpdateTile(brown, 2, 4)
},
{	UpdateTile(white, 2, 5)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(white, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(white, 3, 5)
},
{	UpdateTile(yellow, 4, 0)
},
{	UpdateTile(brown, 4, 1)
},
{	UpdateTile(blue, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(blue, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(yellow, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(white, 5, 3)
},
{	UpdateTile(white, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	adoptProhibition(rejectRequests(a30), reduce(a30, 200))
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized), UpdateTile(white, 0, 0), UpdateTile(yellow, 0, 1), UpdateTile(brown, 0, 2), UpdateTile(brown, 0, 3), UpdateTile(white, 0, 4), UpdateTile(brown, 0, 5), UpdateTile(brown, 1, 0), UpdateTile(white, 1, 1), UpdateTile(blue, 1, 2), UpdateTile(white, 1, 3), UpdateTile(yellow, 1, 4), UpdateTile(blue, 1, 5), UpdateTile(yellow, 2, 0), UpdateTile(yellow, 2, 1), UpdateTile(blue, 2, 2), UpdateTile(brown, 2, 3), UpdateTile(brown, 2, 4), UpdateTile(white, 2, 5), UpdateTile(white, 3, 0), UpdateTile(brown, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(white, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(white, 3, 5), UpdateTile(yellow, 4, 0), UpdateTile(brown, 4, 1), UpdateTile(blue, 4, 2), UpdateTile(brown, 4, 3), UpdateTile(blue, 4, 4), UpdateTile(brown, 4, 5), UpdateTile(yellow, 5, 0), UpdateTile(yellow, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(white, 5, 3), UpdateTile(white, 5, 4), UpdateTile(white, 5, 5), adoptProhibition(rejectRequests(a30), reduce(a30, 200)), adoptProhibition(moveTooFast(a30), reduce(a30, 300))]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
},
{	UpdateTile(white, 0, 0)
},
{	UpdateTile(yellow, 0, 1)
},
{	UpdateTile(brown, 0, 2)
},
{	UpdateTile(brown, 0, 3)
},
{	UpdateTile(white, 0, 4)
},
{	UpdateTile(brown, 0, 5)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(white, 1, 1)
},
{	UpdateTile(blue, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(yellow, 1, 4)
},
{	UpdateTile(blue, 1, 5)
},
{	UpdateTile(yellow, 2, 0)
},
{	UpdateTile(yellow, 2, 1)
},
{	UpdateTile(blue, 2, 2)
},
{	UpdateTile(brown, 2, 3)
},
{	UpdateTile(brown, 2, 4)
},
{	UpdateTile(white, 2, 5)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(brown, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(white, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(white, 3, 5)
},
{	UpdateTile(yellow, 4, 0)
},
{	UpdateTile(brown, 4, 1)
},
{	UpdateTile(blue, 4, 2)
},
{	UpdateTile(brown, 4, 3)
},
{	UpdateTile(blue, 4, 4)
},
{	UpdateTile(brown, 4, 5)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(yellow, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(white, 5, 3)
},
{	UpdateTile(white, 5, 4)
},
{	UpdateTile(white, 5, 5)
},
{	adoptProhibition(rejectRequests(a30), reduce(a30, 200))
},
{	adoptProhibition(moveTooFast(a30), reduce(a30, 300))
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos, aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[Initialize, getId; B(agentId(ID)); getRole(ID); getPos, AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	Initialize
},
{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos, AdoptP(rejectRequests(200)); aprohibition(rejectRequests(200) -> reduce(200), priority 0), AdoptP(moveTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	AdoptP(rejectRequests(200));
	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	AdoptP(moveTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(0); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos, aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[@ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos, aprohibition(rejectRequests(200) -> reduce(200), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	aprohibition(rejectRequests(200) -> reduce(200), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(2); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(3); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getRole(0);
	getPos
}


[new scheduled]:[getRole(0); getPos]
[After]:{	getRole(0);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(0),L1,0); B(L1=[actionresult(X)]); GetRole(0, X); getPos]
[After]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[Planbase]:{	getRole(2);
	getPos
}


[new scheduled]:[getRole(2); getPos]
[After]:{	getRole(2);
	getPos
}


[Planbase]:{	getRole(3);
	getPos
}


[new scheduled]:[getRole(3); getPos]
[After]:{	getRole(3);
	getPos
}


[Planbase]:{	GetRole(0, raaa);
	getPos
}


[new scheduled]:[GetRole(0, raaa); getPos]
[After]:{	GetRole(0, raaa);
	getPos
}


[Planbase]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(2),L1,0); B(L1=[actionresult(X)]); GetRole(2, X); getPos]
[After]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[Planbase]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(3),L1,0); B(L1=[actionresult(X)]); GetRole(3, X); getPos]
[After]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[Surround(1, 2); sendSouth(a10, 1, 2, 100); sendWest(a20, 1, 2, 100); sendEast(a30, 1, 2, 100); sendNorth(a40, 1, 2, 100); B(tile(C1, 1, 1)); B(tile(C2, 2, 2)); B(tile(C3, 3, 3)); B(tile(C4, 4, 4)); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(1, 2, 700) : Infinite, priority 10), getPos]
[After]:{	Surround(1, 2);
	sendSouth(a10, 1, 2, 100);
	sendWest(a20, 1, 2, 100);
	sendEast(a30, 1, 2, 100);
	sendNorth(a40, 1, 2, 100);
	B(tile(C1, 1, 1));
	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
},
{	getPos
}


[Planbase]:{	GetRole(2, none);
	getPos
}


[new scheduled]:[GetRole(2, none); getPos]
[After]:{	GetRole(2, none);
	getPos
}


[Planbase]:{	GetRole(3, none);
	getPos
}


[new scheduled]:[GetRole(3, none); getPos]
[After]:{	GetRole(3, none);
	getPos
}


[Planbase]:{	sendSouth(a10, 1, 2, 100);
	sendWest(a20, 1, 2, 100);
	sendEast(a30, 1, 2, 100);
	sendNorth(a40, 1, 2, 100);
	B(tile(C1, 1, 1));
	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
},
{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[sendSouth(a10, 1, 2, 100); sendWest(a20, 1, 2, 100); sendEast(a30, 1, 2, 100); sendNorth(a40, 1, 2, 100); B(tile(C1, 1, 1)); B(tile(C2, 2, 2)); B(tile(C3, 3, 3)); B(tile(C4, 4, 4)); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(1, 2, 700) : Infinite, priority 10), @ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	sendSouth(a10, 1, 2, 100);
	sendWest(a20, 1, 2, 100);
	sendEast(a30, 1, 2, 100);
	sendNorth(a40, 1, 2, 100);
	B(tile(C1, 1, 1));
	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
},
{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[CTAH] Agentposition: [1,1]
[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	@ctenv(setGoal(a10, 1, 1, 1, 2, 100),L,0);
	sendWest(a20, 1, 2, 100);
	sendEast(a30, 1, 2, 100);
	sendNorth(a40, 1, 2, 100);
	B(tile(C1, 1, 1));
	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
},
{	B(clock(C));
	GetAgentPos(1, 1, C)
}


[new scheduled]:[@ctenv(setGoal(a10, 1, 1, 1, 2, 100),L,0); sendWest(a20, 1, 2, 100); sendEast(a30, 1, 2, 100); sendNorth(a40, 1, 2, 100); B(tile(C1, 1, 1)); B(tile(C2, 2, 2)); B(tile(C3, 3, 3)); B(tile(C4, 4, 4)); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(1, 2, 700) : Infinite, priority 10), B(clock(C)); GetAgentPos(1, 1, C)]
[After]:{	@ctenv(setGoal(a10, 1, 1, 1, 2, 100),L,0);
	sendWest(a20, 1, 2, 100);
	sendEast(a30, 1, 2, 100);
	sendNorth(a40, 1, 2, 100);
	B(tile(C1, 1, 1));
	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
},
{	B(clock(C));
	GetAgentPos(1, 1, C)
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


agent writes: SetGoal [id=null, agent=a10, cell=Cell [x=1, y=1], goal=Cell [x=1, y=2], sanction=100, clock=6, time=2015-06-03 21:24:59.444]
org notification: SetGoal [id=null, agent=a10, cell=Cell [x=1, y=1], goal=Cell [x=1, y=2], sanction=100, clock=6, time=2015-06-03 21:24:59.444]
object notification: Obligation [subject=a10, obligation=[at(1, 1, a10)], sanction=[reduce(a10, 700)], deadline=24, time=2015-06-03 21:24:59.458, clock=6]
[CTAH] Agentposition: [1,1]
[CTAH] Agentposition: [3,3]
Event processed adoptObligation(at(1, 1, a10), 24, reduce(a10, 700))
org notification: Time [clock=7, time=2015-06-03 21:24:59.563]
object notification: Time [clock=7, time=2015-06-03 21:24:59.563]
object notification: Time [clock=7, time=2015-06-03 21:24:59.563]
object notification: Time [clock=7, time=2015-06-03 21:24:59.563]
[Planbase]:{	@ctenv(setGoal(a20, 0, 2, 1, 2, 100),L,0);
	sendEast(a30, 1, 2, 100);
	sendNorth(a40, 1, 2, 100);
	B(tile(C1, 1, 1));
	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
},
{	GetAgentPos(1, 1, 6)
},
{	adoptObligation(at(1, 1, a10), 24, reduce(a10, 700))
}


[new scheduled]:[@ctenv(setGoal(a20, 0, 2, 1, 2, 100),L,0); sendEast(a30, 1, 2, 100); sendNorth(a40, 1, 2, 100); B(tile(C1, 1, 1)); B(tile(C2, 2, 2)); B(tile(C3, 3, 3)); B(tile(C4, 4, 4)); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(1, 2, 700) : Infinite, priority 10), GetAgentPos(1, 1, 6), adoptObligation(at(1, 1, a10), 24, reduce(a10, 700))]
[After]:{	@ctenv(setGoal(a20, 0, 2, 1, 2, 100),L,0);
	sendEast(a30, 1, 2, 100);
	sendNorth(a40, 1, 2, 100);
	B(tile(C1, 1, 1));
	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
},
{	GetAgentPos(1, 1, 6)
},
{	adoptObligation(at(1, 1, a10), 24, reduce(a10, 700))
}


[Planbase]:{	B(clock(C));
	GetAgentPos(3, 3, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(3, 3, C)]
[After]:{	B(clock(C));
	GetAgentPos(3, 3, C)
}


[Planbase]:{	B(clock(C));
	GetAgentPos(1, 1, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(1, 1, C)]
[After]:{	B(clock(C));
	GetAgentPos(1, 1, C)
}


agent writes: SetGoal [id=null, agent=a20, cell=Cell [x=0, y=2], goal=Cell [x=1, y=2], sanction=100, clock=7, time=2015-06-03 21:24:59.642]
org notification: SetGoal [id=null, agent=a20, cell=Cell [x=0, y=2], goal=Cell [x=1, y=2], sanction=100, clock=7, time=2015-06-03 21:24:59.642]
Event processed UpdateClock(7)
Event processed UpdateClock(7)
Event processed UpdateClock(7)
[Planbase]:{	@ctenv(setGoal(a30, 2, 2, 1, 2, 100),L,0);
	sendNorth(a40, 1, 2, 100);
	B(tile(C1, 1, 1));
	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
},
{	adoptz(at(1, 1, 700) : 3 Jun 2015 20:41:39 GMT, priority 10)
},
{	UpdateClock(7)
}


[new scheduled]:[@ctenv(setGoal(a30, 2, 2, 1, 2, 100),L,0); sendNorth(a40, 1, 2, 100); B(tile(C1, 1, 1)); B(tile(C2, 2, 2)); B(tile(C3, 3, 3)); B(tile(C4, 4, 4)); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(1, 2, 700) : Infinite, priority 10), adoptz(at(1, 1, 700) : 3 Jun 2015 20:41:39 GMT, priority 10), UpdateClock(7)]
[After]:{	@ctenv(setGoal(a30, 2, 2, 1, 2, 100),L,0);
	sendNorth(a40, 1, 2, 100);
	B(tile(C1, 1, 1));
	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
},
{	adoptz(at(1, 1, 700) : 3 Jun 2015 20:41:39 GMT, priority 10)
},
{	UpdateClock(7)
}


[Planbase]:{	GetAgentPos(3, 3, 6)
},
{	UpdateClock(7)
}


[new scheduled]:[GetAgentPos(3, 3, 6), UpdateClock(7)]
[After]:{	GetAgentPos(3, 3, 6)
},
{	UpdateClock(7)
}


[Planbase]:{	GetAgentPos(1, 1, 6)
},
{	UpdateClock(7)
}


[new scheduled]:[GetAgentPos(1, 1, 6), UpdateClock(7)]
[After]:{	GetAgentPos(1, 1, 6)
},
{	UpdateClock(7)
}


agent writes: SetGoal [id=null, agent=a30, cell=Cell [x=2, y=2], goal=Cell [x=1, y=2], sanction=100, clock=7, time=2015-06-03 21:24:59.858]
obligation to be adopted: at(1, 1, 700) : 3 Jun 2015 20:41:39 GMT, priority 10
org notification: SetGoal [id=null, agent=a30, cell=Cell [x=2, y=2], goal=Cell [x=1, y=2], sanction=100, clock=7, time=2015-06-03 21:24:59.858]
object notification: Obligation [subject=a30, obligation=[at(2, 2, a30)], sanction=[reduce(a30, 700)], deadline=25, time=2015-06-03 21:24:59.862, clock=7]
Event processed adoptObligation(at(2, 2, a30), 25, reduce(a30, 700))
[Planbase]:{	adoptObligation(at(2, 2, a30), 25, reduce(a30, 700))
}


[new scheduled]:[adoptObligation(at(2, 2, a30), 25, reduce(a30, 700))]
[After]:{	adoptObligation(at(2, 2, a30), 25, reduce(a30, 700))
}


[Planbase]:{	@ctenv(setGoal(a40, 1, 3, 1, 2, 100),L,0);
	B(tile(C1, 1, 1));
	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a40, 1, 3, 1, 2, 100),L,0); B(tile(C1, 1, 1)); B(tile(C2, 2, 2)); B(tile(C3, 3, 3)); B(tile(C4, 4, 4)); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(C1, a40, no, 100); dropgoal(surround(1, 2, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setGoal(a40, 1, 3, 1, 2, 100),L,0);
	B(tile(C1, 1, 1));
	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(C1, a40, no, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


agent writes: SetGoal [id=null, agent=a40, cell=Cell [x=1, y=3], goal=Cell [x=1, y=2], sanction=100, clock=7, time=2015-06-03 21:25:00.03]
org notification: SetGoal [id=null, agent=a40, cell=Cell [x=1, y=3], goal=Cell [x=1, y=2], sanction=100, clock=7, time=2015-06-03 21:25:00.03]
object notification: Obligation [subject=a40, obligation=[at(1, 3, a40)], sanction=[reduce(a40, 700)], deadline=25, time=2015-06-03 21:25:00.035, clock=7]
Event processed adoptObligation(at(1, 3, a40), 25, reduce(a40, 700))
[Planbase]:{	adoptz(at(2, 2, 700) : 3 Jun 2015 20:41:40 GMT, priority 10)
}


[new scheduled]:[adoptz(at(2, 2, 700) : 3 Jun 2015 20:41:40 GMT, priority 10)]
[After]:{	adoptz(at(2, 2, 700) : 3 Jun 2015 20:41:40 GMT, priority 10)
}


[Planbase]:{	adoptObligation(at(1, 3, a40), 25, reduce(a40, 700))
}


[new scheduled]:[adoptObligation(at(1, 3, a40), 25, reduce(a40, 700))]
[After]:{	adoptObligation(at(1, 3, a40), 25, reduce(a40, 700))
}


[Planbase]:{	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
}


[new scheduled]:[B(tile(C2, 2, 2)); B(tile(C3, 3, 3)); B(tile(C4, 4, 4)); color(C4, a10, no, 100); color(C3, a20, no, 100); color(C2, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(1, 2, 700) : Infinite, priority 10)]
[After]:{	B(tile(C2, 2, 2));
	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(C2, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
}


obligation to be adopted: at(2, 2, 700) : 3 Jun 2015 20:41:40 GMT, priority 10
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptz(at(1, 3, 700) : 3 Jun 2015 20:41:40 GMT, priority 10)
}


[new scheduled]:[adoptz(at(1, 3, 700) : 3 Jun 2015 20:41:40 GMT, priority 10)]
[After]:{	adoptz(at(1, 3, 700) : 3 Jun 2015 20:41:40 GMT, priority 10)
}


[Planbase]:{	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(blue, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
}


[new scheduled]:[B(tile(C3, 3, 3)); B(tile(C4, 4, 4)); color(C4, a10, no, 100); color(C3, a20, no, 100); color(blue, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(1, 2, 700) : Infinite, priority 10)]
[After]:{	B(tile(C3, 3, 3));
	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(C3, a20, no, 100);
	color(blue, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
}


obligation to be adopted: at(1, 3, 700) : 3 Jun 2015 20:41:40 GMT, priority 10
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(white, a20, no, 100);
	color(blue, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
}


[new scheduled]:[B(tile(C4, 4, 4)); color(C4, a10, no, 100); color(white, a20, no, 100); color(blue, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(1, 2, 700) : Infinite, priority 10)]
[After]:{	B(tile(C4, 4, 4));
	color(C4, a10, no, 100);
	color(white, a20, no, 100);
	color(blue, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
}


[Planbase]:{	color(blue, a10, no, 100);
	color(white, a20, no, 100);
	color(blue, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
}


[new scheduled]:[color(blue, a10, no, 100); color(white, a20, no, 100); color(blue, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(1, 2, 700) : Infinite, priority 10)]
[After]:{	color(blue, a10, no, 100);
	color(white, a20, no, 100);
	color(blue, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
}


[Planbase]:{	@ctenv(setColor(a10, blue, no, 100),L,0);
	color(white, a20, no, 100);
	color(blue, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a10, blue, no, 100),L,0); color(white, a20, no, 100); color(blue, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(1, 2, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a10, blue, no, 100),L,0);
	color(white, a20, no, 100);
	color(blue, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=blue, agent=a10, type=no, sanction=100, time=2015-06-03 21:25:00.827, clock=7]
org notification: Color [id=null, color=blue, agent=a10, type=no, sanction=100, time=2015-06-03 21:25:00.827, clock=7]
object notification: Prohibition [subject=a10, prohibition=[color(blue, a10)], sanction=[reduce(a10, 100)], clock=7, time=2015-06-03 21:25:00.838]
Event processed adoptProhibition(color(blue, a10), reduce(a10, 100))
[Planbase]:{	@ctenv(setColor(a20, white, no, 100),L,0);
	color(blue, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
},
{	adoptProhibition(color(blue, a10), reduce(a10, 100))
}


[new scheduled]:[@ctenv(setColor(a20, white, no, 100),L,0); color(blue, a30, no, 100); color(white, a40, no, 100); dropgoal(surround(1, 2, 700) : Infinite, priority 10), adoptProhibition(color(blue, a10), reduce(a10, 100))]
[After]:{	@ctenv(setColor(a20, white, no, 100),L,0);
	color(blue, a30, no, 100);
	color(white, a40, no, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
},
{	adoptProhibition(color(blue, a10), reduce(a10, 100))
}


agent writes: Color [id=null, color=white, agent=a20, type=no, sanction=100, time=2015-06-03 21:25:00.925, clock=7]
org notification: Color [id=null, color=white, agent=a20, type=no, sanction=100, time=2015-06-03 21:25:00.925, clock=7]
[Planbase]:{	@ctenv(setColor(a30, blue, no, 100),L,0);
	color(white, a40, no, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[@ctenv(setColor(a30, blue, no, 100),L,0); color(white, a40, no, 100); dropgoal(surround(1, 2, 700) : Infinite, priority 10), AdoptP(useColor(blue, 100)); aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	@ctenv(setColor(a30, blue, no, 100),L,0);
	color(white, a40, no, 100);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


agent writes: Color [id=null, color=blue, agent=a30, type=no, sanction=100, time=2015-06-03 21:25:01.019, clock=7]
org notification: Color [id=null, color=blue, agent=a30, type=no, sanction=100, time=2015-06-03 21:25:01.019, clock=7]
object notification: Prohibition [subject=a30, prohibition=[color(blue, a30)], sanction=[reduce(a30, 100)], clock=7, time=2015-06-03 21:25:01.023]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setColor(a40, white, no, 100),L,0);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[@ctenv(setColor(a40, white, no, 100),L,0); dropgoal(surround(1, 2, 700) : Infinite, priority 10), aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	@ctenv(setColor(a40, white, no, 100),L,0);
	dropgoal(surround(1, 2, 700) : Infinite, priority 10)
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


Event processed adoptProhibition(color(blue, a30), reduce(a30, 100))
[Planbase]:{	adoptProhibition(color(blue, a30), reduce(a30, 100))
}


[new scheduled]:[adoptProhibition(color(blue, a30), reduce(a30, 100))]
[After]:{	adoptProhibition(color(blue, a30), reduce(a30, 100))
}


agent writes: Color [id=null, color=white, agent=a40, type=no, sanction=100, time=2015-06-03 21:25:01.163, clock=7]
org notification: Color [id=null, color=white, agent=a40, type=no, sanction=100, time=2015-06-03 21:25:01.163, clock=7]
object notification: Prohibition [subject=a40, prohibition=[color(white, a40)], sanction=[reduce(a40, 100)], clock=7, time=2015-06-03 21:25:01.167]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[AdoptP(useColor(blue, 100)); aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


Event processed adoptProhibition(color(white, a40), reduce(a40, 100))
[Planbase]:{	adoptProhibition(color(white, a40), reduce(a40, 100))
}


[new scheduled]:[adoptProhibition(color(white, a40), reduce(a40, 100))]
[After]:{	adoptProhibition(color(white, a40), reduce(a40, 100))
}


[Planbase]:{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[Planbase]:{	AdoptP(useColor(white, 100));
	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


[new scheduled]:[AdoptP(useColor(white, 100)); aprohibition(useColor(white, 100) -> reduce(100), priority 0)]
[After]:{	AdoptP(useColor(white, 100));
	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


[new scheduled]:[aprohibition(useColor(white, 100) -> reduce(100), priority 0)]
[After]:{	aprohibition(useColor(white, 100) -> reduce(100), priority 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=8, time=2015-06-03 21:25:09.565]
org notification: Time [clock=8, time=2015-06-03 21:25:09.565]
object notification: Time [clock=8, time=2015-06-03 21:25:09.565]
object notification: Time [clock=8, time=2015-06-03 21:25:09.565]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[Planbase]:


[new scheduled]:[]
[After]:


[After]:


Event processed UpdateClock(8)
Event processed UpdateClock(8)
[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


Event processed UpdateClock(8)
[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:{	UpdateClock(8)
}


[new scheduled]:[UpdateClock(8)]
[After]:{	UpdateClock(8)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=9, time=2015-06-03 21:25:19.567]
object notification: Time [clock=9, time=2015-06-03 21:25:19.567]
org notification: Time [clock=9, time=2015-06-03 21:25:19.567]
object notification: Time [clock=9, time=2015-06-03 21:25:19.567]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(9)
Event processed UpdateClock(9)
Event processed UpdateClock(9)
[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:{	UpdateClock(9)
}


[new scheduled]:[UpdateClock(9)]
[After]:{	UpdateClock(9)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=10, time=2015-06-03 21:25:29.57]
object notification: Time [clock=10, time=2015-06-03 21:25:29.57]
object notification: Time [clock=10, time=2015-06-03 21:25:29.57]
org notification: Time [clock=10, time=2015-06-03 21:25:29.57]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[Planbase]:


[new scheduled]:[]
[After]:


[After]:


Event processed UpdateClock(10)
Event processed UpdateClock(10)
Event processed UpdateClock(10)
[Planbase]:{	UpdateClock(10)
}


[new scheduled]:[UpdateClock(10)]
[After]:{	UpdateClock(10)
}


[Planbase]:{	UpdateClock(10)
}


[new scheduled]:[UpdateClock(10)]
[After]:{	UpdateClock(10)
}


[Planbase]:{	UpdateClock(10)
}


[new scheduled]:[UpdateClock(10)]
[After]:{	UpdateClock(10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=11, time=2015-06-03 21:25:39.573]
object notification: Time [clock=11, time=2015-06-03 21:25:39.573]
object notification: Time [clock=11, time=2015-06-03 21:25:39.573]
object notification: Time [clock=11, time=2015-06-03 21:25:39.573]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(11)
Event processed UpdateClock(11)
Event processed UpdateClock(11)
[Planbase]:{	UpdateClock(11)
}


[new scheduled]:[UpdateClock(11)]
[After]:{	UpdateClock(11)
}


[Planbase]:{	UpdateClock(11)
}


[new scheduled]:[UpdateClock(11)]
[After]:{	UpdateClock(11)
}


[Planbase]:{	UpdateClock(11)
}


[new scheduled]:[UpdateClock(11)]
[After]:{	UpdateClock(11)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=12, time=2015-06-03 21:25:49.577]
object notification: Time [clock=12, time=2015-06-03 21:25:49.577]
object notification: Time [clock=12, time=2015-06-03 21:25:49.577]
object notification: Time [clock=12, time=2015-06-03 21:25:49.577]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(12)
Event processed UpdateClock(12)
[Planbase]:{	UpdateClock(12)
}


Event processed UpdateClock(12)
[new scheduled]:[UpdateClock(12)]
[After]:{	UpdateClock(12)
}


[Planbase]:{	UpdateClock(12)
}


[new scheduled]:[UpdateClock(12)]
[After]:{	UpdateClock(12)
}


[Planbase]:{	UpdateClock(12)
}


[new scheduled]:[UpdateClock(12)]
[After]:{	UpdateClock(12)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=13, time=2015-06-03 21:25:59.58]
object notification: Time [clock=13, time=2015-06-03 21:25:59.58]
object notification: Time [clock=13, time=2015-06-03 21:25:59.58]
org notification: Time [clock=13, time=2015-06-03 21:25:59.58]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(13)
Event processed UpdateClock(13)
[Planbase]:{	UpdateClock(13)
}


[new scheduled]:[UpdateClock(13)]
[After]:{	UpdateClock(13)
}


Event processed UpdateClock(13)
[Planbase]:{	UpdateClock(13)
}


[new scheduled]:[UpdateClock(13)]
[After]:{	UpdateClock(13)
}


[Planbase]:{	UpdateClock(13)
}


[new scheduled]:[UpdateClock(13)]
[After]:{	UpdateClock(13)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@3484038c
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@16fe1b92
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@744611ae
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:{	Updated
},
{	B([A,B]=[1,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[1,3]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	Updated
},
{	B([A,B]=[1,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	Updated
},
{	B([A,B]=[2,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[Updated, B([A,B]=[2,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	Updated
},
{	B([A,B]=[2,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 1, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 1, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 1, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 1, 3, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 1, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 1, 3, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 2, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(blue, no, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 2, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


a40[CTAH] going goal: 1,3 color: neco
a30[CTAH] going goal: 2,2 color: neco
a30[CTAH] paths: 1000
Need to wait 3 more seconds
a40[CTAH] paths: 1000
Need to wait 0 more seconds
a40[CTAH] path: 0
a40[CTAH] path: Path: [1][1] [1][2] [1][3]

a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:1,C:2)
a40[CTAH] moveStepToGoalTest sent proposal for: [1,2,2,434]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 2
[MSG] i'm: 2
Received a proposal creating event
org notification: Proposal [id=434, agent=a40, agent2=a30, clock=13, time=2015-06-03 21:26:07.784]
object notification: Obligation [subject=a30, obligation=[respondToRequest(434)], sanction=[reduce(a30, 300)], deadline=18, time=2015-06-03 21:26:07.799, clock=13]
[Planbase]:{	B(clock(Clock));
	if	B(not 434=no)
	then	{	NextStep(1, 2, 434);
			SentProposal(434, 2, open, Clock)
		}
	else	{	NextStep(1, 2)
		}
}


[new scheduled]:[B(clock(Clock)); if B(not 434=no) then {NextStep(1, 2, 434); SentProposal(434, 2, open, Clock)} else NextStep(1, 2)]
[After]:{	B(clock(Clock));
	if	B(not 434=no)
	then	{	NextStep(1, 2, 434);
			SentProposal(434, 2, open, Clock)
		}
	else	{	NextStep(1, 2)
		}
}


[Planbase]:{	if	B(not 434=no)
	then	{	NextStep(1, 2, 434);
			SentProposal(434, 2, open, 13)
		}
	else	{	NextStep(1, 2)
		}
}


[new scheduled]:[if B(not 434=no) then {NextStep(1, 2, 434); SentProposal(434, 2, open, 13)} else NextStep(1, 2)]
[After]:{	if	B(not 434=no)
	then	{	NextStep(1, 2, 434);
			SentProposal(434, 2, open, 13)
		}
	else	{	NextStep(1, 2)
		}
}


[Planbase]:{	NextStep(1, 2, 434);
	SentProposal(434, 2, open, 13)
}


[new scheduled]:[NextStep(1, 2, 434); SentProposal(434, 2, open, 13)]
[After]:{	NextStep(1, 2, 434);
	SentProposal(434, 2, open, 13)
}


[Planbase]:{	SentProposal(434, 2, open, 13)
}


[new scheduled]:[SentProposal(434, 2, open, 13)]
[After]:{	SentProposal(434, 2, open, 13)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>13+Wait) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[if B(13>13+7) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>13+Wait) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[if B(13>13+7) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>13+Wait) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[if B(13>13+7) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>13+Wait) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[if B(13>13+7) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>13+Wait) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[if B(13>13+7) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>13+Wait) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[if B(13>13+7) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>13+Wait) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[if B(13>13+7) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>13+Wait) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[if B(13>13+7) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>13+Wait) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[if B(13>13+7) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>13+Wait) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[if B(13>13+7) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>13+Wait) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[if B(13>13+7) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>13+Wait) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[if B(13>13+7) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>13+Wait) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[if B(13>13+7) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>13+Wait) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[if B(13>13+7) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>13+Wait) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[if B(13>13+7) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(13>13+Wait) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	B(timetowait(Wait));
	if	B(13>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


object notification: Time [clock=14, time=2015-06-03 21:26:09.583]
object notification: Time [clock=14, time=2015-06-03 21:26:09.583]
object notification: Time [clock=14, time=2015-06-03 21:26:09.583]
org notification: Time [clock=14, time=2015-06-03 21:26:09.583]
Event processed UpdateClock(14)
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
},
{	UpdateClock(14)
}


[new scheduled]:[if B(13>13+7) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}, UpdateClock(14)]
[After]:{	if	B(13>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
},
{	UpdateClock(14)
}


Event processed UpdateClock(14)
[Planbase]:{	UpdateClock(14)
}


[new scheduled]:[UpdateClock(14)]
[After]:{	UpdateClock(14)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


a30[CTAH] path: 0
a30[CTAH] path: Path: [3][3] [2][3] [2][2]

a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:2,C:3)
a30[CTAH] moveStepToGoalTest sent proposal for: [2,3,1,9028]
org notification: Proposal [id=9028, agent=a30, agent2=a20, clock=14, time=2015-06-03 21:26:09.894]
Event processed @ctenv(functionToList(proposal(proposal, 3, 434, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(434), 18, reduce(a30, 300))
Event processed UpdateClock(14)
[Planbase]:{	B(clock(Clock));
	if	B(not 9028=no)
	then	{	NextStep(2, 3, 9028);
			SentProposal(9028, 1, open, Clock)
		}
	else	{	NextStep(2, 3)
		}
},
{	@ctenv(functionToList(proposal(proposal, 3, 434, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(434), 18, reduce(a30, 300))
},
{	UpdateClock(14)
}


[new scheduled]:[B(clock(Clock)); if B(not 9028=no) then {NextStep(2, 3, 9028); SentProposal(9028, 1, open, Clock)} else NextStep(2, 3), @ctenv(functionToList(proposal(proposal, 3, 434, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(434), 18, reduce(a30, 300)), UpdateClock(14)]
[After]:{	B(clock(Clock));
	if	B(not 9028=no)
	then	{	NextStep(2, 3, 9028);
			SentProposal(9028, 1, open, Clock)
		}
	else	{	NextStep(2, 3)
		}
},
{	@ctenv(functionToList(proposal(proposal, 3, 434, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(434), 18, reduce(a30, 300))
},
{	UpdateClock(14)
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@5afd8ccb
[CTAH] The created APLList : [proposal,3,434,open]
[Planbase]:{	if	B(not 9028=no)
	then	{	NextStep(2, 3, 9028);
			SentProposal(9028, 1, open, 13)
		}
	else	{	NextStep(2, 3)
		}
},
{	if	B([actionresult([proposal,3,434,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,434,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(434, 300) : 3 Jun 2015 20:42:49 GMT, priority 10)
}


[new scheduled]:[if B(not 9028=no) then {NextStep(2, 3, 9028); SentProposal(9028, 1, open, 13)} else NextStep(2, 3), if B([actionresult([proposal,3,434,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,3,434,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(434, 300) : 3 Jun 2015 20:42:49 GMT, priority 10)]
[After]:{	if	B(not 9028=no)
	then	{	NextStep(2, 3, 9028);
			SentProposal(9028, 1, open, 13)
		}
	else	{	NextStep(2, 3)
		}
},
{	if	B([actionresult([proposal,3,434,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,434,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(434, 300) : 3 Jun 2015 20:42:49 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


obligation to be adopted: respondToRequest(434, 300) : 3 Jun 2015 20:42:49 GMT, priority 10
[Planbase]:{	NextStep(2, 3, 9028);
	SentProposal(9028, 1, open, 13)
},
{	if	B([actionresult([proposal,3,434,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[NextStep(2, 3, 9028); SentProposal(9028, 1, open, 13), if B([actionresult([proposal,3,434,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	NextStep(2, 3, 9028);
	SentProposal(9028, 1, open, 13)
},
{	if	B([actionresult([proposal,3,434,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:{	SentProposal(9028, 1, open, 13)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 434, open)
		}
}


[new scheduled]:[SentProposal(9028, 1, open, 13), if B(proposal=proposal) then ReceivedProposal(3, 434, open)]
[After]:{	SentProposal(9028, 1, open, 13)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 434, open)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:{	ReceivedProposal(3, 434, open)
}


[new scheduled]:[findNextStep(neco, 700), ReceivedProposal(3, 434, open)]
[After]:{	findNextStep(neco, 700)
},
{	ReceivedProposal(3, 434, open)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[new scheduled]:[if G(acceptRequest(434, 300)) then skip else if B(not scoreAfterExchange(434, Score)) then getScoreAfterExchange(434); B(scoreAfterExchange(434, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(434, Answer), if G(acceptRequest(434, V2)) then skip else if G(respondToRequest(434, V2)) then skip else if G(acceptRequest(434, V2)) then skip else if B(not receivedP(3, 434, closed(A))) then adoptz(respondToRequest(434, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}]
[After]:{	if	G(acceptRequest(434, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(434, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(434, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 434, closed(A)))
							then	{	adoptz(respondToRequest(434, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
},
{	if	G(acceptRequest(434, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(434, Score))
			then	{	getScoreAfterExchange(434)
				}
		};
	B(scoreAfterExchange(434, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(434, Answer)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:{	if	G(respondToRequest(434, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(434, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 434, closed(A)))
					then	{	adoptz(respondToRequest(434, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
},
{	if	B(not scoreAfterExchange(434, Score))
	then	{	getScoreAfterExchange(434)
		};
	B(scoreAfterExchange(434, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(434, Answer)
}


[new scheduled]:[if G(respondToRequest(434, V2)) then skip else if G(acceptRequest(434, V2)) then skip else if B(not receivedP(3, 434, closed(A))) then adoptz(respondToRequest(434, 50) : Infinite, priority 10), if B(14>13+7) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}, if B(not scoreAfterExchange(434, Score)) then getScoreAfterExchange(434); B(scoreAfterExchange(434, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(434, Answer)]
[After]:{	if	G(respondToRequest(434, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(434, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 434, closed(A)))
					then	{	adoptz(respondToRequest(434, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
},
{	if	B(not scoreAfterExchange(434, Score))
	then	{	getScoreAfterExchange(434)
		};
	B(scoreAfterExchange(434, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(434, Answer)
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:{	skip
},
{	getScoreAfterExchange(434);
	B(scoreAfterExchange(434, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(434, Answer)
}


[new scheduled]:[findNextStep(neco, 700), skip, getScoreAfterExchange(434); B(scoreAfterExchange(434, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(434, Answer)]
[After]:{	skip
},
{	findNextStep(neco, 700)
},
{	getScoreAfterExchange(434);
	B(scoreAfterExchange(434, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(434, Answer)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
},
{	GetScoreAfterExchange(434, yes);
	B(scoreAfterExchange(434, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(434, Answer)
}


[new scheduled]:[if G(acceptRequest(434, V2)) then skip else if G(respondToRequest(434, V2)) then skip else if G(acceptRequest(434, V2)) then skip else if B(not receivedP(3, 434, closed(A))) then adoptz(respondToRequest(434, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}, GetScoreAfterExchange(434, yes); B(scoreAfterExchange(434, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(434, Answer)]
[After]:{	if	G(acceptRequest(434, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(434, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(434, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 434, closed(A)))
							then	{	adoptz(respondToRequest(434, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
},
{	GetScoreAfterExchange(434, yes);
	B(scoreAfterExchange(434, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(434, Answer)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:{	if	G(respondToRequest(434, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(434, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 434, closed(A)))
					then	{	adoptz(respondToRequest(434, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
},
{	B(scoreAfterExchange(434, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(434, Answer)
}


[new scheduled]:[if G(respondToRequest(434, V2)) then skip else if G(acceptRequest(434, V2)) then skip else if B(not receivedP(3, 434, closed(A))) then adoptz(respondToRequest(434, 50) : Infinite, priority 10), if B(14>13+7) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}, B(scoreAfterExchange(434, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(434, Answer)]
[After]:{	if	G(respondToRequest(434, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(434, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 434, closed(A)))
					then	{	adoptz(respondToRequest(434, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
},
{	B(scoreAfterExchange(434, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(434, Answer)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(434, Answer)
}


[new scheduled]:[findNextStep(neco, 700), skip, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(434, Answer)]
[After]:{	skip
},
{	findNextStep(neco, 700)
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(434, Answer)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(434, accept)
}


[new scheduled]:[if G(acceptRequest(434, V2)) then skip else if G(respondToRequest(434, V2)) then skip else if G(acceptRequest(434, V2)) then skip else if B(not receivedP(3, 434, closed(A))) then adoptz(respondToRequest(434, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}, if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(434, accept)]
[After]:{	if	G(acceptRequest(434, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(434, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(434, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 434, closed(A)))
							then	{	adoptz(respondToRequest(434, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(434, accept)
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:{	if	G(respondToRequest(434, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(434, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 434, closed(A)))
					then	{	adoptz(respondToRequest(434, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
},
{	B(accept=accept);
	sendResponse(434, accept)
}


[new scheduled]:[if G(respondToRequest(434, V2)) then skip else if G(acceptRequest(434, V2)) then skip else if B(not receivedP(3, 434, closed(A))) then adoptz(respondToRequest(434, 50) : Infinite, priority 10), if B(14>13+7) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}, B(accept=accept); sendResponse(434, accept)]
[After]:{	if	G(respondToRequest(434, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(434, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 434, closed(A)))
					then	{	adoptz(respondToRequest(434, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
},
{	B(accept=accept);
	sendResponse(434, accept)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	skip
},
{	sendResponse(434, accept)
}


[new scheduled]:[findNextStep(neco, 700), skip, sendResponse(434, accept)]
[After]:{	skip
},
{	findNextStep(neco, 700)
},
{	sendResponse(434, accept)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
},
{	@ctenv(sendResponse(434, accept),L1,0);
	SentResponse(accept, 434)
}


[new scheduled]:[if G(acceptRequest(434, V2)) then skip else if G(respondToRequest(434, V2)) then skip else if G(acceptRequest(434, V2)) then skip else if B(not receivedP(3, 434, closed(A))) then adoptz(respondToRequest(434, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}, @ctenv(sendResponse(434, accept),L1,0); SentResponse(accept, 434)]
[After]:{	if	G(acceptRequest(434, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(434, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(434, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 434, closed(A)))
							then	{	adoptz(respondToRequest(434, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
},
{	@ctenv(sendResponse(434, accept),L1,0);
	SentResponse(accept, 434)
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
}


a30[CTAH] sent response: Discourse Message...
From PerGameId: 2.
To PerGameId: 3.

Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
org notification: Response [id=434, response=accepted, clock=14, time=2015-06-03 21:26:10.88]
Event processed @ctenv(functionToList(message(response, 434, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	G(respondToRequest(434, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(434, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 434, closed(A)))
					then	{	adoptz(respondToRequest(434, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[new scheduled]:[if G(respondToRequest(434, V2)) then skip else if G(acceptRequest(434, V2)) then skip else if B(not receivedP(3, 434, closed(A))) then adoptz(respondToRequest(434, 50) : Infinite, priority 10), if B(14>13+7) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}]
[After]:{	if	G(respondToRequest(434, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(434, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 434, closed(A)))
					then	{	adoptz(respondToRequest(434, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[Planbase]:{	@ctenv(functionToList(message(response, 434, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), @ctenv(functionToList(message(response, 434, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700)
},
{	@ctenv(functionToList(message(response, 434, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@15ed26c
[CTAH] The created APLList : [response,434,accept]
[Planbase]:{	if	G(acceptRequest(434, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(3, 434, closed(A)))
			then	{	adoptz(respondToRequest(434, 50) : Infinite, priority 10)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), if G(acceptRequest(434, V2)) then skip else if B(not receivedP(3, 434, closed(A))) then adoptz(respondToRequest(434, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(434, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(3, 434, closed(A)))
			then	{	adoptz(respondToRequest(434, 50) : Infinite, priority 10)
				}
		}
},
{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 434)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}, if B(response=response) then ReceivedResponse(accept, 434)]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 434)
		}
}


[Planbase]:{	if	B(not receivedP(3, 434, closed(A)))
	then	{	adoptz(respondToRequest(434, 50) : Infinite, priority 10)
		}
},
{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[new scheduled]:[if B(not receivedP(3, 434, closed(A))) then adoptz(respondToRequest(434, 50) : Infinite, priority 10), B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}]
[After]:{	if	B(not receivedP(3, 434, closed(A)))
	then	{	adoptz(respondToRequest(434, 50) : Infinite, priority 10)
		}
},
{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
},
{	ReceivedResponse(accept, 434)
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(1, 2, 434); ReceivedResponse(noresponse, 434)}, ReceivedResponse(accept, 434)]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(1, 2, 434);
			ReceivedResponse(noresponse, 434)
		}
},
{	ReceivedResponse(accept, 434)
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 1, 2),L2,0);
	if	B(L2=[actionresult([1,2])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 2, Clock)
		};
	NoNextStep(1, 2, 434)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 1, 2),L2,0); if B(L2=[actionresult([1,2])]) then {B(clock(Clock)); UpdatePosition(1, 2, Clock)}; NoNextStep(1, 2, 434)]
[After]:{	@ctenv(moveStepToGoal(neco, 1, 2),L2,0);
	if	B(L2=[actionresult([1,2])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 2, Clock)
		};
	NoNextStep(1, 2, 434)
}


a40[CTAH] moveStepToGoal returns: no
object notification: Position [subject=a40, id=null, cell=Cell [x=1, y=2], time=2015-06-03 21:26:11.187, clock=14]
org notification: Position [subject=a40, id=null, cell=Cell [x=1, y=2], time=2015-06-03 21:26:11.187, clock=14]
object notification: Obligation [subject=a40, obligation=[makeMove(1, 2, a40)], sanction=[reduce(a40, 300)], deadline=29, time=2015-06-03 21:26:11.219, clock=14]
Event processed UpdatePosition(1, 2, 14)
Event processed adoptObligation(makeMove(1, 2, a40), 29, reduce(a40, 300))
[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[Planbase]:{	NoNextStep(1, 2, 434)
},
{	UpdatePosition(1, 2, 14)
},
{	adoptObligation(makeMove(1, 2, a40), 29, reduce(a40, 300))
}


[new scheduled]:[NoNextStep(1, 2, 434), UpdatePosition(1, 2, 14), adoptObligation(makeMove(1, 2, a40), 29, reduce(a40, 300))]
[After]:{	NoNextStep(1, 2, 434)
},
{	UpdatePosition(1, 2, 14)
},
{	adoptObligation(makeMove(1, 2, a40), 29, reduce(a40, 300))
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[Planbase]:{	adoptz(makeMove(1, 2, 300) : 3 Jun 2015 20:42:51 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700), adoptz(makeMove(1, 2, 300) : 3 Jun 2015 20:42:51 GMT, priority 10)]
[After]:{	findNextStep(neco, 700)
},
{	adoptz(makeMove(1, 2, 300) : 3 Jun 2015 20:42:51 GMT, priority 10)
}


obligation to be adopted: makeMove(1, 2, 300) : 3 Jun 2015 20:42:51 GMT, priority 10
[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[Planbase]:{	B([A,B]=[1,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[1,3]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[1,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 1, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 1, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 1, 3, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 1, 3, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(white, no, 1, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(white, no, 1, 3, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 1, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


a40[CTAH] going goal: 1,3 color: neco
[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=9028, response=accepted, clock=14, time=2015-06-03 21:26:12.076]
Event processed @ctenv(functionToList(message(response, 9028, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
},
{	@ctenv(functionToList(message(response, 9028, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}, @ctenv(functionToList(message(response, 9028, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
},
{	@ctenv(functionToList(message(response, 9028, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@484479d0
[CTAH] The created APLList : [response,9028,accept]
[Planbase]:{	if	B(response=response)
	then	{	ReceivedResponse(accept, 9028)
		}
}


[new scheduled]:[findNextStep(neco, 700), if B(response=response) then ReceivedResponse(accept, 9028)]
[After]:{	findNextStep(neco, 700)
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 9028)
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
},
{	ReceivedResponse(accept, 9028)
}


[new scheduled]:[B(timetowait(Wait)); if B(14>13+Wait) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}, ReceivedResponse(accept, 9028)]
[After]:{	B(timetowait(Wait));
	if	B(14>13+Wait)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
},
{	ReceivedResponse(accept, 9028)
}


[Planbase]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[new scheduled]:[if B(14>13+7) then {NoNextStep(2, 3, 9028); ReceivedResponse(noresponse, 9028)}]
[After]:{	if	B(14>13+7)
	then	{	NoNextStep(2, 3, 9028);
			ReceivedResponse(noresponse, 9028)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 2, 3),L2,0);
	if	B(L2=[actionresult([2,3])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 3, Clock)
		};
	NoNextStep(2, 3, 9028)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 2, 3),L2,0); if B(L2=[actionresult([2,3])]) then {B(clock(Clock)); UpdatePosition(2, 3, Clock)}; NoNextStep(2, 3, 9028)]
[After]:{	@ctenv(moveStepToGoal(neco, 2, 3),L2,0);
	if	B(L2=[actionresult([2,3])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 3, Clock)
		};
	NoNextStep(2, 3, 9028)
}


Need to wait 3 more seconds
org notification: Position [subject=a30, id=null, cell=Cell [x=2, y=3], time=2015-06-03 21:26:12.336, clock=14]
object notification: Obligation [subject=a30, obligation=[makeMove(2, 3, a30)], sanction=[reduce(a30, 300)], deadline=29, time=2015-06-03 21:26:12.348, clock=14]
object notification: Position [subject=a30, id=null, cell=Cell [x=2, y=3], time=2015-06-03 21:26:12.336, clock=14]
a40[CTAH] paths: 1000
a40[CTAH] path: 0
a40[CTAH] path: Path: [1][2] [1][3]

a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:1,C:3)
a40[CTAH] moveStepToGoalTest sent proposal for: [1,3,0,3178]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=3178, agent=a40, agent2=a10, clock=14, time=2015-06-03 21:26:15.014]
object notification: Obligation [subject=a10, obligation=[respondToRequest(3178)], sanction=[reduce(a10, 300)], deadline=19, time=2015-06-03 21:26:15.02, clock=14]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	B(clock(Clock));
	if	B(not 3178=no)
	then	{	NextStep(1, 3, 3178);
			SentProposal(3178, 0, open, Clock)
		}
	else	{	NextStep(1, 3)
		}
}


[new scheduled]:[B(clock(Clock)); if B(not 3178=no) then {NextStep(1, 3, 3178); SentProposal(3178, 0, open, Clock)} else NextStep(1, 3)]
[After]:{	B(clock(Clock));
	if	B(not 3178=no)
	then	{	NextStep(1, 3, 3178);
			SentProposal(3178, 0, open, Clock)
		}
	else	{	NextStep(1, 3)
		}
}


Event processed @ctenv(functionToList(proposal(proposal, 3, 3178, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(3178), 19, reduce(a10, 300))
[Planbase]:{	@ctenv(functionToList(proposal(proposal, 3, 3178, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(3178), 19, reduce(a10, 300))
}


[new scheduled]:[@ctenv(functionToList(proposal(proposal, 3, 3178, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(3178), 19, reduce(a10, 300))]
[After]:{	@ctenv(functionToList(proposal(proposal, 3, 3178, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(3178), 19, reduce(a10, 300))
}


[Planbase]:{	if	B(not 3178=no)
	then	{	NextStep(1, 3, 3178);
			SentProposal(3178, 0, open, 14)
		}
	else	{	NextStep(1, 3)
		}
}


[new scheduled]:[if B(not 3178=no) then {NextStep(1, 3, 3178); SentProposal(3178, 0, open, 14)} else NextStep(1, 3)]
[After]:{	if	B(not 3178=no)
	then	{	NextStep(1, 3, 3178);
			SentProposal(3178, 0, open, 14)
		}
	else	{	NextStep(1, 3)
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@6d10e921
[CTAH] The created APLList : [proposal,3,3178,open]
[Planbase]:{	if	B([actionresult([proposal,3,3178,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,3178,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(3178, 300) : 3 Jun 2015 20:42:55 GMT, priority 10)
}


[new scheduled]:[if B([actionresult([proposal,3,3178,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,3,3178,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(3178, 300) : 3 Jun 2015 20:42:55 GMT, priority 10)]
[After]:{	if	B([actionresult([proposal,3,3178,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,3178,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(3178, 300) : 3 Jun 2015 20:42:55 GMT, priority 10)
}


obligation to be adopted: respondToRequest(3178, 300) : 3 Jun 2015 20:42:55 GMT, priority 10
[Planbase]:{	NextStep(1, 3, 3178);
	SentProposal(3178, 0, open, 14)
}


[new scheduled]:[NextStep(1, 3, 3178); SentProposal(3178, 0, open, 14)]
[After]:{	NextStep(1, 3, 3178);
	SentProposal(3178, 0, open, 14)
}


[Planbase]:{	if	B([actionresult([proposal,3,3178,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B([actionresult([proposal,3,3178,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([proposal,3,3178,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	SentProposal(3178, 0, open, 14)
}


[new scheduled]:[SentProposal(3178, 0, open, 14)]
[After]:{	SentProposal(3178, 0, open, 14)
}


a30[CTAH] moveStepToGoal returns: [2,3]
Event processed adoptObligation(makeMove(2, 3, a30), 29, reduce(a30, 300))
Event processed UpdatePosition(2, 3, 14)
[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 3178, open)
		}
}


[new scheduled]:[if B(proposal=proposal) then ReceivedProposal(3, 3178, open)]
[After]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 3178, open)
		}
}


[Planbase]:{	B(clock(Clock));
	UpdatePosition(2, 3, Clock);
	NoNextStep(2, 3, 9028)
},
{	adoptObligation(makeMove(2, 3, a30), 29, reduce(a30, 300))
},
{	UpdatePosition(2, 3, 14)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(2, 3, Clock); NoNextStep(2, 3, 9028), adoptObligation(makeMove(2, 3, a30), 29, reduce(a30, 300)), UpdatePosition(2, 3, 14)]
[After]:{	B(clock(Clock));
	UpdatePosition(2, 3, Clock);
	NoNextStep(2, 3, 9028)
},
{	adoptObligation(makeMove(2, 3, a30), 29, reduce(a30, 300))
},
{	UpdatePosition(2, 3, 14)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	ReceivedProposal(3, 3178, open)
}


[new scheduled]:[ReceivedProposal(3, 3178, open)]
[After]:{	ReceivedProposal(3, 3178, open)
}


[Planbase]:{	UpdatePosition(2, 3, 14);
	NoNextStep(2, 3, 9028)
},
{	adoptz(makeMove(2, 3, 300) : 3 Jun 2015 20:42:55 GMT, priority 10)
}


[new scheduled]:[UpdatePosition(2, 3, 14); NoNextStep(2, 3, 9028), adoptz(makeMove(2, 3, 300) : 3 Jun 2015 20:42:55 GMT, priority 10)]
[After]:{	UpdatePosition(2, 3, 14);
	NoNextStep(2, 3, 9028)
},
{	adoptz(makeMove(2, 3, 300) : 3 Jun 2015 20:42:55 GMT, priority 10)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>14+Wait)
	then	{	NoNextStep(1, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>14+Wait) then {NoNextStep(1, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(14>14+Wait)
	then	{	NoNextStep(1, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


obligation to be adopted: makeMove(2, 3, 300) : 3 Jun 2015 20:42:55 GMT, priority 10
[Planbase]:


[new scheduled]:[if G(acceptRequest(3178, 300)) then skip else if B(not scoreAfterExchange(3178, Score)) then getScoreAfterExchange(3178); B(scoreAfterExchange(3178, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3178, Answer), if G(acceptRequest(3178, V2)) then skip else if G(respondToRequest(3178, V2)) then skip else if G(acceptRequest(3178, V2)) then skip else if B(not receivedP(3, 3178, closed(A))) then adoptz(respondToRequest(3178, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(3178, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(3178, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(3178, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 3178, closed(A)))
							then	{	adoptz(respondToRequest(3178, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	G(acceptRequest(3178, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(3178, Score))
			then	{	getScoreAfterExchange(3178)
				}
		};
	B(scoreAfterExchange(3178, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3178, Answer)
}


[Planbase]:{	NoNextStep(2, 3, 9028)
}


[new scheduled]:[NoNextStep(2, 3, 9028)]
[After]:{	NoNextStep(2, 3, 9028)
}


[Planbase]:{	if	B(14>14+7)
	then	{	NoNextStep(1, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(14>14+7) then {NoNextStep(1, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(14>14+7)
	then	{	NoNextStep(1, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	G(respondToRequest(3178, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3178, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 3178, closed(A)))
					then	{	adoptz(respondToRequest(3178, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(3178, Score))
	then	{	getScoreAfterExchange(3178)
		};
	B(scoreAfterExchange(3178, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3178, Answer)
}


[new scheduled]:[if G(respondToRequest(3178, V2)) then skip else if G(acceptRequest(3178, V2)) then skip else if B(not receivedP(3, 3178, closed(A))) then adoptz(respondToRequest(3178, 50) : Infinite, priority 10), if B(not scoreAfterExchange(3178, Score)) then getScoreAfterExchange(3178); B(scoreAfterExchange(3178, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3178, Answer)]
[After]:{	if	G(respondToRequest(3178, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3178, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 3178, closed(A)))
					then	{	adoptz(respondToRequest(3178, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(3178, Score))
	then	{	getScoreAfterExchange(3178)
		};
	B(scoreAfterExchange(3178, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3178, Answer)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	skip
},
{	getScoreAfterExchange(3178);
	B(scoreAfterExchange(3178, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3178, Answer)
}


[new scheduled]:[skip, getScoreAfterExchange(3178); B(scoreAfterExchange(3178, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3178, Answer)]
[After]:{	skip
},
{	getScoreAfterExchange(3178);
	B(scoreAfterExchange(3178, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3178, Answer)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>14+Wait)
	then	{	NoNextStep(1, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>14+Wait) then {NoNextStep(1, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(14>14+Wait)
	then	{	NoNextStep(1, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	GetScoreAfterExchange(3178, yes);
	B(scoreAfterExchange(3178, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3178, Answer)
}


[new scheduled]:[if G(acceptRequest(3178, V2)) then skip else if G(respondToRequest(3178, V2)) then skip else if G(acceptRequest(3178, V2)) then skip else if B(not receivedP(3, 3178, closed(A))) then adoptz(respondToRequest(3178, 50) : Infinite, priority 10), GetScoreAfterExchange(3178, yes); B(scoreAfterExchange(3178, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3178, Answer)]
[After]:{	if	G(acceptRequest(3178, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(3178, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(3178, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 3178, closed(A)))
							then	{	adoptz(respondToRequest(3178, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	GetScoreAfterExchange(3178, yes);
	B(scoreAfterExchange(3178, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3178, Answer)
}


[Planbase]:{	B([A,B]=[2,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[B([A,B]=[2,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	B([A,B]=[2,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A, B, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(14>14+7)
	then	{	NoNextStep(1, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(14>14+7) then {NoNextStep(1, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(14>14+7)
	then	{	NoNextStep(1, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	G(respondToRequest(3178, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3178, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 3178, closed(A)))
					then	{	adoptz(respondToRequest(3178, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(3178, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3178, Answer)
}


[new scheduled]:[if G(respondToRequest(3178, V2)) then skip else if G(acceptRequest(3178, V2)) then skip else if B(not receivedP(3, 3178, closed(A))) then adoptz(respondToRequest(3178, 50) : Infinite, priority 10), B(scoreAfterExchange(3178, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3178, Answer)]
[After]:{	if	G(respondToRequest(3178, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3178, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 3178, closed(A)))
					then	{	adoptz(respondToRequest(3178, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(3178, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3178, Answer)
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 2, 2, 8),L1,0)
				}
			else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3178, Answer)
}


[new scheduled]:[skip, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(3178, Answer)]
[After]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(3178, Answer)
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 2, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(blue, no, 2, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 2, 2, 8),L1,0)
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>14+Wait)
	then	{	NoNextStep(1, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>14+Wait) then {NoNextStep(1, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(14>14+Wait)
	then	{	NoNextStep(1, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3178, accept)
}


[new scheduled]:[if G(acceptRequest(3178, V2)) then skip else if G(respondToRequest(3178, V2)) then skip else if G(acceptRequest(3178, V2)) then skip else if B(not receivedP(3, 3178, closed(A))) then adoptz(respondToRequest(3178, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(3178, accept)]
[After]:{	if	G(acceptRequest(3178, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(3178, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(3178, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 3178, closed(A)))
							then	{	adoptz(respondToRequest(3178, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(3178, accept)
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); SentProposal(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 2, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					SentProposal(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		}
}


[Planbase]:{	if	B(14>14+7)
	then	{	NoNextStep(1, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(14>14+7) then {NoNextStep(1, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(14>14+7)
	then	{	NoNextStep(1, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


a30[CTAH] going goal: 2,2 color: neco
[Planbase]:{	if	G(respondToRequest(3178, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3178, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 3178, closed(A)))
					then	{	adoptz(respondToRequest(3178, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(3178, accept)
}


[new scheduled]:[if G(respondToRequest(3178, V2)) then skip else if G(acceptRequest(3178, V2)) then skip else if B(not receivedP(3, 3178, closed(A))) then adoptz(respondToRequest(3178, 50) : Infinite, priority 10), B(accept=accept); sendResponse(3178, accept)]
[After]:{	if	G(respondToRequest(3178, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3178, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 3178, closed(A)))
					then	{	adoptz(respondToRequest(3178, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(3178, accept)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	skip
},
{	sendResponse(3178, accept)
}


[new scheduled]:[skip, sendResponse(3178, accept)]
[After]:{	skip
},
{	sendResponse(3178, accept)
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>14+Wait)
	then	{	NoNextStep(1, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>14+Wait) then {NoNextStep(1, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	B(timetowait(Wait));
	if	B(14>14+Wait)
	then	{	NoNextStep(1, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[Planbase]:{	@ctenv(sendResponse(3178, accept),L1,0);
	SentResponse(accept, 3178)
}


[new scheduled]:[if G(acceptRequest(3178, V2)) then skip else if G(respondToRequest(3178, V2)) then skip else if G(acceptRequest(3178, V2)) then skip else if B(not receivedP(3, 3178, closed(A))) then adoptz(respondToRequest(3178, 50) : Infinite, priority 10), @ctenv(sendResponse(3178, accept),L1,0); SentResponse(accept, 3178)]
[After]:{	if	G(acceptRequest(3178, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(3178, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(3178, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(3, 3178, closed(A)))
							then	{	adoptz(respondToRequest(3178, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	@ctenv(sendResponse(3178, accept),L1,0);
	SentResponse(accept, 3178)
}


[Planbase]:{	if	B(14>14+7)
	then	{	NoNextStep(1, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


[new scheduled]:[if B(14>14+7) then {NoNextStep(1, 3, 3178); ReceivedResponse(noresponse, 3178)}]
[After]:{	if	B(14>14+7)
	then	{	NoNextStep(1, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
}


a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 3.

Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
org notification: Response [id=3178, response=accepted, clock=14, time=2015-06-03 21:26:16.493]
Event processed @ctenv(functionToList(message(response, 3178, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	G(respondToRequest(3178, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3178, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 3178, closed(A)))
					then	{	adoptz(respondToRequest(3178, 50) : Infinite, priority 10)
						}
				}
		}
}


[new scheduled]:[if G(respondToRequest(3178, V2)) then skip else if G(acceptRequest(3178, V2)) then skip else if B(not receivedP(3, 3178, closed(A))) then adoptz(respondToRequest(3178, 50) : Infinite, priority 10)]
[After]:{	if	G(respondToRequest(3178, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(3178, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(3, 3178, closed(A)))
					then	{	adoptz(respondToRequest(3178, 50) : Infinite, priority 10)
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(response, 3178, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(neco, 700), @ctenv(functionToList(message(response, 3178, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700)
},
{	@ctenv(functionToList(message(response, 3178, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@1b627240
[CTAH] The created APLList : [response,3178,accept]
[Planbase]:{	if	G(acceptRequest(3178, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(3, 3178, closed(A)))
			then	{	adoptz(respondToRequest(3178, 50) : Infinite, priority 10)
				}
		}
}


[new scheduled]:[if G(acceptRequest(3178, V2)) then skip else if B(not receivedP(3, 3178, closed(A))) then adoptz(respondToRequest(3178, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(3178, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(3, 3178, closed(A)))
			then	{	adoptz(respondToRequest(3178, 50) : Infinite, priority 10)
				}
		}
}


[Planbase]:{	B(timetowait(Wait));
	if	B(14>14+Wait)
	then	{	NoNextStep(1, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 3178)
		}
}


[new scheduled]:[B(timetowait(Wait)); if B(14>14+Wait) then {NoNextStep(1, 3, 3178); ReceivedResponse(noresponse, 3178)}, if B(response=response) then ReceivedResponse(accept, 3178)]
[After]:{	B(timetowait(Wait));
	if	B(14>14+Wait)
	then	{	NoNextStep(1, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
},
{	if	B(response=response)
	then	{	ReceivedResponse(accept, 3178)
		}
}


[Planbase]:{	if	B(not receivedP(3, 3178, closed(A)))
	then	{	adoptz(respondToRequest(3178, 50) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(not receivedP(3, 3178, closed(A))) then adoptz(respondToRequest(3178, 50) : Infinite, priority 10)]
[After]:{	if	B(not receivedP(3, 3178, closed(A)))
	then	{	adoptz(respondToRequest(3178, 50) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(14>14+7)
	then	{	NoNextStep(1, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
},
{	ReceivedResponse(accept, 3178)
}


[new scheduled]:[if B(14>14+7) then {NoNextStep(1, 3, 3178); ReceivedResponse(noresponse, 3178)}, ReceivedResponse(accept, 3178)]
[After]:{	if	B(14>14+7)
	then	{	NoNextStep(1, 3, 3178);
			ReceivedResponse(noresponse, 3178)
		}
},
{	ReceivedResponse(accept, 3178)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 1, 3),L2,0);
	if	B(L2=[actionresult([1,3])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 3, Clock)
		};
	NoNextStep(1, 3, 3178)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 1, 3),L2,0); if B(L2=[actionresult([1,3])]) then {B(clock(Clock)); UpdatePosition(1, 3, Clock)}; NoNextStep(1, 3, 3178)]
[After]:{	@ctenv(moveStepToGoal(neco, 1, 3),L2,0);
	if	B(L2=[actionresult([1,3])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 3, Clock)
		};
	NoNextStep(1, 3, 3178)
}


a40[CTAH] moveStepToGoal returns: no
object notification: Position [subject=a40, id=null, cell=Cell [x=1, y=3], time=2015-06-03 21:26:16.996, clock=14]
org notification: Position [subject=a40, id=null, cell=Cell [x=1, y=3], time=2015-06-03 21:26:16.996, clock=14]
object notification: Points [subject=a40, time=2015-06-03 21:26:17.013, clock=14, value=700, id=null]
object notification: Points [subject=a40, time=2015-06-03 21:26:17.02, clock=14, value=600, id=null]
Event processed UpdatePosition(1, 3, 14)
Event processed UpdatePoints(700)
Event processed UpdatePoints(600)
[Planbase]:{	NoNextStep(1, 3, 3178)
},
{	UpdatePosition(1, 3, 14)
},
{	UpdatePoints(700)
},
{	UpdatePoints(600)
}


[new scheduled]:[NoNextStep(1, 3, 3178), UpdatePosition(1, 3, 14), UpdatePoints(700), UpdatePoints(600)]
[After]:{	NoNextStep(1, 3, 3178)
},
{	UpdatePosition(1, 3, 14)
},
{	UpdatePoints(700)
},
{	UpdatePoints(600)
}


[Planbase]:


[new scheduled]:[]
[After]:


a30[CTAH] paths: 1000
Need to wait 4 more seconds
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=4531, agent=a20, agent2=a10, clock=14, time=2015-06-03 21:26:18.857]
object notification: Obligation [subject=a10, obligation=[respondToRequest(4531)], sanction=[reduce(a10, 300)], deadline=19, time=2015-06-03 21:26:18.862, clock=14]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(proposal(proposal, 1, 4531, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(4531), 19, reduce(a10, 300))
[Planbase]:{	@ctenv(functionToList(proposal(proposal, 1, 4531, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(4531), 19, reduce(a10, 300))
}


[new scheduled]:[@ctenv(functionToList(proposal(proposal, 1, 4531, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(4531), 19, reduce(a10, 300))]
[After]:{	@ctenv(functionToList(proposal(proposal, 1, 4531, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(4531), 19, reduce(a10, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@64b4e759
[CTAH] The created APLList : [proposal,1,4531,open]
[Planbase]:{	if	B([actionresult([proposal,1,4531,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,4531,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(4531, 300) : 3 Jun 2015 20:42:58 GMT, priority 10)
}


[new scheduled]:[if B([actionresult([proposal,1,4531,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,4531,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(4531, 300) : 3 Jun 2015 20:42:58 GMT, priority 10)]
[After]:{	if	B([actionresult([proposal,1,4531,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,4531,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(4531, 300) : 3 Jun 2015 20:42:58 GMT, priority 10)
}


obligation to be adopted: respondToRequest(4531, 300) : 3 Jun 2015 20:42:58 GMT, priority 10
[Planbase]:{	if	B([actionresult([proposal,1,4531,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B([actionresult([proposal,1,4531,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([proposal,1,4531,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 4531, open)
		}
}


[new scheduled]:[if B(proposal=proposal) then ReceivedProposal(1, 4531, open)]
[After]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 4531, open)
		}
}


[Planbase]:{	ReceivedProposal(1, 4531, open)
}


[new scheduled]:[ReceivedProposal(1, 4531, open)]
[After]:{	ReceivedProposal(1, 4531, open)
}


[Planbase]:


[new scheduled]:[if G(acceptRequest(4531, 300)) then skip else if B(not scoreAfterExchange(4531, Score)) then getScoreAfterExchange(4531); B(scoreAfterExchange(4531, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4531, Answer), if G(acceptRequest(4531, V2)) then skip else if G(respondToRequest(4531, V2)) then skip else if G(acceptRequest(4531, V2)) then skip else if B(not receivedP(1, 4531, closed(A))) then adoptz(respondToRequest(4531, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(4531, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(4531, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(4531, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 4531, closed(A)))
							then	{	adoptz(respondToRequest(4531, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	G(acceptRequest(4531, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(4531, Score))
			then	{	getScoreAfterExchange(4531)
				}
		};
	B(scoreAfterExchange(4531, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4531, Answer)
}


[Planbase]:{	if	G(respondToRequest(4531, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4531, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 4531, closed(A)))
					then	{	adoptz(respondToRequest(4531, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(4531, Score))
	then	{	getScoreAfterExchange(4531)
		};
	B(scoreAfterExchange(4531, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4531, Answer)
}


[new scheduled]:[if G(respondToRequest(4531, V2)) then skip else if G(acceptRequest(4531, V2)) then skip else if B(not receivedP(1, 4531, closed(A))) then adoptz(respondToRequest(4531, 50) : Infinite, priority 10), if B(not scoreAfterExchange(4531, Score)) then getScoreAfterExchange(4531); B(scoreAfterExchange(4531, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4531, Answer)]
[After]:{	if	G(respondToRequest(4531, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4531, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 4531, closed(A)))
					then	{	adoptz(respondToRequest(4531, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(4531, Score))
	then	{	getScoreAfterExchange(4531)
		};
	B(scoreAfterExchange(4531, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4531, Answer)
}


[Planbase]:{	skip
},
{	getScoreAfterExchange(4531);
	B(scoreAfterExchange(4531, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4531, Answer)
}


[new scheduled]:[skip, getScoreAfterExchange(4531); B(scoreAfterExchange(4531, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4531, Answer)]
[After]:{	skip
},
{	getScoreAfterExchange(4531);
	B(scoreAfterExchange(4531, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4531, Answer)
}


[Planbase]:{	GetScoreAfterExchange(4531, yes);
	B(scoreAfterExchange(4531, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4531, Answer)
}


[new scheduled]:[if G(acceptRequest(4531, V2)) then skip else if G(respondToRequest(4531, V2)) then skip else if G(acceptRequest(4531, V2)) then skip else if B(not receivedP(1, 4531, closed(A))) then adoptz(respondToRequest(4531, 50) : Infinite, priority 10), GetScoreAfterExchange(4531, yes); B(scoreAfterExchange(4531, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4531, Answer)]
[After]:{	if	G(acceptRequest(4531, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(4531, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(4531, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 4531, closed(A)))
							then	{	adoptz(respondToRequest(4531, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	GetScoreAfterExchange(4531, yes);
	B(scoreAfterExchange(4531, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4531, Answer)
}


[Planbase]:{	if	G(respondToRequest(4531, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4531, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 4531, closed(A)))
					then	{	adoptz(respondToRequest(4531, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(4531, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4531, Answer)
}


[new scheduled]:[if G(respondToRequest(4531, V2)) then skip else if G(acceptRequest(4531, V2)) then skip else if B(not receivedP(1, 4531, closed(A))) then adoptz(respondToRequest(4531, 50) : Infinite, priority 10), B(scoreAfterExchange(4531, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4531, Answer)]
[After]:{	if	G(respondToRequest(4531, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4531, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 4531, closed(A)))
					then	{	adoptz(respondToRequest(4531, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(4531, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4531, Answer)
}


[Planbase]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4531, Answer)
}


[new scheduled]:[skip, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(4531, Answer)]
[After]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(4531, Answer)
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(4531, accept)
}


[new scheduled]:[if G(acceptRequest(4531, V2)) then skip else if G(respondToRequest(4531, V2)) then skip else if G(acceptRequest(4531, V2)) then skip else if B(not receivedP(1, 4531, closed(A))) then adoptz(respondToRequest(4531, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(4531, accept)]
[After]:{	if	G(acceptRequest(4531, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(4531, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(4531, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 4531, closed(A)))
							then	{	adoptz(respondToRequest(4531, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(4531, accept)
}


[Planbase]:{	if	G(respondToRequest(4531, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4531, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 4531, closed(A)))
					then	{	adoptz(respondToRequest(4531, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(4531, accept)
}


[new scheduled]:[if G(respondToRequest(4531, V2)) then skip else if G(acceptRequest(4531, V2)) then skip else if B(not receivedP(1, 4531, closed(A))) then adoptz(respondToRequest(4531, 50) : Infinite, priority 10), B(accept=accept); sendResponse(4531, accept)]
[After]:{	if	G(respondToRequest(4531, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4531, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 4531, closed(A)))
					then	{	adoptz(respondToRequest(4531, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(4531, accept)
}


[Planbase]:{	skip
},
{	sendResponse(4531, accept)
}


[new scheduled]:[skip, sendResponse(4531, accept)]
[After]:{	skip
},
{	sendResponse(4531, accept)
}


org notification: Time [clock=15, time=2015-06-03 21:26:19.585]
object notification: Time [clock=15, time=2015-06-03 21:26:19.585]
object notification: Time [clock=15, time=2015-06-03 21:26:19.585]
object notification: Time [clock=15, time=2015-06-03 21:26:19.585]
Event processed UpdateClock(15)
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(sendResponse(4531, accept),L1,0);
	SentResponse(accept, 4531)
},
{	UpdateClock(15)
}


[new scheduled]:[if G(acceptRequest(4531, V2)) then skip else if G(respondToRequest(4531, V2)) then skip else if G(acceptRequest(4531, V2)) then skip else if B(not receivedP(1, 4531, closed(A))) then adoptz(respondToRequest(4531, 50) : Infinite, priority 10), @ctenv(sendResponse(4531, accept),L1,0); SentResponse(accept, 4531), UpdateClock(15)]
[After]:{	if	G(acceptRequest(4531, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(4531, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(4531, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 4531, closed(A)))
							then	{	adoptz(respondToRequest(4531, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	@ctenv(sendResponse(4531, accept),L1,0);
	SentResponse(accept, 4531)
},
{	UpdateClock(15)
}


a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 1.

org notification: Response [id=4531, response=accepted, clock=15, time=2015-06-03 21:26:19.653]
Event processed UpdateClock(15)
[Planbase]:{	UpdateClock(15)
}


[new scheduled]:[UpdateClock(15)]
[After]:{	UpdateClock(15)
}


[Planbase]:{	if	G(respondToRequest(4531, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4531, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 4531, closed(A)))
					then	{	adoptz(respondToRequest(4531, 50) : Infinite, priority 10)
						}
				}
		}
}


[new scheduled]:[if G(respondToRequest(4531, V2)) then skip else if G(acceptRequest(4531, V2)) then skip else if B(not receivedP(1, 4531, closed(A))) then adoptz(respondToRequest(4531, 50) : Infinite, priority 10)]
[After]:{	if	G(respondToRequest(4531, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(4531, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 4531, closed(A)))
					then	{	adoptz(respondToRequest(4531, 50) : Infinite, priority 10)
						}
				}
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	G(acceptRequest(4531, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 4531, closed(A)))
			then	{	adoptz(respondToRequest(4531, 50) : Infinite, priority 10)
				}
		}
}


[new scheduled]:[if G(acceptRequest(4531, V2)) then skip else if B(not receivedP(1, 4531, closed(A))) then adoptz(respondToRequest(4531, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(4531, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 4531, closed(A)))
			then	{	adoptz(respondToRequest(4531, 50) : Infinite, priority 10)
				}
		}
}


[Planbase]:{	if	B(not receivedP(1, 4531, closed(A)))
	then	{	adoptz(respondToRequest(4531, 50) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(not receivedP(1, 4531, closed(A))) then adoptz(respondToRequest(4531, 50) : Infinite, priority 10)]
[After]:{	if	B(not receivedP(1, 4531, closed(A)))
	then	{	adoptz(respondToRequest(4531, 50) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=8397, agent=a20, agent2=a10, clock=15, time=2015-06-03 21:26:20.262]
object notification: Obligation [subject=a10, obligation=[respondToRequest(8397)], sanction=[reduce(a10, 300)], deadline=20, time=2015-06-03 21:26:20.268, clock=15]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(proposal(proposal, 1, 8397, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(8397), 20, reduce(a10, 300))
[Planbase]:{	@ctenv(functionToList(proposal(proposal, 1, 8397, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(8397), 20, reduce(a10, 300))
}


[new scheduled]:[@ctenv(functionToList(proposal(proposal, 1, 8397, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(8397), 20, reduce(a10, 300))]
[After]:{	@ctenv(functionToList(proposal(proposal, 1, 8397, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(8397), 20, reduce(a10, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@eb940db
[CTAH] The created APLList : [proposal,1,8397,open]
[Planbase]:{	if	B([actionresult([proposal,1,8397,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,8397,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(8397, 300) : 3 Jun 2015 20:43:00 GMT, priority 10)
}


[new scheduled]:[if B([actionresult([proposal,1,8397,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,8397,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(8397, 300) : 3 Jun 2015 20:43:00 GMT, priority 10)]
[After]:{	if	B([actionresult([proposal,1,8397,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,8397,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(8397, 300) : 3 Jun 2015 20:43:00 GMT, priority 10)
}


obligation to be adopted: respondToRequest(8397, 300) : 3 Jun 2015 20:43:00 GMT, priority 10
[Planbase]:{	if	B([actionresult([proposal,1,8397,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B([actionresult([proposal,1,8397,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([proposal,1,8397,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 8397, open)
		}
}


[new scheduled]:[if B(proposal=proposal) then ReceivedProposal(1, 8397, open)]
[After]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 8397, open)
		}
}


[Planbase]:{	ReceivedProposal(1, 8397, open)
}


[new scheduled]:[ReceivedProposal(1, 8397, open)]
[After]:{	ReceivedProposal(1, 8397, open)
}


[Planbase]:


[new scheduled]:[if G(acceptRequest(8397, 300)) then skip else if B(not scoreAfterExchange(8397, Score)) then getScoreAfterExchange(8397); B(scoreAfterExchange(8397, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8397, Answer), if G(acceptRequest(8397, V2)) then skip else if G(respondToRequest(8397, V2)) then skip else if G(acceptRequest(8397, V2)) then skip else if B(not receivedP(1, 8397, closed(A))) then adoptz(respondToRequest(8397, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(8397, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(8397, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(8397, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 8397, closed(A)))
							then	{	adoptz(respondToRequest(8397, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	G(acceptRequest(8397, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(8397, Score))
			then	{	getScoreAfterExchange(8397)
				}
		};
	B(scoreAfterExchange(8397, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8397, Answer)
}


[Planbase]:{	if	G(respondToRequest(8397, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8397, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 8397, closed(A)))
					then	{	adoptz(respondToRequest(8397, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(8397, Score))
	then	{	getScoreAfterExchange(8397)
		};
	B(scoreAfterExchange(8397, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8397, Answer)
}


[new scheduled]:[if G(respondToRequest(8397, V2)) then skip else if G(acceptRequest(8397, V2)) then skip else if B(not receivedP(1, 8397, closed(A))) then adoptz(respondToRequest(8397, 50) : Infinite, priority 10), if B(not scoreAfterExchange(8397, Score)) then getScoreAfterExchange(8397); B(scoreAfterExchange(8397, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8397, Answer)]
[After]:{	if	G(respondToRequest(8397, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8397, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 8397, closed(A)))
					then	{	adoptz(respondToRequest(8397, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(8397, Score))
	then	{	getScoreAfterExchange(8397)
		};
	B(scoreAfterExchange(8397, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8397, Answer)
}


[Planbase]:{	skip
},
{	getScoreAfterExchange(8397);
	B(scoreAfterExchange(8397, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8397, Answer)
}


[new scheduled]:[skip, getScoreAfterExchange(8397); B(scoreAfterExchange(8397, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8397, Answer)]
[After]:{	skip
},
{	getScoreAfterExchange(8397);
	B(scoreAfterExchange(8397, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8397, Answer)
}


[Planbase]:{	GetScoreAfterExchange(8397, yes);
	B(scoreAfterExchange(8397, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8397, Answer)
}


[new scheduled]:[if G(acceptRequest(8397, V2)) then skip else if G(respondToRequest(8397, V2)) then skip else if G(acceptRequest(8397, V2)) then skip else if B(not receivedP(1, 8397, closed(A))) then adoptz(respondToRequest(8397, 50) : Infinite, priority 10), GetScoreAfterExchange(8397, yes); B(scoreAfterExchange(8397, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8397, Answer)]
[After]:{	if	G(acceptRequest(8397, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(8397, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(8397, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 8397, closed(A)))
							then	{	adoptz(respondToRequest(8397, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	GetScoreAfterExchange(8397, yes);
	B(scoreAfterExchange(8397, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8397, Answer)
}


[Planbase]:{	if	G(respondToRequest(8397, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8397, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 8397, closed(A)))
					then	{	adoptz(respondToRequest(8397, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(8397, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8397, Answer)
}


[new scheduled]:[if G(respondToRequest(8397, V2)) then skip else if G(acceptRequest(8397, V2)) then skip else if B(not receivedP(1, 8397, closed(A))) then adoptz(respondToRequest(8397, 50) : Infinite, priority 10), B(scoreAfterExchange(8397, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8397, Answer)]
[After]:{	if	G(respondToRequest(8397, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8397, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 8397, closed(A)))
					then	{	adoptz(respondToRequest(8397, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(8397, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8397, Answer)
}


[Planbase]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8397, Answer)
}


[new scheduled]:[skip, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(8397, Answer)]
[After]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(8397, Answer)
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8397, accept)
}


[new scheduled]:[if G(acceptRequest(8397, V2)) then skip else if G(respondToRequest(8397, V2)) then skip else if G(acceptRequest(8397, V2)) then skip else if B(not receivedP(1, 8397, closed(A))) then adoptz(respondToRequest(8397, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(8397, accept)]
[After]:{	if	G(acceptRequest(8397, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(8397, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(8397, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 8397, closed(A)))
							then	{	adoptz(respondToRequest(8397, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(8397, accept)
}


[Planbase]:{	if	G(respondToRequest(8397, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8397, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 8397, closed(A)))
					then	{	adoptz(respondToRequest(8397, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(8397, accept)
}


[new scheduled]:[if G(respondToRequest(8397, V2)) then skip else if G(acceptRequest(8397, V2)) then skip else if B(not receivedP(1, 8397, closed(A))) then adoptz(respondToRequest(8397, 50) : Infinite, priority 10), B(accept=accept); sendResponse(8397, accept)]
[After]:{	if	G(respondToRequest(8397, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8397, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 8397, closed(A)))
					then	{	adoptz(respondToRequest(8397, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(8397, accept)
}


[Planbase]:{	skip
},
{	sendResponse(8397, accept)
}


[new scheduled]:[skip, sendResponse(8397, accept)]
[After]:{	skip
},
{	sendResponse(8397, accept)
}


[Planbase]:{	@ctenv(sendResponse(8397, accept),L1,0);
	SentResponse(accept, 8397)
}


[new scheduled]:[if G(acceptRequest(8397, V2)) then skip else if G(respondToRequest(8397, V2)) then skip else if G(acceptRequest(8397, V2)) then skip else if B(not receivedP(1, 8397, closed(A))) then adoptz(respondToRequest(8397, 50) : Infinite, priority 10), @ctenv(sendResponse(8397, accept),L1,0); SentResponse(accept, 8397)]
[After]:{	if	G(acceptRequest(8397, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(8397, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(8397, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 8397, closed(A)))
							then	{	adoptz(respondToRequest(8397, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	@ctenv(sendResponse(8397, accept),L1,0);
	SentResponse(accept, 8397)
}


a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 1.

org notification: Response [id=8397, response=accepted, clock=15, time=2015-06-03 21:26:21.012]
[Planbase]:{	if	G(respondToRequest(8397, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8397, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 8397, closed(A)))
					then	{	adoptz(respondToRequest(8397, 50) : Infinite, priority 10)
						}
				}
		}
}


[new scheduled]:[if G(respondToRequest(8397, V2)) then skip else if G(acceptRequest(8397, V2)) then skip else if B(not receivedP(1, 8397, closed(A))) then adoptz(respondToRequest(8397, 50) : Infinite, priority 10)]
[After]:{	if	G(respondToRequest(8397, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(8397, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 8397, closed(A)))
					then	{	adoptz(respondToRequest(8397, 50) : Infinite, priority 10)
						}
				}
		}
}


[Planbase]:{	if	G(acceptRequest(8397, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 8397, closed(A)))
			then	{	adoptz(respondToRequest(8397, 50) : Infinite, priority 10)
				}
		}
}


[new scheduled]:[if G(acceptRequest(8397, V2)) then skip else if B(not receivedP(1, 8397, closed(A))) then adoptz(respondToRequest(8397, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(8397, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 8397, closed(A)))
			then	{	adoptz(respondToRequest(8397, 50) : Infinite, priority 10)
				}
		}
}


[Planbase]:{	if	B(not receivedP(1, 8397, closed(A)))
	then	{	adoptz(respondToRequest(8397, 50) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(not receivedP(1, 8397, closed(A))) then adoptz(respondToRequest(8397, 50) : Infinite, priority 10)]
[After]:{	if	B(not receivedP(1, 8397, closed(A)))
	then	{	adoptz(respondToRequest(8397, 50) : Infinite, priority 10)
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=1762, agent=a20, agent2=a10, clock=15, time=2015-06-03 21:26:21.757]
object notification: Obligation [subject=a10, obligation=[respondToRequest(1762)], sanction=[reduce(a10, 300)], deadline=20, time=2015-06-03 21:26:21.761, clock=15]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(proposal(proposal, 1, 1762, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed adoptObligation(respondToRequest(1762), 20, reduce(a10, 300))
[Planbase]:{	@ctenv(functionToList(proposal(proposal, 1, 1762, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(1762), 20, reduce(a10, 300))
}


[new scheduled]:[@ctenv(functionToList(proposal(proposal, 1, 1762, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptObligation(respondToRequest(1762), 20, reduce(a10, 300))]
[After]:{	@ctenv(functionToList(proposal(proposal, 1, 1762, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptObligation(respondToRequest(1762), 20, reduce(a10, 300))
}


[CTAH] Array of Terms: [Lapapl.data.Term;@10d776fb
[CTAH] The created APLList : [proposal,1,1762,open]
[Planbase]:{	if	B([actionresult([proposal,1,1762,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,1762,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(1762, 300) : 3 Jun 2015 20:43:01 GMT, priority 10)
}


[new scheduled]:[if B([actionresult([proposal,1,1762,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,1762,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(respondToRequest(1762, 300) : 3 Jun 2015 20:43:01 GMT, priority 10)]
[After]:{	if	B([actionresult([proposal,1,1762,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,1762,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	adoptz(respondToRequest(1762, 300) : 3 Jun 2015 20:43:01 GMT, priority 10)
}


obligation to be adopted: respondToRequest(1762, 300) : 3 Jun 2015 20:43:01 GMT, priority 10
[Planbase]:{	if	B([actionresult([proposal,1,1762,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B([actionresult([proposal,1,1762,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([proposal,1,1762,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 1762, open)
		}
}


[new scheduled]:[if B(proposal=proposal) then ReceivedProposal(1, 1762, open)]
[After]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 1762, open)
		}
}


[Planbase]:{	ReceivedProposal(1, 1762, open)
}


[new scheduled]:[ReceivedProposal(1, 1762, open)]
[After]:{	ReceivedProposal(1, 1762, open)
}


[Planbase]:


[new scheduled]:[if G(acceptRequest(1762, 300)) then skip else if B(not scoreAfterExchange(1762, Score)) then getScoreAfterExchange(1762); B(scoreAfterExchange(1762, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1762, Answer), if G(acceptRequest(1762, V2)) then skip else if G(respondToRequest(1762, V2)) then skip else if G(acceptRequest(1762, V2)) then skip else if B(not receivedP(1, 1762, closed(A))) then adoptz(respondToRequest(1762, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(1762, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(1762, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(1762, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 1762, closed(A)))
							then	{	adoptz(respondToRequest(1762, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	G(acceptRequest(1762, 300))
	then	{	skip
		}
	else	{	if	B(not scoreAfterExchange(1762, Score))
			then	{	getScoreAfterExchange(1762)
				}
		};
	B(scoreAfterExchange(1762, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1762, Answer)
}


[Planbase]:{	if	G(respondToRequest(1762, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1762, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 1762, closed(A)))
					then	{	adoptz(respondToRequest(1762, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(1762, Score))
	then	{	getScoreAfterExchange(1762)
		};
	B(scoreAfterExchange(1762, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1762, Answer)
}


[new scheduled]:[if G(respondToRequest(1762, V2)) then skip else if G(acceptRequest(1762, V2)) then skip else if B(not receivedP(1, 1762, closed(A))) then adoptz(respondToRequest(1762, 50) : Infinite, priority 10), if B(not scoreAfterExchange(1762, Score)) then getScoreAfterExchange(1762); B(scoreAfterExchange(1762, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1762, Answer)]
[After]:{	if	G(respondToRequest(1762, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1762, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 1762, closed(A)))
					then	{	adoptz(respondToRequest(1762, 50) : Infinite, priority 10)
						}
				}
		}
},
{	if	B(not scoreAfterExchange(1762, Score))
	then	{	getScoreAfterExchange(1762)
		};
	B(scoreAfterExchange(1762, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1762, Answer)
}


[Planbase]:{	skip
},
{	getScoreAfterExchange(1762);
	B(scoreAfterExchange(1762, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1762, Answer)
}


[new scheduled]:[skip, getScoreAfterExchange(1762); B(scoreAfterExchange(1762, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1762, Answer)]
[After]:{	skip
},
{	getScoreAfterExchange(1762);
	B(scoreAfterExchange(1762, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1762, Answer)
}


[Planbase]:{	GetScoreAfterExchange(1762, yes);
	B(scoreAfterExchange(1762, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1762, Answer)
}


[new scheduled]:[if G(acceptRequest(1762, V2)) then skip else if G(respondToRequest(1762, V2)) then skip else if G(acceptRequest(1762, V2)) then skip else if B(not receivedP(1, 1762, closed(A))) then adoptz(respondToRequest(1762, 50) : Infinite, priority 10), GetScoreAfterExchange(1762, yes); B(scoreAfterExchange(1762, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1762, Answer)]
[After]:{	if	G(acceptRequest(1762, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(1762, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(1762, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 1762, closed(A)))
							then	{	adoptz(respondToRequest(1762, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	GetScoreAfterExchange(1762, yes);
	B(scoreAfterExchange(1762, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1762, Answer)
}


[Planbase]:{	if	G(respondToRequest(1762, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1762, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 1762, closed(A)))
					then	{	adoptz(respondToRequest(1762, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(1762, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1762, Answer)
}


[new scheduled]:[if G(respondToRequest(1762, V2)) then skip else if G(acceptRequest(1762, V2)) then skip else if B(not receivedP(1, 1762, closed(A))) then adoptz(respondToRequest(1762, 50) : Infinite, priority 10), B(scoreAfterExchange(1762, Score)); B(Answer=accept); if B(Score=yes) then B(Answer=accept) else if B(Score=no) then B(Answer=reject) else if B(Score>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1762, Answer)]
[After]:{	if	G(respondToRequest(1762, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1762, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 1762, closed(A)))
					then	{	adoptz(respondToRequest(1762, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(scoreAfterExchange(1762, Score));
	B(Answer=accept);
	if	B(Score=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(Score=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(Score>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1762, Answer)
}


[Planbase]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1762, Answer)
}


[new scheduled]:[skip, B(Answer=accept); if B(yes=yes) then B(Answer=accept) else if B(yes=no) then B(Answer=reject) else if B(yes>300) then B(Answer=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(Answer=reject); sendResponse(1762, Answer)]
[After]:{	skip
},
{	B(Answer=accept);
	if	B(yes=yes)
	then	{	B(Answer=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(Answer=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(Answer=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(Answer=reject)
										}
								}
						}
				}
		};
	sendResponse(1762, Answer)
}


[Planbase]:{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(1762, accept)
}


[new scheduled]:[if G(acceptRequest(1762, V2)) then skip else if G(respondToRequest(1762, V2)) then skip else if G(acceptRequest(1762, V2)) then skip else if B(not receivedP(1, 1762, closed(A))) then adoptz(respondToRequest(1762, 50) : Infinite, priority 10), if B(yes=yes) then B(accept=accept) else if B(yes=no) then B(accept=reject) else if B(yes>300) then B(accept=reject) else if B(prohibition(rejectRequests(V2))) then if B(V2<300) then B(accept=reject); sendResponse(1762, accept)]
[After]:{	if	G(acceptRequest(1762, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(1762, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(1762, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 1762, closed(A)))
							then	{	adoptz(respondToRequest(1762, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	if	B(yes=yes)
	then	{	B(accept=accept)
		}
	else	{	if	B(yes=no)
			then	{	B(accept=reject)
				}
			else	{	if	B(yes>300)
					then	{	B(accept=reject)
						}
					else	{	if	B(prohibition(rejectRequests(V2)))
							then	{	if	B(V2<300)
									then	{	B(accept=reject)
										}
								}
						}
				}
		};
	sendResponse(1762, accept)
}


[Planbase]:{	if	G(respondToRequest(1762, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1762, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 1762, closed(A)))
					then	{	adoptz(respondToRequest(1762, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(1762, accept)
}


[new scheduled]:[if G(respondToRequest(1762, V2)) then skip else if G(acceptRequest(1762, V2)) then skip else if B(not receivedP(1, 1762, closed(A))) then adoptz(respondToRequest(1762, 50) : Infinite, priority 10), B(accept=accept); sendResponse(1762, accept)]
[After]:{	if	G(respondToRequest(1762, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1762, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 1762, closed(A)))
					then	{	adoptz(respondToRequest(1762, 50) : Infinite, priority 10)
						}
				}
		}
},
{	B(accept=accept);
	sendResponse(1762, accept)
}


[Planbase]:{	skip
},
{	sendResponse(1762, accept)
}


[new scheduled]:[skip, sendResponse(1762, accept)]
[After]:{	skip
},
{	sendResponse(1762, accept)
}


[Planbase]:{	@ctenv(sendResponse(1762, accept),L1,0);
	SentResponse(accept, 1762)
}


[new scheduled]:[if G(acceptRequest(1762, V2)) then skip else if G(respondToRequest(1762, V2)) then skip else if G(acceptRequest(1762, V2)) then skip else if B(not receivedP(1, 1762, closed(A))) then adoptz(respondToRequest(1762, 50) : Infinite, priority 10), @ctenv(sendResponse(1762, accept),L1,0); SentResponse(accept, 1762)]
[After]:{	if	G(acceptRequest(1762, V2))
	then	{	skip
		}
	else	{	if	G(respondToRequest(1762, V2))
			then	{	skip
				}
			else	{	if	G(acceptRequest(1762, V2))
					then	{	skip
						}
					else	{	if	B(not receivedP(1, 1762, closed(A)))
							then	{	adoptz(respondToRequest(1762, 50) : Infinite, priority 10)
								}
						}
				}
		}
},
{	@ctenv(sendResponse(1762, accept),L1,0);
	SentResponse(accept, 1762)
}


a10[CTAH] sent response: Discourse Message...
From PerGameId: 0.
To PerGameId: 1.

org notification: Response [id=1762, response=accepted, clock=15, time=2015-06-03 21:26:22.529]
[Planbase]:{	if	G(respondToRequest(1762, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1762, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 1762, closed(A)))
					then	{	adoptz(respondToRequest(1762, 50) : Infinite, priority 10)
						}
				}
		}
}


[new scheduled]:[if G(respondToRequest(1762, V2)) then skip else if G(acceptRequest(1762, V2)) then skip else if B(not receivedP(1, 1762, closed(A))) then adoptz(respondToRequest(1762, 50) : Infinite, priority 10)]
[After]:{	if	G(respondToRequest(1762, V2))
	then	{	skip
		}
	else	{	if	G(acceptRequest(1762, V2))
			then	{	skip
				}
			else	{	if	B(not receivedP(1, 1762, closed(A)))
					then	{	adoptz(respondToRequest(1762, 50) : Infinite, priority 10)
						}
				}
		}
}


[Planbase]:{	if	G(acceptRequest(1762, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 1762, closed(A)))
			then	{	adoptz(respondToRequest(1762, 50) : Infinite, priority 10)
				}
		}
}


[new scheduled]:[if G(acceptRequest(1762, V2)) then skip else if B(not receivedP(1, 1762, closed(A))) then adoptz(respondToRequest(1762, 50) : Infinite, priority 10)]
[After]:{	if	G(acceptRequest(1762, V2))
	then	{	skip
		}
	else	{	if	B(not receivedP(1, 1762, closed(A)))
			then	{	adoptz(respondToRequest(1762, 50) : Infinite, priority 10)
				}
		}
}


a30[CTAH] path: 0
a30[CTAH] path: Path: [2][3] [2][2]

a30[CTAH] moveStepToGoalTest returns I have chip: [2,2,no,no]
Event processed UpdateClock(15)
[Planbase]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(2, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(2, 2)
		}
},
{	UpdateClock(15)
}


[new scheduled]:[B(clock(Clock)); if B(not no=no) then {NextStep(2, 2, no); SentProposal(no, no, open, Clock)} else NextStep(2, 2), UpdateClock(15)]
[After]:{	B(clock(Clock));
	if	B(not no=no)
	then	{	NextStep(2, 2, no);
			SentProposal(no, no, open, Clock)
		}
	else	{	NextStep(2, 2)
		}
},
{	UpdateClock(15)
}


[Planbase]:{	if	B(not receivedP(1, 1762, closed(A)))
	then	{	adoptz(respondToRequest(1762, 50) : Infinite, priority 10)
		}
}


[new scheduled]:[if B(not receivedP(1, 1762, closed(A))) then adoptz(respondToRequest(1762, 50) : Infinite, priority 10)]
[After]:{	if	B(not receivedP(1, 1762, closed(A)))
	then	{	adoptz(respondToRequest(1762, 50) : Infinite, priority 10)
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(2, 2, no);
			SentProposal(no, no, open, 14)
		}
	else	{	NextStep(2, 2)
		}
}


[new scheduled]:[if B(not no=no) then {NextStep(2, 2, no); SentProposal(no, no, open, 14)} else NextStep(2, 2)]
[After]:{	if	B(not no=no)
	then	{	NextStep(2, 2, no);
			SentProposal(no, no, open, 14)
		}
	else	{	NextStep(2, 2)
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	NextStep(2, 2)
}


[new scheduled]:[NextStep(2, 2)]
[After]:{	NextStep(2, 2)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700)]
[After]:{	findNextStep(neco, 700)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 2, 2),L2,0);
	if	B(L2=[actionresult([2,2])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 2, Clock)
		};
	NoNextStep(2, 2)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 2, 2),L2,0); if B(L2=[actionresult([2,2])]) then {B(clock(Clock)); UpdatePosition(2, 2, Clock)}; NoNextStep(2, 2)]
[After]:{	@ctenv(moveStepToGoal(neco, 2, 2),L2,0);
	if	B(L2=[actionresult([2,2])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 2, Clock)
		};
	NoNextStep(2, 2)
}


Need to wait 3 more seconds
org notification: Position [subject=a30, id=null, cell=Cell [x=2, y=2], time=2015-06-03 21:26:22.944, clock=15]
object notification: Position [subject=a30, id=null, cell=Cell [x=2, y=2], time=2015-06-03 21:26:22.944, clock=15]
object notification: Points [subject=a30, time=2015-06-03 21:26:22.953, clock=15, value=900, id=null]
org notification: Position [subject=a20, id=null, cell=Cell [x=5, y=3], time=2015-06-03 21:26:24.676, clock=15]
a30[CTAH] moveStepToGoal returns: [2,2]
Event processed UpdatePosition(2, 2, 15)
Event processed UpdatePoints(900)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(2, 2, Clock);
	NoNextStep(2, 2)
},
{	UpdatePosition(2, 2, 15)
},
{	UpdatePoints(900)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(2, 2, Clock); NoNextStep(2, 2), UpdatePosition(2, 2, 15), UpdatePoints(900)]
[After]:{	B(clock(Clock));
	UpdatePosition(2, 2, Clock);
	NoNextStep(2, 2)
},
{	UpdatePosition(2, 2, 15)
},
{	UpdatePoints(900)
}


[Planbase]:{	UpdatePosition(2, 2, 15);
	NoNextStep(2, 2)
}


[new scheduled]:[UpdatePosition(2, 2, 15); NoNextStep(2, 2)]
[After]:{	UpdatePosition(2, 2, 15);
	NoNextStep(2, 2)
}


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=16, time=2015-06-03 21:26:29.587]
object notification: Time [clock=16, time=2015-06-03 21:26:29.587]
object notification: Time [clock=16, time=2015-06-03 21:26:29.587]
object notification: Time [clock=16, time=2015-06-03 21:26:29.587]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(16)
[Planbase]:{	UpdateClock(16)
}


[new scheduled]:[UpdateClock(16)]
[After]:{	UpdateClock(16)
}


Event processed UpdateClock(16)
Event processed UpdateClock(16)
[Planbase]:{	UpdateClock(16)
}


[new scheduled]:[UpdateClock(16)]
[After]:{	UpdateClock(16)
}


[Planbase]:{	UpdateClock(16)
}


[new scheduled]:[UpdateClock(16)]
[After]:{	UpdateClock(16)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=17, time=2015-06-03 21:26:39.59]
object notification: Time [clock=17, time=2015-06-03 21:26:39.59]
org notification: Time [clock=17, time=2015-06-03 21:26:39.59]
object notification: Time [clock=17, time=2015-06-03 21:26:39.59]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(17)
Event processed UpdateClock(17)
Event processed UpdateClock(17)
[Planbase]:{	UpdateClock(17)
}


[new scheduled]:[UpdateClock(17)]
[After]:{	UpdateClock(17)
}


[Planbase]:{	UpdateClock(17)
}


[new scheduled]:[UpdateClock(17)]
[After]:{	UpdateClock(17)
}


[Planbase]:{	UpdateClock(17)
}


[new scheduled]:[UpdateClock(17)]
[After]:{	UpdateClock(17)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Position [subject=a20, id=null, cell=Cell [x=4, y=3], time=2015-06-03 21:26:40.135, clock=17]
object notification: Time [clock=18, time=2015-06-03 21:26:49.592]
org notification: Time [clock=18, time=2015-06-03 21:26:49.592]
object notification: Time [clock=18, time=2015-06-03 21:26:49.592]
object notification: Time [clock=18, time=2015-06-03 21:26:49.592]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(18)
Event processed UpdateClock(18)
Event processed UpdateClock(18)
[Planbase]:{	UpdateClock(18)
}


[new scheduled]:[UpdateClock(18)]
[After]:{	UpdateClock(18)
}


[Planbase]:{	UpdateClock(18)
}


[new scheduled]:[UpdateClock(18)]
[After]:{	UpdateClock(18)
}


[Planbase]:{	UpdateClock(18)
}


[new scheduled]:[UpdateClock(18)]
[After]:{	UpdateClock(18)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Position [subject=a20, id=null, cell=Cell [x=3, y=3], time=2015-06-03 21:26:50.536, clock=18]
org notification: Time [clock=19, time=2015-06-03 21:26:59.595]
object notification: Time [clock=19, time=2015-06-03 21:26:59.595]
object notification: Time [clock=19, time=2015-06-03 21:26:59.595]
object notification: Time [clock=19, time=2015-06-03 21:26:59.595]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(19)
Event processed UpdateClock(19)
Event processed UpdateClock(19)
[Planbase]:{	UpdateClock(19)
}


[new scheduled]:[UpdateClock(19)]
[After]:{	UpdateClock(19)
}


[Planbase]:{	UpdateClock(19)
}


[new scheduled]:[UpdateClock(19)]
[After]:{	UpdateClock(19)
}


[Planbase]:{	UpdateClock(19)
}


[new scheduled]:[UpdateClock(19)]
[After]:{	UpdateClock(19)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Position [subject=a20, id=null, cell=Cell [x=2, y=3], time=2015-06-03 21:27:03.795, clock=19]
org notification: Time [clock=20, time=2015-06-03 21:27:09.599]
object notification: Time [clock=20, time=2015-06-03 21:27:09.599]
object notification: Time [clock=20, time=2015-06-03 21:27:09.599]
object notification: Time [clock=20, time=2015-06-03 21:27:09.599]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(20)
Event processed UpdateClock(20)
Event processed UpdateClock(20)
[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Position [subject=a20, id=null, cell=Cell [x=1, y=3], time=2015-06-03 21:27:11.521, clock=20]
object notification: Time [clock=21, time=2015-06-03 21:27:19.602]
object notification: Time [clock=21, time=2015-06-03 21:27:19.602]
org notification: Time [clock=21, time=2015-06-03 21:27:19.602]
object notification: Time [clock=21, time=2015-06-03 21:27:19.602]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(21)
Event processed UpdateClock(21)
Event processed UpdateClock(21)
[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Position [subject=a20, id=null, cell=Cell [x=0, y=3], time=2015-06-03 21:27:21.299, clock=21]
object notification: Time [clock=22, time=2015-06-03 21:27:29.606]
org notification: Time [clock=22, time=2015-06-03 21:27:29.606]
object notification: Time [clock=22, time=2015-06-03 21:27:29.606]
object notification: Time [clock=22, time=2015-06-03 21:27:29.606]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[Planbase]:


[new scheduled]:[]
[After]:


[After]:


Event processed UpdateClock(22)
Event processed UpdateClock(22)
Event processed UpdateClock(22)
[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Position [subject=a20, id=null, cell=Cell [x=0, y=2], time=2015-06-03 21:27:31.057, clock=22]
object notification: Time [clock=23, time=2015-06-03 21:27:39.609]
object notification: Time [clock=23, time=2015-06-03 21:27:39.609]
org notification: Time [clock=23, time=2015-06-03 21:27:39.609]
object notification: Time [clock=23, time=2015-06-03 21:27:39.609]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(23)
[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


Event processed UpdateClock(23)
Event processed UpdateClock(23)
[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=24, time=2015-06-03 21:27:49.612]
object notification: Time [clock=24, time=2015-06-03 21:27:49.612]
object notification: Time [clock=24, time=2015-06-03 21:27:49.612]
object notification: Time [clock=24, time=2015-06-03 21:27:49.612]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(24)
Event processed UpdateClock(24)
Event processed UpdateClock(24)
[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=25, time=2015-06-03 21:27:59.616]
org notification: Time [clock=25, time=2015-06-03 21:27:59.616]
object notification: Time [clock=25, time=2015-06-03 21:27:59.616]
object notification: Time [clock=25, time=2015-06-03 21:27:59.616]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(25)
Event processed UpdateClock(25)
Event processed UpdateClock(25)
[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


setPhases in ClientGameStatus, the current phase is Feedback Phase
setPhases in ClientGameStatus, the current phase is Feedback Phase
setPhases in ClientGameStatus, the current phase is Feedback Phase
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@7c5eb59e
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@191eedf1
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@62b04947
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(feedbackphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(feedbackphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 0.
PIN: 10.
Pos: (R:1,C:1).
Chips: { chips  'blue':0 'white':5 'brown':0 'yellow':0 }.
Score: 1000.
Team: -1.

(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 2.
PIN: 30.
Pos: (R:2,C:2).
Chips: { chips  'blue':7 'white':0 'brown':0 'yellow':0 }.
Score: 900.
Team: -1.

(((((((((((((((((Game ended)))))))))))
Game ended 
My PlayerStatus is: Game Player...
PerGameId: 3.
PIN: 40.
Pos: (R:1,C:3).
Chips: { chips  'blue':0 'white':0 'brown':0 'yellow':9 }.
Score: 600.
Team: -1.

[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(game_ended)),LIST,0); if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedResponse(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(game_ended)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedResponse(RESPONSE, ID)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@33cc290c
[CTAH] The created APLList : [game_ended]
[CTAH] Array of Terms: [Lapapl.data.Term;@74e800c8
[CTAH] The created APLList : [game_ended]
[CTAH] Array of Terms: [Lapapl.data.Term;@587cdf28
[CTAH] The created APLList : [game_ended]
[Planbase]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([game_ended])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([game_ended])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_ended])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedEvent(game_ended)]
[After]:{	ReceivedEvent(game_ended)
}


[Planbase]:{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedEvent(game_ended)]
[After]:{	ReceivedEvent(game_ended)
}


[Planbase]:{	ReceivedEvent(game_ended)
}


[new scheduled]:[ReceivedEvent(game_ended)]
[After]:{	ReceivedEvent(game_ended)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=26, time=2015-06-03 21:28:09.619]
object notification: Time [clock=26, time=2015-06-03 21:28:09.619]
org notification: Time [clock=26, time=2015-06-03 21:28:09.619]
object notification: Time [clock=26, time=2015-06-03 21:28:09.619]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(26)
Event processed UpdateClock(26)
Event processed UpdateClock(26)
[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=27, time=2015-06-03 21:28:19.621]
org notification: Time [clock=27, time=2015-06-03 21:28:19.621]
object notification: Time [clock=27, time=2015-06-03 21:28:19.621]
object notification: Time [clock=27, time=2015-06-03 21:28:19.621]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(27)
Event processed UpdateClock(27)
Event processed UpdateClock(27)
[Planbase]:{	UpdateClock(27)
}


[new scheduled]:[UpdateClock(27)]
[After]:{	UpdateClock(27)
}


[Planbase]:{	UpdateClock(27)
}


[new scheduled]:[UpdateClock(27)]
[After]:{	UpdateClock(27)
}


[Planbase]:{	UpdateClock(27)
}


[new scheduled]:[UpdateClock(27)]
[After]:{	UpdateClock(27)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=28, time=2015-06-03 21:28:29.624]
object notification: Time [clock=28, time=2015-06-03 21:28:29.624]
object notification: Time [clock=28, time=2015-06-03 21:28:29.624]
org notification: Time [clock=28, time=2015-06-03 21:28:29.624]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(28)
Event processed UpdateClock(28)
Event processed UpdateClock(28)
[Planbase]:{	UpdateClock(28)
}


[new scheduled]:[UpdateClock(28)]
[After]:{	UpdateClock(28)
}


[Planbase]:{	UpdateClock(28)
}


[new scheduled]:[UpdateClock(28)]
[After]:{	UpdateClock(28)
}


[Planbase]:{	UpdateClock(28)
}


[new scheduled]:[UpdateClock(28)]
[After]:{	UpdateClock(28)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=29, time=2015-06-03 21:28:39.626]
org notification: Time [clock=29, time=2015-06-03 21:28:39.626]
object notification: Time [clock=29, time=2015-06-03 21:28:39.626]
object notification: Time [clock=29, time=2015-06-03 21:28:39.626]
object notification: Points [subject=a10, time=2015-06-03 21:28:39.636, clock=29, value=300, id=null]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(29)
Event processed UpdatePoints(300)
Event processed UpdateClock(29)
Event processed UpdateClock(29)
[Planbase]:{	UpdateClock(29)
},
{	UpdatePoints(300)
}


[new scheduled]:[UpdateClock(29), UpdatePoints(300)]
[After]:{	UpdateClock(29)
},
{	UpdatePoints(300)
}


[Planbase]:{	UpdateClock(29)
}


[new scheduled]:[UpdateClock(29)]
[After]:{	UpdateClock(29)
}


[Planbase]:{	UpdateClock(29)
}


[new scheduled]:[UpdateClock(29)]
[After]:{	UpdateClock(29)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


object notification: Time [clock=30, time=2015-06-03 21:28:49.628]
org notification: Time [clock=30, time=2015-06-03 21:28:49.628]
object notification: Time [clock=30, time=2015-06-03 21:28:49.628]
object notification: Time [clock=30, time=2015-06-03 21:28:49.628]
object notification: Points [subject=a40, time=2015-06-03 21:28:49.643, clock=30, value=300, id=null]
object notification: Points [subject=a30, time=2015-06-03 21:28:49.645, clock=30, value=600, id=null]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[Planbase]:


[new scheduled]:[]
[After]:


[After]:


Event processed UpdateClock(30)
Event processed UpdateClock(30)
Event processed UpdatePoints(600)
Event processed UpdateClock(30)
Event processed UpdatePoints(300)
[Planbase]:{	UpdateClock(30)
}


[new scheduled]:[UpdateClock(30)]
[After]:{	UpdateClock(30)
}


[Planbase]:{	UpdateClock(30)
},
{	UpdatePoints(600)
}


[new scheduled]:[UpdateClock(30), UpdatePoints(600)]
[After]:{	UpdateClock(30)
},
{	UpdatePoints(600)
}


[Planbase]:{	UpdateClock(30)
},
{	UpdatePoints(300)
}


[new scheduled]:[UpdateClock(30), UpdatePoints(300)]
[After]:{	UpdateClock(30)
},
{	UpdatePoints(300)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


