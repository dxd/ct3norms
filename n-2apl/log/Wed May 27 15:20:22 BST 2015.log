-------------------------last log tuples start--------------------------------
Time [clock=1, time=2015-05-27 15:19:59.325]
org notification: Time [clock=1, time=2015-05-27 15:19:59.325]
Time [clock=2, time=2015-05-27 15:20:09.342]
org notification: Time [clock=2, time=2015-05-27 15:20:09.342]
Time [clock=3, time=2015-05-27 15:20:19.346]
-------------------------last log tuples end----------------------------------
org notification: Time [clock=3, time=2015-05-27 15:20:19.346]
[CTAH] started agent 10
[CTAH] Added a new agent to the game by the name of 10.
[ENV] added agent a10
[CTAH] started agent 30
[CTAH] Added a new agent to the game by the name of 30.
[ENV] added agent a30
[CTAH] started agent 40
[CTAH] Added a new agent to the game by the name of 40.
[ENV] added agent a40
org notification: Time [clock=4, time=2015-05-27 15:20:29.348]
object notification: Time [clock=4, time=2015-05-27 15:20:29.348]
object notification: Time [clock=4, time=2015-05-27 15:20:29.348]
object notification: Time [clock=4, time=2015-05-27 15:20:29.348]
org notification: Time [clock=4, time=2015-05-27 15:20:29.348]
org notification: Time [clock=1, time=2015-05-27 15:20:32.635]
object notification: Time [clock=1, time=2015-05-27 15:20:32.635]
org notification: Time [clock=1, time=2015-05-27 15:20:32.635]
object notification: Time [clock=1, time=2015-05-27 15:20:32.635]
object notification: Time [clock=1, time=2015-05-27 15:20:32.635]
#########################Game started
#########################Game started
#########################Game started
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
org notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-27 15:20:34.413, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-27 15:20:34.413, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-27 15:20:34.413, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-27 15:20:34.413, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-27 15:20:34.413, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-27 15:20:34.444, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-27 15:20:34.446, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-27 15:20:34.444, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-27 15:20:34.449, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-27 15:20:34.444, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-27 15:20:34.444, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-27 15:20:34.446, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-27 15:20:34.444, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-27 15:20:34.446, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-27 15:20:34.446, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-27 15:20:34.449, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-27 15:20:34.449, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-27 15:20:34.452, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-27 15:20:34.452, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-27 15:20:34.446, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-27 15:20:34.449, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-27 15:20:34.461, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-27 15:20:34.449, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-27 15:20:34.452, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-27 15:20:34.461, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-27 15:20:34.452, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-27 15:20:34.461, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-27 15:20:34.465, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-27 15:20:34.465, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-27 15:20:34.461, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-27 15:20:34.465, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-27 15:20:34.468, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-27 15:20:34.468, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-27 15:20:34.468, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-27 15:20:34.47, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-27 15:20:34.47, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-27 15:20:34.47, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-27 15:20:34.472, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-27 15:20:34.472, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-27 15:20:34.472, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-27 15:20:34.475, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-27 15:20:34.475, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-27 15:20:34.475, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-27 15:20:34.484, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-27 15:20:34.484, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-27 15:20:34.484, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-27 15:20:34.488, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-27 15:20:34.488, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-27 15:20:34.488, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-27 15:20:34.509, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-27 15:20:34.509, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-27 15:20:34.509, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-27 15:20:34.518, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-27 15:20:34.518, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-27 15:20:34.518, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-27 15:20:34.521, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-27 15:20:34.521, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-27 15:20:34.521, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-27 15:20:34.452, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-27 15:20:34.461, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-27 15:20:34.465, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-27 15:20:34.468, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-27 15:20:34.531, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-27 15:20:34.531, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-27 15:20:34.531, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-27 15:20:34.47, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-27 15:20:34.472, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-27 15:20:34.536, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-27 15:20:34.536, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-27 15:20:34.536, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-27 15:20:34.475, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-27 15:20:34.484, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-27 15:20:34.488, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-27 15:20:34.509, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-27 15:20:34.549, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-27 15:20:34.549, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-27 15:20:34.549, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-27 15:20:34.518, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-27 15:20:34.521, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-27 15:20:34.556, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-27 15:20:34.556, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-27 15:20:34.556, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-27 15:20:34.559, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-27 15:20:34.559, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-27 15:20:34.559, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-27 15:20:34.563, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-27 15:20:34.563, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-27 15:20:34.563, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-27 15:20:34.569, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-27 15:20:34.569, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-27 15:20:34.569, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-27 15:20:34.574, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-27 15:20:34.574, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-27 15:20:34.574, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-27 15:20:34.577, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-27 15:20:34.579, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-27 15:20:34.577, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-27 15:20:34.581, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-27 15:20:34.579, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-27 15:20:34.584, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-27 15:20:34.581, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-27 15:20:34.587, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-27 15:20:34.584, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-27 15:20:34.59, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-27 15:20:34.587, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-27 15:20:34.59, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-27 15:20:34.592, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-27 15:20:34.592, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-27 15:20:34.577, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-27 15:20:34.579, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-27 15:20:34.581, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-27 15:20:34.584, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-27 15:20:34.587, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-27 15:20:34.59, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-27 15:20:34.592, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-27 15:20:34.596, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-27 15:20:34.596, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-27 15:20:34.596, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-27 15:20:34.465, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-27 15:20:34.598, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-27 15:20:34.598, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-27 15:20:34.598, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-27 15:20:34.602, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-27 15:20:34.602, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-27 15:20:34.604, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-27 15:20:34.604, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-27 15:20:34.602, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-27 15:20:34.604, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-27 15:20:34.468, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-27 15:20:34.606, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-27 15:20:34.606, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-27 15:20:34.606, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-27 15:20:34.47, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-27 15:20:34.608, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-27 15:20:34.608, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-27 15:20:34.608, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-27 15:20:34.472, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-27 15:20:34.475, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-27 15:20:34.614, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-27 15:20:34.614, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-27 15:20:34.614, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-27 15:20:34.484, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-27 15:20:34.63, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-27 15:20:34.63, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-27 15:20:34.63, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-27 15:20:34.634, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-27 15:20:34.634, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-27 15:20:34.634, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-27 15:20:34.636, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-27 15:20:34.639, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-27 15:20:34.636, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-27 15:20:34.636, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-27 15:20:34.65, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-27 15:20:34.639, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-27 15:20:34.531, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-27 15:20:34.654, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-27 15:20:34.639, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-27 15:20:34.657, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-27 15:20:34.65, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-27 15:20:34.65, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-27 15:20:34.536, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-27 15:20:34.654, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-27 15:20:34.659, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-27 15:20:34.654, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-27 15:20:34.657, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-27 15:20:34.657, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-27 15:20:34.659, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-27 15:20:34.661, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-27 15:20:34.661, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-27 15:20:34.659, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-27 15:20:34.549, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-27 15:20:34.663, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-27 15:20:34.666, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-27 15:20:34.556, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-27 15:20:34.559, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-27 15:20:34.661, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-27 15:20:34.563, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-27 15:20:34.663, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-27 15:20:34.666, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-27 15:20:34.569, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-27 15:20:34.488, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-27 15:20:34.663, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-27 15:20:34.574, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-27 15:20:34.666, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-27 15:20:34.577, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-27 15:20:34.509, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-27 15:20:34.579, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-27 15:20:34.518, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-27 15:20:34.521, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-27 15:20:34.531, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-27 15:20:34.581, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-27 15:20:34.536, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-27 15:20:34.584, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-27 15:20:34.549, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-27 15:20:34.587, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-27 15:20:34.556, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-27 15:20:34.59, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-27 15:20:34.559, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-27 15:20:34.592, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-27 15:20:34.563, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-27 15:20:34.596, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-27 15:20:34.569, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-27 15:20:34.574, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-27 15:20:34.598, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-27 15:20:34.577, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-27 15:20:34.602, clock=0]
org notification: Goal [id=null, cell=Cell [x=3, y=3], agent=null, time=2015-05-27 15:20:34.716, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-27 15:20:34.579, clock=0]
org notification: Goal [id=null, cell=Cell [x=3, y=3], agent=null, time=2015-05-27 15:20:34.716, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-27 15:20:34.604, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-27 15:20:34.581, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-27 15:20:34.606, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-27 15:20:34.584, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-27 15:20:34.587, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-27 15:20:34.59, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-27 15:20:34.592, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-27 15:20:34.596, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-27 15:20:34.598, clock=0]
org notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-27 15:20:34.602, clock=0]
org notification: Group [name=g, ra=a10, clock=0, time=2015-05-27 15:20:34.806]
org notification: Group [name=g, ra=a10, clock=0, time=2015-05-27 15:20:34.806]
org notification: Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-27 15:20:34.604, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-27 15:20:34.606, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-27 15:20:34.608, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-27 15:20:34.608, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-27 15:20:34.614, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-27 15:20:34.63, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-27 15:20:34.634, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-27 15:20:34.636, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-27 15:20:34.639, clock=0]
object notification: Obligation [subject=a10, obligation=[surround(3, 3)], sanction=[reduce(g, 700)], deadline=31, time=2015-05-27 15:20:34.883, clock=4]
object notification: Prohibition [subject=a10, prohibition=[rejectRequests], sanction=[reduce(a10, 500)], clock=4, time=2015-05-27 15:20:34.887]
object notification: Prohibition [subject=a30, prohibition=[rejectRequests], sanction=[reduce(a30, 500)], clock=4, time=2015-05-27 15:20:34.901]
object notification: Prohibition [subject=a40, prohibition=[rejectRequests], sanction=[reduce(a40, 500)], clock=4, time=2015-05-27 15:20:34.905]
org notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-27 15:20:34.614, clock=0]
object notification: Prohibition [subject=a10, prohibition=[moveTooFast], sanction=[reduce(a10, 300)], clock=4, time=2015-05-27 15:20:34.921]
object notification: Obligation [subject=a10, obligation=[surround(3, 3)], sanction=[reduce(g, 700)], deadline=31, time=2015-05-27 15:20:34.92, clock=1]
object notification: Prohibition [subject=a10, prohibition=[rejectRequests], sanction=[reduce(a10, 500)], clock=1, time=2015-05-27 15:20:34.928]
object notification: Prohibition [subject=a30, prohibition=[rejectRequests], sanction=[reduce(a30, 500)], clock=1, time=2015-05-27 15:20:34.97]
object notification: Prohibition [subject=a40, prohibition=[rejectRequests], sanction=[reduce(a40, 500)], clock=1, time=2015-05-27 15:20:34.976]
object notification: Prohibition [subject=a10, prohibition=[moveTooFast], sanction=[reduce(a10, 300)], clock=1, time=2015-05-27 15:20:34.979]
object notification: Prohibition [subject=a40, prohibition=[moveTooFast], sanction=[reduce(a40, 300)], clock=4, time=2015-05-27 15:20:34.991]
object notification: Prohibition [subject=a30, prohibition=[moveTooFast], sanction=[reduce(a30, 300)], clock=1, time=2015-05-27 15:20:34.984]
object notification: Prohibition [subject=a40, prohibition=[moveTooFast], sanction=[reduce(a40, 300)], clock=1, time=2015-05-27 15:20:35.016]
object notification: Prohibition [subject=a30, prohibition=[moveTooFast], sanction=[reduce(a30, 300)], clock=4, time=2015-05-27 15:20:34.985]
org notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-27 15:20:34.65, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-27 15:20:34.63, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-27 15:20:34.654, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-27 15:20:34.634, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-27 15:20:34.636, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-27 15:20:34.639, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-27 15:20:34.65, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-27 15:20:34.657, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-27 15:20:34.654, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-27 15:20:34.659, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-27 15:20:34.657, clock=0]
#########################Game Initialized
AGENT Thread-18: current phase name: Norm Phase
we have 1 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
org notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-27 15:20:34.661, clock=0]
#########################Game Initialized
AGENT Thread-16: current phase name: Norm Phase
we have 1 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
#########################Game Initialized
AGENT Thread-20: current phase name: Norm Phase
we have 1 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
org notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-27 15:20:34.659, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-27 15:20:34.663, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-27 15:20:34.661, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-27 15:20:34.666, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-27 15:20:34.663, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-27 15:20:34.666, clock=0]
[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


Event processed UpdateClock(4)
Event processed UpdateClock(4)
Event processed UpdateClock(1)
Event processed UpdateClock(1)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateTile(brown, 0, 0)
Event processed UpdateTile(brown, 0, 0)
Event processed UpdateTile(brown, 0, 1)
Event processed UpdateTile(brown, 0, 1)
Event processed UpdateTile(white, 0, 2)
Event processed UpdateTile(white, 0, 2)
Event processed UpdateTile(yellow, 0, 3)
Event processed UpdateTile(yellow, 0, 3)
Event processed UpdateTile(brown, 0, 4)
Event processed UpdateTile(brown, 0, 4)
Event processed UpdateTile(blue, 0, 5)
Event processed UpdateTile(blue, 0, 5)
Event processed UpdateTile(brown, 0, 6)
Event processed UpdateTile(brown, 0, 6)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(yellow, 1, 1)
Event processed UpdateTile(yellow, 1, 1)
Event processed UpdateTile(white, 1, 2)
Event processed UpdateTile(white, 1, 2)
Event processed UpdateTile(white, 1, 3)
Event processed UpdateTile(blue, 1, 4)
Event processed UpdateTile(white, 1, 3)
Event processed UpdateTile(brown, 1, 5)
Event processed UpdateTile(blue, 1, 4)
Event processed UpdateTile(yellow, 1, 6)
Event processed UpdateClock(4)
Event processed UpdateTile(brown, 1, 5)
Event processed UpdateClock(1)
Event processed UpdateTile(white, 2, 0)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateTile(white, 2, 1)
Event processed UpdateTile(brown, 0, 0)
Event processed UpdateTile(yellow, 1, 6)
Event processed UpdateTile(brown, 0, 1)
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(white, 0, 2)
Event processed UpdateTile(brown, 2, 2)
Event processed UpdateTile(white, 2, 1)
Event processed UpdateTile(yellow, 0, 3)
Event processed UpdateTile(blue, 2, 3)
Event processed UpdateTile(brown, 2, 2)
Event processed UpdateTile(white, 2, 4)
Event processed UpdateTile(brown, 0, 4)
Event processed UpdateTile(blue, 0, 5)
Event processed UpdateTile(blue, 2, 3)
Event processed UpdateTile(brown, 0, 6)
Event processed UpdateTile(brown, 2, 5)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(brown, 2, 6)
Event processed UpdateTile(white, 2, 4)
Event processed UpdateTile(yellow, 1, 1)
Event processed UpdateTile(white, 3, 0)
Event processed UpdateTile(white, 1, 2)
Event processed UpdateTile(brown, 2, 5)
Event processed UpdateTile(white, 1, 3)
Event processed UpdateTile(brown, 2, 6)
Event processed UpdateTile(blue, 1, 4)
Event processed UpdateTile(white, 3, 0)
Event processed UpdateTile(brown, 1, 5)
Event processed UpdateTile(yellow, 3, 1)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(yellow, 3, 1)
Event processed UpdateTile(yellow, 1, 6)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(blue, 3, 3)
Event processed UpdateTile(blue, 3, 3)
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(yellow, 3, 5)
Event processed UpdateTile(yellow, 3, 5)
Event processed UpdateTile(white, 3, 6)
Event processed UpdateTile(white, 3, 6)
Event processed UpdateTile(brown, 4, 0)
Event processed UpdateTile(brown, 4, 0)
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(blue, 4, 3)
Event processed UpdateTile(blue, 4, 3)
Event processed UpdateTile(brown, 4, 4)
Event processed UpdateTile(brown, 4, 4)
Event processed UpdateTile(yellow, 4, 5)
Event processed UpdateTile(yellow, 4, 5)
Event processed UpdateTile(brown, 4, 6)
Event processed UpdateTile(yellow, 5, 0)
Event processed UpdateTile(brown, 4, 6)
Event processed UpdateTile(white, 5, 1)
Event processed UpdateTile(yellow, 5, 0)
Event processed UpdateTile(brown, 5, 2)
Event processed UpdateTile(white, 5, 1)
Event processed UpdateTile(yellow, 5, 3)
Event processed UpdateTile(brown, 5, 2)
Event processed UpdateTile(blue, 5, 4)
Event processed UpdateTile(brown, 5, 5)
Event processed UpdateTile(yellow, 5, 3)
Event processed UpdateTile(white, 5, 6)
Event processed UpdateTile(blue, 5, 4)
Event processed UpdateTile(blue, 6, 0)
Event processed UpdateTile(brown, 5, 5)
Event processed UpdateTile(brown, 6, 1)
Event processed UpdateTile(white, 5, 6)
Event processed UpdateTile(white, 6, 2)
Event processed UpdateTile(blue, 6, 0)
Event processed UpdateTile(brown, 6, 3)
Event processed UpdateTile(brown, 6, 1)
Event processed UpdateTile(white, 6, 4)
Event processed UpdateTile(white, 6, 2)
Event processed UpdateTile(brown, 6, 5)
Event processed UpdateTile(white, 6, 6)
Event processed UpdateTile(brown, 6, 3)
Event processed adoptProhibition(rejectRequests, reduce(a30, 500))
Event processed UpdateTile(white, 6, 4)
Event processed adoptProhibition(rejectRequests, reduce(a30, 500))
Event processed UpdateTile(brown, 6, 5)
Event processed adoptProhibition(moveTooFast, reduce(a30, 300))
Event processed UpdateTile(white, 6, 6)
Event processed adoptProhibition(moveTooFast, reduce(a30, 300))
Event processed adoptObligation(surround(3, 3), 31, reduce(g, 700))
Event processed adoptProhibition(rejectRequests, reduce(a10, 500))
Event processed adoptProhibition(moveTooFast, reduce(a10, 300))
Event processed adoptObligation(surround(3, 3), 31, reduce(g, 700))
Event processed adoptProhibition(rejectRequests, reduce(a10, 500))
Event processed adoptProhibition(moveTooFast, reduce(a10, 300))
Event processed UpdateTile(white, 2, 1)
Event processed UpdateTile(brown, 2, 2)
Event processed UpdateTile(blue, 2, 3)
Event processed UpdateTile(white, 2, 4)
Event processed UpdateTile(brown, 2, 5)
Event processed UpdateTile(brown, 2, 6)
Event processed UpdateTile(white, 3, 0)
Event processed UpdateTile(yellow, 3, 1)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(blue, 3, 3)
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(yellow, 3, 5)
Event processed UpdateTile(white, 3, 6)
Event processed UpdateTile(brown, 4, 0)
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(blue, 4, 3)
Event processed UpdateTile(brown, 4, 4)
Event processed UpdateTile(yellow, 4, 5)
Event processed UpdateTile(brown, 4, 6)
Event processed UpdateTile(yellow, 5, 0)
Event processed UpdateTile(white, 5, 1)
Event processed UpdateTile(brown, 5, 2)
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(4)
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
},
{	adoptProhibition(rejectRequests, reduce(a30, 500))
},
{	adoptProhibition(rejectRequests, reduce(a30, 500))
},
{	adoptProhibition(moveTooFast, reduce(a30, 300))
},
{	adoptProhibition(moveTooFast, reduce(a30, 300))
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(4), UpdateClock(1), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateTile(brown, 0, 0), UpdateTile(brown, 0, 1), UpdateTile(white, 0, 2), UpdateTile(yellow, 0, 3), UpdateTile(brown, 0, 4), UpdateTile(blue, 0, 5), UpdateTile(brown, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(yellow, 1, 1), UpdateTile(white, 1, 2), UpdateTile(white, 1, 3), UpdateTile(blue, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(yellow, 1, 6), UpdateTile(white, 2, 0), UpdateTile(white, 2, 1), UpdateTile(brown, 2, 2), UpdateTile(blue, 2, 3), UpdateTile(white, 2, 4), UpdateTile(brown, 2, 5), UpdateTile(brown, 2, 6), UpdateTile(white, 3, 0), UpdateTile(yellow, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(blue, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(yellow, 3, 5), UpdateTile(white, 3, 6), UpdateTile(brown, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(blue, 4, 3), UpdateTile(brown, 4, 4), UpdateTile(yellow, 4, 5), UpdateTile(brown, 4, 6), UpdateTile(yellow, 5, 0), UpdateTile(white, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(yellow, 5, 3), UpdateTile(blue, 5, 4), UpdateTile(brown, 5, 5), UpdateTile(white, 5, 6), UpdateTile(blue, 6, 0), UpdateTile(brown, 6, 1), UpdateTile(white, 6, 2), UpdateTile(brown, 6, 3), UpdateTile(white, 6, 4), UpdateTile(brown, 6, 5), UpdateTile(white, 6, 6), adoptProhibition(rejectRequests, reduce(a30, 500)), adoptProhibition(rejectRequests, reduce(a30, 500)), adoptProhibition(moveTooFast, reduce(a30, 300)), adoptProhibition(moveTooFast, reduce(a30, 300))]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(4)
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
},
{	adoptProhibition(rejectRequests, reduce(a30, 500))
},
{	adoptProhibition(rejectRequests, reduce(a30, 500))
},
{	adoptProhibition(moveTooFast, reduce(a30, 300))
},
{	adoptProhibition(moveTooFast, reduce(a30, 300))
}


Event processed UpdateTile(yellow, 5, 3)
Event processed UpdateTile(blue, 5, 4)
Event processed UpdateTile(brown, 5, 5)
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(4)
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
},
{	adoptObligation(surround(3, 3), 31, reduce(g, 700))
},
{	adoptProhibition(rejectRequests, reduce(a10, 500))
},
{	adoptProhibition(moveTooFast, reduce(a10, 300))
},
{	adoptObligation(surround(3, 3), 31, reduce(g, 700))
},
{	adoptProhibition(rejectRequests, reduce(a10, 500))
},
{	adoptProhibition(moveTooFast, reduce(a10, 300))
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(4), UpdateClock(1), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateTile(brown, 0, 0), UpdateTile(brown, 0, 1), UpdateTile(white, 0, 2), UpdateTile(yellow, 0, 3), UpdateTile(brown, 0, 4), UpdateTile(blue, 0, 5), UpdateTile(brown, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(yellow, 1, 1), UpdateTile(white, 1, 2), UpdateTile(white, 1, 3), UpdateTile(blue, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(yellow, 1, 6), UpdateTile(white, 2, 0), UpdateTile(white, 2, 1), UpdateTile(brown, 2, 2), UpdateTile(blue, 2, 3), UpdateTile(white, 2, 4), UpdateTile(brown, 2, 5), UpdateTile(brown, 2, 6), UpdateTile(white, 3, 0), UpdateTile(yellow, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(blue, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(yellow, 3, 5), UpdateTile(white, 3, 6), UpdateTile(brown, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(blue, 4, 3), UpdateTile(brown, 4, 4), UpdateTile(yellow, 4, 5), UpdateTile(brown, 4, 6), UpdateTile(yellow, 5, 0), UpdateTile(white, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(yellow, 5, 3), UpdateTile(blue, 5, 4), UpdateTile(brown, 5, 5), UpdateTile(white, 5, 6), UpdateTile(blue, 6, 0), UpdateTile(brown, 6, 1), UpdateTile(white, 6, 2), UpdateTile(brown, 6, 3), UpdateTile(white, 6, 4), UpdateTile(brown, 6, 5), UpdateTile(white, 6, 6), adoptObligation(surround(3, 3), 31, reduce(g, 700)), adoptProhibition(rejectRequests, reduce(a10, 500)), adoptProhibition(moveTooFast, reduce(a10, 300)), adoptObligation(surround(3, 3), 31, reduce(g, 700)), adoptProhibition(rejectRequests, reduce(a10, 500)), adoptProhibition(moveTooFast, reduce(a10, 300))]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(4)
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
},
{	adoptObligation(surround(3, 3), 31, reduce(g, 700))
},
{	adoptProhibition(rejectRequests, reduce(a10, 500))
},
{	adoptProhibition(moveTooFast, reduce(a10, 300))
},
{	adoptObligation(surround(3, 3), 31, reduce(g, 700))
},
{	adoptProhibition(rejectRequests, reduce(a10, 500))
},
{	adoptProhibition(moveTooFast, reduce(a10, 300))
}


Event processed UpdateTile(white, 5, 6)
Event processed UpdateTile(blue, 6, 0)
Event processed UpdateTile(brown, 6, 1)
Event processed UpdateTile(white, 6, 2)
Event processed UpdateTile(brown, 6, 3)
Event processed UpdateTile(white, 6, 4)
Event processed UpdateTile(brown, 6, 5)
Event processed UpdateTile(white, 6, 6)
Event processed adoptProhibition(rejectRequests, reduce(a40, 500))
Event processed adoptProhibition(rejectRequests, reduce(a40, 500))
Event processed adoptProhibition(moveTooFast, reduce(a40, 300))
Event processed adoptProhibition(moveTooFast, reduce(a40, 300))
[CTAH] Array of Terms: [Lapapl.data.Term;@5d325877
[CTAH] The created APLList : [game_initialized]
[CTAH] Array of Terms: [Lapapl.data.Term;@76efb90
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(4)
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
},
{	adoptProhibition(rejectRequests, reduce(a40, 500))
},
{	adoptProhibition(rejectRequests, reduce(a40, 500))
},
{	adoptProhibition(moveTooFast, reduce(a40, 300))
},
{	adoptProhibition(moveTooFast, reduce(a40, 300))
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(4), UpdateClock(1), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateTile(brown, 0, 0), UpdateTile(brown, 0, 1), UpdateTile(white, 0, 2), UpdateTile(yellow, 0, 3), UpdateTile(brown, 0, 4), UpdateTile(blue, 0, 5), UpdateTile(brown, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(yellow, 1, 1), UpdateTile(white, 1, 2), UpdateTile(white, 1, 3), UpdateTile(blue, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(yellow, 1, 6), UpdateTile(white, 2, 0), UpdateTile(white, 2, 1), UpdateTile(brown, 2, 2), UpdateTile(blue, 2, 3), UpdateTile(white, 2, 4), UpdateTile(brown, 2, 5), UpdateTile(brown, 2, 6), UpdateTile(white, 3, 0), UpdateTile(yellow, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(blue, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(yellow, 3, 5), UpdateTile(white, 3, 6), UpdateTile(brown, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(blue, 4, 3), UpdateTile(brown, 4, 4), UpdateTile(yellow, 4, 5), UpdateTile(brown, 4, 6), UpdateTile(yellow, 5, 0), UpdateTile(white, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(yellow, 5, 3), UpdateTile(blue, 5, 4), UpdateTile(brown, 5, 5), UpdateTile(white, 5, 6), UpdateTile(blue, 6, 0), UpdateTile(brown, 6, 1), UpdateTile(white, 6, 2), UpdateTile(brown, 6, 3), UpdateTile(white, 6, 4), UpdateTile(brown, 6, 5), UpdateTile(white, 6, 6), adoptProhibition(rejectRequests, reduce(a40, 500)), adoptProhibition(rejectRequests, reduce(a40, 500)), adoptProhibition(moveTooFast, reduce(a40, 300)), adoptProhibition(moveTooFast, reduce(a40, 300))]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(4)
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
},
{	adoptProhibition(rejectRequests, reduce(a40, 500))
},
{	adoptProhibition(rejectRequests, reduce(a40, 500))
},
{	adoptProhibition(moveTooFast, reduce(a40, 300))
},
{	adoptProhibition(moveTooFast, reduce(a40, 300))
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), AdoptP(rejectRequests(500)); aprohibition(rejectRequests(500) -> reduce(500), priority 0), AdoptP(rejectRequests(500)); aprohibition(rejectRequests(500) -> reduce(500), priority 0), AdoptP(movedTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0), AdoptP(movedTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@61980613
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptz(surround(3, 3, 700) : 27 May 2015 14:37:18 GMT, priority 10)
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	adoptz(surround(3, 3, 700) : 27 May 2015 14:37:18 GMT, priority 10)
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), adoptz(surround(3, 3, 700) : 27 May 2015 14:37:18 GMT, priority 10), AdoptP(rejectRequests(500)); aprohibition(rejectRequests(500) -> reduce(500), priority 0), AdoptP(movedTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0), adoptz(surround(3, 3, 700) : 27 May 2015 14:37:18 GMT, priority 10), AdoptP(rejectRequests(500)); aprohibition(rejectRequests(500) -> reduce(500), priority 0), AdoptP(movedTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	adoptz(surround(3, 3, 700) : 27 May 2015 14:37:18 GMT, priority 10)
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	adoptz(surround(3, 3, 700) : 27 May 2015 14:37:18 GMT, priority 10)
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


object notification: Time [clock=5, time=2015-05-27 15:20:39.353]
org notification: Time [clock=5, time=2015-05-27 15:20:39.353]
object notification: Time [clock=5, time=2015-05-27 15:20:39.353]
org notification: Time [clock=5, time=2015-05-27 15:20:39.353]
object notification: Time [clock=5, time=2015-05-27 15:20:39.353]
Event processed UpdateClock(5)
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	UpdateClock(5)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), AdoptP(rejectRequests(500)); aprohibition(rejectRequests(500) -> reduce(500), priority 0), AdoptP(rejectRequests(500)); aprohibition(rejectRequests(500) -> reduce(500), priority 0), AdoptP(movedTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0), AdoptP(movedTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0), UpdateClock(5)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	UpdateClock(5)
}


Event processed UpdateClock(5)
[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	UpdateClock(5)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), aprohibition(rejectRequests(500) -> reduce(500), priority 0), aprohibition(rejectRequests(500) -> reduce(500), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0), UpdateClock(5)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	UpdateClock(5)
}


Event processed UpdateClock(5)
[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	UpdateClock(5)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), aprohibition(rejectRequests(500) -> reduce(500), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0), aprohibition(rejectRequests(500) -> reduce(500), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0), UpdateClock(5)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	UpdateClock(5)
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), aprohibition(rejectRequests(500) -> reduce(500), priority 0), aprohibition(rejectRequests(500) -> reduce(500), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, @ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, @ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, @ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(2); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(0); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(3); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getRole(2);
	getPos
}


[new scheduled]:[getRole(2); getPos]
[After]:{	getRole(2);
	getPos
}


[Planbase]:{	getRole(0);
	getPos
}


[new scheduled]:[getRole(0); getPos]
[After]:{	getRole(0);
	getPos
}


[Planbase]:{	getRole(3);
	getPos
}


[new scheduled]:[getRole(3); getPos]
[After]:{	getRole(3);
	getPos
}


[Planbase]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(2),L1,0); B(L1=[actionresult(X)]); GetRole(2, X); getPos]
[After]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[Planbase]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(0),L1,0); B(L1=[actionresult(X)]); GetRole(0, X); getPos]
[After]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[Planbase]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(3),L1,0); B(L1=[actionresult(X)]); GetRole(3, X); getPos]
[After]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[Planbase]:{	GetRole(2, none);
	getPos
}


[new scheduled]:[GetRole(2, none); getPos]
[After]:{	GetRole(2, none);
	getPos
}


[Planbase]:{	GetRole(0, ra);
	getPos
}


[new scheduled]:[GetRole(0, ra); getPos]
[After]:{	GetRole(0, ra);
	getPos
}


[Planbase]:{	GetRole(3, none);
	getPos
}


[new scheduled]:[GetRole(3, none); getPos]
[After]:{	GetRole(3, none);
	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[Surround(3, 3); sendSouth(a10, 3, 3, 100); sendWest(a20, 3, 3, 100); sendEast(a30, 3, 3, 100); sendNorth(a40, 3, 3, 100); color(white, a10, yes, 1000); color(white, a20, yes, 1000); color(white, a30, yes, 1000); color(white, a40, yes, 1000); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), getPos]
[After]:{	Surround(3, 3);
	sendSouth(a10, 3, 3, 100);
	sendWest(a20, 3, 3, 100);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 1000);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[CTAH] Agentposition: [6,6]
[Planbase]:{	sendSouth(a10, 3, 3, 100);
	sendWest(a20, 3, 3, 100);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 1000);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[sendSouth(a10, 3, 3, 100); sendWest(a20, 3, 3, 100); sendEast(a30, 3, 3, 100); sendNorth(a40, 3, 3, 100); color(white, a10, yes, 1000); color(white, a20, yes, 1000); color(white, a30, yes, 1000); color(white, a40, yes, 1000); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), @ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	sendSouth(a10, 3, 3, 100);
	sendWest(a20, 3, 3, 100);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 1000);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[CTAH] Agentposition: [0,0]
[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	B(clock(C));
	GetAgentPos(6, 6, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(6, 6, C)]
[After]:{	B(clock(C));
	GetAgentPos(6, 6, C)
}


[CTAH] Agentposition: [0,6]
[Planbase]:{	@ctenv(setGoal(a10, 3, 2, 3, 3, 100),L,0);
	sendWest(a20, 3, 3, 100);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 1000);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	B(clock(C));
	GetAgentPos(0, 0, C)
}


[new scheduled]:[@ctenv(setGoal(a10, 3, 2, 3, 3, 100),L,0); sendWest(a20, 3, 3, 100); sendEast(a30, 3, 3, 100); sendNorth(a40, 3, 3, 100); color(white, a10, yes, 1000); color(white, a20, yes, 1000); color(white, a30, yes, 1000); color(white, a40, yes, 1000); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), B(clock(C)); GetAgentPos(0, 0, C)]
[After]:{	@ctenv(setGoal(a10, 3, 2, 3, 3, 100),L,0);
	sendWest(a20, 3, 3, 100);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 1000);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	B(clock(C));
	GetAgentPos(0, 0, C)
}


agent writes: SetGoal [id=null, agent=a10, cell=Cell [x=3, y=2], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 15:20:41.891]
[Planbase]:{	B(clock(C));
	GetAgentPos(0, 6, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(0, 6, C)]
[After]:{	B(clock(C));
	GetAgentPos(0, 6, C)
}


org notification: SetGoal [id=null, agent=a10, cell=Cell [x=3, y=2], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 15:20:41.891]
org notification: SetGoal [id=null, agent=a10, cell=Cell [x=3, y=2], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 15:20:41.891]
object notification: Obligation [subject=a10, obligation=[at(3, 2, a10)], sanction=[reduce(a10, 700)], deadline=31, time=2015-05-27 15:20:41.904, clock=5]
object notification: Obligation [subject=a10, obligation=[at(3, 2, a10)], sanction=[reduce(a10, 700)], deadline=31, time=2015-05-27 15:20:41.904, clock=1]
[Planbase]:{	GetAgentPos(6, 6, 5)
}


[new scheduled]:[GetAgentPos(6, 6, 5)]
[After]:{	GetAgentPos(6, 6, 5)
}


Event processed adoptObligation(at(3, 2, a10), 31, reduce(a10, 700))
Event processed adoptObligation(at(3, 2, a10), 31, reduce(a10, 700))
[Planbase]:{	@ctenv(setGoal(a20, 2, 3, 3, 3, 100),L,0);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 1000);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	GetAgentPos(0, 0, 5)
},
{	adoptObligation(at(3, 2, a10), 31, reduce(a10, 700))
},
{	adoptObligation(at(3, 2, a10), 31, reduce(a10, 700))
}


[new scheduled]:[@ctenv(setGoal(a20, 2, 3, 3, 3, 100),L,0); sendEast(a30, 3, 3, 100); sendNorth(a40, 3, 3, 100); color(white, a10, yes, 1000); color(white, a20, yes, 1000); color(white, a30, yes, 1000); color(white, a40, yes, 1000); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), GetAgentPos(0, 0, 5), adoptObligation(at(3, 2, a10), 31, reduce(a10, 700)), adoptObligation(at(3, 2, a10), 31, reduce(a10, 700))]
[After]:{	@ctenv(setGoal(a20, 2, 3, 3, 3, 100),L,0);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 1000);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	GetAgentPos(0, 0, 5)
},
{	adoptObligation(at(3, 2, a10), 31, reduce(a10, 700))
},
{	adoptObligation(at(3, 2, a10), 31, reduce(a10, 700))
}


[Planbase]:{	GetAgentPos(0, 6, 5)
}


[new scheduled]:[GetAgentPos(0, 6, 5)]
[After]:{	GetAgentPos(0, 6, 5)
}


[Planbase]:


[new scheduled]:[]
[After]:


agent writes: SetGoal [id=null, agent=a20, cell=Cell [x=2, y=3], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 15:20:42.014]
org notification: SetGoal [id=null, agent=a20, cell=Cell [x=2, y=3], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 15:20:42.014]
org notification: SetGoal [id=null, agent=a20, cell=Cell [x=2, y=3], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 15:20:42.014]
[Planbase]:{	@ctenv(setGoal(a30, 4, 3, 3, 3, 100),L,0);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 1000);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptz(at(3, 2, 700) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(at(3, 2, 700) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a30, 4, 3, 3, 3, 100),L,0); sendNorth(a40, 3, 3, 100); color(white, a10, yes, 1000); color(white, a20, yes, 1000); color(white, a30, yes, 1000); color(white, a40, yes, 1000); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), adoptz(at(3, 2, 700) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(at(3, 2, 700) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	@ctenv(setGoal(a30, 4, 3, 3, 3, 100),L,0);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 1000);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptz(at(3, 2, 700) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(at(3, 2, 700) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


agent writes: SetGoal [id=null, agent=a30, cell=Cell [x=4, y=3], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 15:20:42.152]
org notification: SetGoal [id=null, agent=a30, cell=Cell [x=4, y=3], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 15:20:42.152]
org notification: SetGoal [id=null, agent=a30, cell=Cell [x=4, y=3], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 15:20:42.152]
object notification: Obligation [subject=a30, obligation=[at(4, 3, a30)], sanction=[reduce(a30, 700)], deadline=31, time=2015-05-27 15:20:42.157, clock=1]
object notification: Obligation [subject=a30, obligation=[at(4, 3, a30)], sanction=[reduce(a30, 700)], deadline=31, time=2015-05-27 15:20:42.158, clock=5]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setGoal(a40, 3, 4, 3, 3, 100),L,0);
	color(white, a10, yes, 1000);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a40, 3, 4, 3, 3, 100),L,0); color(white, a10, yes, 1000); color(white, a20, yes, 1000); color(white, a30, yes, 1000); color(white, a40, yes, 1000); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setGoal(a40, 3, 4, 3, 3, 100),L,0);
	color(white, a10, yes, 1000);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


Event processed adoptObligation(at(4, 3, a30), 31, reduce(a30, 700))
Event processed adoptObligation(at(4, 3, a30), 31, reduce(a30, 700))
agent writes: SetGoal [id=null, agent=a40, cell=Cell [x=3, y=4], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 15:20:42.304]
org notification: SetGoal [id=null, agent=a40, cell=Cell [x=3, y=4], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 15:20:42.304]
org notification: SetGoal [id=null, agent=a40, cell=Cell [x=3, y=4], goal=Cell [x=3, y=3], sanction=100, clock=1, time=2015-05-27 15:20:42.304]
object notification: Obligation [subject=a40, obligation=[at(3, 4, a40)], sanction=[reduce(a40, 700)], deadline=31, time=2015-05-27 15:20:42.308, clock=5]
object notification: Obligation [subject=a40, obligation=[at(3, 4, a40)], sanction=[reduce(a40, 700)], deadline=31, time=2015-05-27 15:20:42.308, clock=1]
[Planbase]:{	adoptObligation(at(4, 3, a30), 31, reduce(a30, 700))
},
{	adoptObligation(at(4, 3, a30), 31, reduce(a30, 700))
}


[new scheduled]:[adoptObligation(at(4, 3, a30), 31, reduce(a30, 700)), adoptObligation(at(4, 3, a30), 31, reduce(a30, 700))]
[After]:{	adoptObligation(at(4, 3, a30), 31, reduce(a30, 700))
},
{	adoptObligation(at(4, 3, a30), 31, reduce(a30, 700))
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setColor(a10, white, yes, 1000),L,0);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a10, white, yes, 1000),L,0); color(white, a20, yes, 1000); color(white, a30, yes, 1000); color(white, a40, yes, 1000); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a10, white, yes, 1000),L,0);
	color(white, a20, yes, 1000);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


Event processed adoptObligation(at(3, 4, a40), 31, reduce(a40, 700))
Event processed adoptObligation(at(3, 4, a40), 31, reduce(a40, 700))
agent writes: Color [id=null, color=white, agent=a10, type=yes, sanction=1000, time=2015-05-27 15:20:42.438, clock=1]
org notification: Color [id=null, color=white, agent=a10, type=yes, sanction=1000, time=2015-05-27 15:20:42.438, clock=1]
org notification: Color [id=null, color=white, agent=a10, type=yes, sanction=1000, time=2015-05-27 15:20:42.438, clock=1]
object notification: Obligation [subject=a10, obligation=[color(white, a10)], sanction=[reduce(a10, 1000)], deadline=25, time=2015-05-27 15:20:42.45, clock=5]
object notification: Obligation [subject=a10, obligation=[color(white, a10)], sanction=[reduce(a10, 1000)], deadline=25, time=2015-05-27 15:20:42.449, clock=1]
[Planbase]:{	adoptz(at(4, 3, 700) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(at(4, 3, 700) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(at(4, 3, 700) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(at(4, 3, 700) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(at(4, 3, 700) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(at(4, 3, 700) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptObligation(at(3, 4, a40), 31, reduce(a40, 700))
},
{	adoptObligation(at(3, 4, a40), 31, reduce(a40, 700))
}


[new scheduled]:[adoptObligation(at(3, 4, a40), 31, reduce(a40, 700)), adoptObligation(at(3, 4, a40), 31, reduce(a40, 700))]
[After]:{	adoptObligation(at(3, 4, a40), 31, reduce(a40, 700))
},
{	adoptObligation(at(3, 4, a40), 31, reduce(a40, 700))
}


Event processed adoptObligation(color(white, a10), 25, reduce(a10, 1000))
Event processed adoptObligation(color(white, a10), 25, reduce(a10, 1000))
[Planbase]:{	@ctenv(setColor(a20, white, yes, 1000),L,0);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptObligation(color(white, a10), 25, reduce(a10, 1000))
},
{	adoptObligation(color(white, a10), 25, reduce(a10, 1000))
}


[new scheduled]:[@ctenv(setColor(a20, white, yes, 1000),L,0); color(white, a30, yes, 1000); color(white, a40, yes, 1000); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), adoptObligation(color(white, a10), 25, reduce(a10, 1000)), adoptObligation(color(white, a10), 25, reduce(a10, 1000))]
[After]:{	@ctenv(setColor(a20, white, yes, 1000),L,0);
	color(white, a30, yes, 1000);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptObligation(color(white, a10), 25, reduce(a10, 1000))
},
{	adoptObligation(color(white, a10), 25, reduce(a10, 1000))
}


[Planbase]:


[new scheduled]:[]
[After]:


agent writes: Color [id=null, color=white, agent=a20, type=yes, sanction=1000, time=2015-05-27 15:20:42.592, clock=1]
org notification: Color [id=null, color=white, agent=a20, type=yes, sanction=1000, time=2015-05-27 15:20:42.592, clock=1]
org notification: Color [id=null, color=white, agent=a20, type=yes, sanction=1000, time=2015-05-27 15:20:42.592, clock=1]
[Planbase]:{	adoptz(at(3, 4, 700) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(at(3, 4, 700) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(at(3, 4, 700) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(at(3, 4, 700) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(at(3, 4, 700) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(at(3, 4, 700) : 27 May 2015 14:37:22 GMT, priority 10)
}


object notification: Time [clock=2, time=2015-05-27 15:20:42.638]
org notification: Time [clock=2, time=2015-05-27 15:20:42.638]
org notification: Time [clock=2, time=2015-05-27 15:20:42.638]
object notification: Time [clock=2, time=2015-05-27 15:20:42.638]
object notification: Time [clock=2, time=2015-05-27 15:20:42.638]
Event processed UpdateClock(2)
Event processed UpdateClock(2)
[Planbase]:{	@ctenv(setColor(a30, white, yes, 1000),L,0);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	UpdateClock(2)
}


[new scheduled]:[@ctenv(setColor(a30, white, yes, 1000),L,0); color(white, a40, yes, 1000); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), UpdateClock(2)]
[After]:{	@ctenv(setColor(a30, white, yes, 1000),L,0);
	color(white, a40, yes, 1000);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	UpdateClock(2)
}


Event processed UpdateClock(2)
[Planbase]:{	UpdateClock(2)
}


[new scheduled]:[UpdateClock(2)]
[After]:{	UpdateClock(2)
}


agent writes: Color [id=null, color=white, agent=a30, type=yes, sanction=1000, time=2015-05-27 15:20:42.768, clock=2]
org notification: Color [id=null, color=white, agent=a30, type=yes, sanction=1000, time=2015-05-27 15:20:42.768, clock=2]
org notification: Color [id=null, color=white, agent=a30, type=yes, sanction=1000, time=2015-05-27 15:20:42.768, clock=2]
object notification: Obligation [subject=a30, obligation=[color(white, a30)], sanction=[reduce(a30, 1000)], deadline=22, time=2015-05-27 15:20:42.78, clock=2]
object notification: Obligation [subject=a30, obligation=[color(white, a30)], sanction=[reduce(a30, 1000)], deadline=22, time=2015-05-27 15:20:42.78, clock=5]
[Planbase]:{	UpdateClock(2)
}


[new scheduled]:[UpdateClock(2)]
[After]:{	UpdateClock(2)
}


Event processed adoptObligation(color(white, a30), 22, reduce(a30, 1000))
Event processed adoptObligation(color(white, a30), 22, reduce(a30, 1000))
[Planbase]:{	adoptObligation(color(white, a30), 22, reduce(a30, 1000))
},
{	adoptObligation(color(white, a30), 22, reduce(a30, 1000))
}


[new scheduled]:[adoptObligation(color(white, a30), 22, reduce(a30, 1000)), adoptObligation(color(white, a30), 22, reduce(a30, 1000))]
[After]:{	adoptObligation(color(white, a30), 22, reduce(a30, 1000))
},
{	adoptObligation(color(white, a30), 22, reduce(a30, 1000))
}


[Planbase]:{	@ctenv(setColor(a40, white, yes, 1000),L,0);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a40, white, yes, 1000),L,0); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a40, white, yes, 1000),L,0);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


agent writes: Color [id=null, color=white, agent=a40, type=yes, sanction=1000, time=2015-05-27 15:20:42.926, clock=2]
org notification: Color [id=null, color=white, agent=a40, type=yes, sanction=1000, time=2015-05-27 15:20:42.926, clock=2]
org notification: Color [id=null, color=white, agent=a40, type=yes, sanction=1000, time=2015-05-27 15:20:42.926, clock=2]
object notification: Obligation [subject=a40, obligation=[color(white, a40)], sanction=[reduce(a40, 1000)], deadline=22, time=2015-05-27 15:20:42.931, clock=5]
object notification: Obligation [subject=a40, obligation=[color(white, a40)], sanction=[reduce(a40, 1000)], deadline=22, time=2015-05-27 15:20:42.931, clock=2]
Event processed adoptObligation(color(white, a40), 22, reduce(a40, 1000))
Event processed adoptObligation(color(white, a40), 22, reduce(a40, 1000))
[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptObligation(color(white, a40), 22, reduce(a40, 1000))
},
{	adoptObligation(color(white, a40), 22, reduce(a40, 1000))
}


[new scheduled]:[adoptObligation(color(white, a40), 22, reduce(a40, 1000)), adoptObligation(color(white, a40), 22, reduce(a40, 1000))]
[After]:{	adoptObligation(color(white, a40), 22, reduce(a40, 1000))
},
{	adoptObligation(color(white, a40), 22, reduce(a40, 1000))
}


[Planbase]:{	@ctenv(setColor(a10, blue, no, 100),L,0);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setColor(a10, blue, no, 100),L,0); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setColor(a10, blue, no, 100),L,0);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


agent writes: Color [id=null, color=blue, agent=a10, type=no, sanction=100, time=2015-05-27 15:20:43.068, clock=2]
org notification: Color [id=null, color=blue, agent=a10, type=no, sanction=100, time=2015-05-27 15:20:43.068, clock=2]
org notification: Color [id=null, color=blue, agent=a10, type=no, sanction=100, time=2015-05-27 15:20:43.068, clock=2]
object notification: Prohibition [subject=a10, prohibition=[color(blue, a10)], sanction=[reduce(a10, 100)], clock=2, time=2015-05-27 15:20:43.072]
object notification: Prohibition [subject=a10, prohibition=[color(blue, a10)], sanction=[reduce(a10, 100)], clock=5, time=2015-05-27 15:20:43.072]
[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


Event processed adoptProhibition(color(blue, a10), reduce(a10, 100))
Event processed adoptProhibition(color(blue, a10), reduce(a10, 100))
[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:23 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:23 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:23 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:23 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:23 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:23 GMT, priority 10)
}


[Planbase]:{	@ctenv(setColor(a20, blue, no, 100),L,0);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptProhibition(color(blue, a10), reduce(a10, 100))
},
{	adoptProhibition(color(blue, a10), reduce(a10, 100))
}


[new scheduled]:[@ctenv(setColor(a20, blue, no, 100),L,0); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), adoptProhibition(color(blue, a10), reduce(a10, 100)), adoptProhibition(color(blue, a10), reduce(a10, 100))]
[After]:{	@ctenv(setColor(a20, blue, no, 100),L,0);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptProhibition(color(blue, a10), reduce(a10, 100))
},
{	adoptProhibition(color(blue, a10), reduce(a10, 100))
}


agent writes: Color [id=null, color=blue, agent=a20, type=no, sanction=100, time=2015-05-27 15:20:43.208, clock=2]
org notification: Color [id=null, color=blue, agent=a20, type=no, sanction=100, time=2015-05-27 15:20:43.208, clock=2]
org notification: Color [id=null, color=blue, agent=a20, type=no, sanction=100, time=2015-05-27 15:20:43.208, clock=2]
[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setColor(a30, blue, no, 100),L,0);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[@ctenv(setColor(a30, blue, no, 100),L,0); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), AdoptP(useColor(blue, 100)); aprohibition(useColor(blue, 100) -> reduce(100), priority 0), AdoptP(useColor(blue, 100)); aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	@ctenv(setColor(a30, blue, no, 100),L,0);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


agent writes: Color [id=null, color=blue, agent=a30, type=no, sanction=100, time=2015-05-27 15:20:43.376, clock=2]
org notification: Color [id=null, color=blue, agent=a30, type=no, sanction=100, time=2015-05-27 15:20:43.376, clock=2]
org notification: Color [id=null, color=blue, agent=a30, type=no, sanction=100, time=2015-05-27 15:20:43.376, clock=2]
object notification: Prohibition [subject=a30, prohibition=[color(blue, a30)], sanction=[reduce(a30, 100)], clock=2, time=2015-05-27 15:20:43.38]
object notification: Prohibition [subject=a30, prohibition=[color(blue, a30)], sanction=[reduce(a30, 100)], clock=5, time=2015-05-27 15:20:43.383]
[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	@ctenv(setColor(a40, blue, no, 100),L,0);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[@ctenv(setColor(a40, blue, no, 100),L,0); dropgoal(surround(3, 3, 700) : Infinite, priority 10), aprohibition(useColor(blue, 100) -> reduce(100), priority 0), aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	@ctenv(setColor(a40, blue, no, 100),L,0);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


Event processed adoptProhibition(color(blue, a30), reduce(a30, 100))
Event processed adoptProhibition(color(blue, a30), reduce(a30, 100))
agent writes: Color [id=null, color=blue, agent=a40, type=no, sanction=100, time=2015-05-27 15:20:43.519, clock=2]
org notification: Color [id=null, color=blue, agent=a40, type=no, sanction=100, time=2015-05-27 15:20:43.519, clock=2]
org notification: Color [id=null, color=blue, agent=a40, type=no, sanction=100, time=2015-05-27 15:20:43.519, clock=2]
object notification: Prohibition [subject=a40, prohibition=[color(blue, a40)], sanction=[reduce(a40, 100)], clock=2, time=2015-05-27 15:20:43.523]
object notification: Prohibition [subject=a40, prohibition=[color(blue, a40)], sanction=[reduce(a40, 100)], clock=5, time=2015-05-27 15:20:43.524]
[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptProhibition(color(blue, a30), reduce(a30, 100))
},
{	adoptProhibition(color(blue, a30), reduce(a30, 100))
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptProhibition(color(blue, a30), reduce(a30, 100)), adoptProhibition(color(blue, a30), reduce(a30, 100))]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptProhibition(color(blue, a30), reduce(a30, 100))
},
{	adoptProhibition(color(blue, a30), reduce(a30, 100))
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), AdoptP(useColor(blue, 100)); aprohibition(useColor(blue, 100) -> reduce(100), priority 0), AdoptP(useColor(blue, 100)); aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


Event processed adoptProhibition(color(blue, a40), reduce(a40, 100))
Event processed adoptProhibition(color(blue, a40), reduce(a40, 100))
[Planbase]:{	adoptProhibition(color(blue, a40), reduce(a40, 100))
},
{	adoptProhibition(color(blue, a40), reduce(a40, 100))
}


[new scheduled]:[adoptProhibition(color(blue, a40), reduce(a40, 100)), adoptProhibition(color(blue, a40), reduce(a40, 100))]
[After]:{	adoptProhibition(color(blue, a40), reduce(a40, 100))
},
{	adoptProhibition(color(blue, a40), reduce(a40, 100))
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), aprohibition(useColor(blue, 100) -> reduce(100), priority 0), aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[Planbase]:{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[AdoptP(useColor(blue, 100)); aprohibition(useColor(blue, 100) -> reduce(100), priority 0), AdoptP(useColor(blue, 100)); aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[aprohibition(useColor(blue, 100) -> reduce(100), priority 0), aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


object notification: Time [clock=6, time=2015-05-27 15:20:49.357]
org notification: Time [clock=6, time=2015-05-27 15:20:49.357]
object notification: Time [clock=6, time=2015-05-27 15:20:49.357]
org notification: Time [clock=6, time=2015-05-27 15:20:49.357]
object notification: Time [clock=6, time=2015-05-27 15:20:49.357]
[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(6)
Event processed UpdateClock(6)
Event processed UpdateClock(6)
[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	UpdateClock(6)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), UpdateClock(6)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	UpdateClock(6)
}


[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


[Planbase]:{	UpdateClock(6)
}


[new scheduled]:[UpdateClock(6)]
[After]:{	UpdateClock(6)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


org notification: Time [clock=3, time=2015-05-27 15:20:52.641]
object notification: Time [clock=3, time=2015-05-27 15:20:52.641]
object notification: Time [clock=3, time=2015-05-27 15:20:52.641]
org notification: Time [clock=3, time=2015-05-27 15:20:52.641]
object notification: Time [clock=3, time=2015-05-27 15:20:52.641]
Event processed UpdateClock(3)
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	UpdateClock(3)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), UpdateClock(3)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	UpdateClock(3)
}


Event processed UpdateClock(3)
Event processed UpdateClock(3)
[Planbase]:{	UpdateClock(3)
}


[new scheduled]:[UpdateClock(3)]
[After]:{	UpdateClock(3)
}


[Planbase]:{	UpdateClock(3)
}


[new scheduled]:[UpdateClock(3)]
[After]:{	UpdateClock(3)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


org notification: Time [clock=7, time=2015-05-27 15:20:59.358]
object notification: Time [clock=7, time=2015-05-27 15:20:59.358]
object notification: Time [clock=7, time=2015-05-27 15:20:59.358]
org notification: Time [clock=7, time=2015-05-27 15:20:59.358]
object notification: Time [clock=7, time=2015-05-27 15:20:59.358]
[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(7)
Event processed UpdateClock(7)
[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	UpdateClock(7)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), UpdateClock(7)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	UpdateClock(7)
}


Event processed UpdateClock(7)
[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:{	UpdateClock(7)
}


[new scheduled]:[UpdateClock(7)]
[After]:{	UpdateClock(7)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


object notification: Time [clock=4, time=2015-05-27 15:21:02.643]
object notification: Time [clock=4, time=2015-05-27 15:21:02.643]
org notification: Time [clock=4, time=2015-05-27 15:21:02.643]
org notification: Time [clock=4, time=2015-05-27 15:21:02.643]
object notification: Time [clock=4, time=2015-05-27 15:21:02.643]
[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(4)
Event processed UpdateClock(4)
Event processed UpdateClock(4)
[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	UpdateClock(4)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), UpdateClock(4)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	UpdateClock(4)
}


[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:{	UpdateClock(4)
}


[new scheduled]:[UpdateClock(4)]
[After]:{	UpdateClock(4)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


setPhases in ClientGameStatus, the current phase is Communication Phase
setPhases in ClientGameStatus, the current phase is Communication Phase
setPhases in ClientGameStatus, the current phase is Communication Phase
[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[Planbase]:


[new scheduled]:[]
[After]:


[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@3c9f45d
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@2bf0660a
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@61debffa
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), if B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	ReceivedEvent(phasechange)
}


[new scheduled]:[adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[After]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[update, adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	update
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated, adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated, adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(communicationphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[GetPhase(communicationphase); B(clock(Clock)); if B(event(phasechange)) then Updated, adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[GetPhase(communicationphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(tile(white, 0, 0)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), B(clock(Clock)); if B(event(phasechange)) then Updated, adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[if B(tile(white, 0, 6)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), if B(event(phasechange)) then Updated, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0) else if B(tile(neco, X, Y)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), if B(event(phasechange)) then Updated, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	Updated
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), Updated, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	Updated
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	Updated
},
{	@ctenv(moveStepToGoalTest(neco, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[Updated, @ctenv(moveStepToGoalTest(neco, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	Updated
},
{	@ctenv(moveStepToGoalTest(neco, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	Updated
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), Updated, findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	Updated
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] going goal: 4,3 color: neco
[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0) else if B(tile(white, X, Y)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0) else if B(tile(white, X, Y)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(white, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(white, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(white, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(white, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(white, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(white, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] going goal: 3,2 color: white
a40[CTAH] going goal: 3,4 color: white
org notification: Time [clock=8, time=2015-05-27 15:21:09.361]
object notification: Time [clock=8, time=2015-05-27 15:21:09.361]
object notification: Time [clock=8, time=2015-05-27 15:21:09.361]
org notification: Time [clock=8, time=2015-05-27 15:21:09.361]
object notification: Time [clock=8, time=2015-05-27 15:21:09.361]
org notification: Time [clock=5, time=2015-05-27 15:21:12.645]
object notification: Time [clock=5, time=2015-05-27 15:21:12.645]
object notification: Time [clock=5, time=2015-05-27 15:21:12.645]
org notification: Time [clock=5, time=2015-05-27 15:21:12.645]
object notification: Time [clock=5, time=2015-05-27 15:21:12.645]
a40[CTAH] paths: 1000
a40[CTAH] path: 0
a40[CTAH] path: Path: [6][0] [6][1] [6][2] [6][3] [5][3] [4][3] [4][4] [3][4]

a40[CTAH] moveStepToGoalTest nopoints: []
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:6,C:1)
a40[CTAH] moveStepToGoalTest sent proposal for: [6,1,1,4736]
org notification: Proposal [id=4736, agent=a40, agent2=a20, clock=5, time=2015-05-27 15:21:17.017]
org notification: Proposal [id=4736, agent=a40, agent2=a20, clock=5, time=2015-05-27 15:21:17.017]
a30[CTAH] paths: 1000
Need to wait 3 more seconds
a10[CTAH] paths: 1000
Need to wait 4 more seconds
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
org notification: Response [id=4736, response=accepted, clock=5, time=2015-05-27 15:21:18.686]
org notification: Response [id=4736, response=accepted, clock=5, time=2015-05-27 15:21:18.686]
object notification: Time [clock=9, time=2015-05-27 15:21:19.367]
org notification: Time [clock=9, time=2015-05-27 15:21:19.367]
object notification: Time [clock=9, time=2015-05-27 15:21:19.367]
org notification: Time [clock=9, time=2015-05-27 15:21:19.367]
object notification: Time [clock=9, time=2015-05-27 15:21:19.367]
a30[CTAH] path: 0
a30[CTAH] path: Path: [6][6] [6][5] [5][5] [4][5] [4][4] [4][3]

a30[CTAH] moveStepToGoalTest nopoints: []
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:6,C:5)
a30[CTAH] moveStepToGoalTest sent proposal for: [6,5,1,1456]
org notification: Proposal [id=1456, agent=a30, agent2=a20, clock=9, time=2015-05-27 15:21:20.075]
org notification: Proposal [id=1456, agent=a30, agent2=a20, clock=9, time=2015-05-27 15:21:20.075]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=1456, response=accepted, clock=9, time=2015-05-27 15:21:21.198]
org notification: Response [id=1456, response=accepted, clock=9, time=2015-05-27 15:21:21.198]
a10[CTAH] path: 0
a10[CTAH] path: Path: [0][0] [0][1] [1][1] [2][1] [2][2] [3][2]

a10[CTAH] moveStepToGoalTest nopoints: []
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:0,C:1)
a10[CTAH] moveStepToGoalTest sent proposal for: [0,1,3,1331]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
org notification: Proposal [id=1331, agent=a10, agent2=a40, clock=9, time=2015-05-27 15:21:21.4]
org notification: Proposal [id=1331, agent=a10, agent2=a40, clock=9, time=2015-05-27 15:21:21.4]
Received a proposal creating event
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
Event processed UpdateClock(8)
Event processed UpdateClock(5)
Event processed @ctenv(functionToList(message(response, 4736, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateClock(9)
Event processed @ctenv(functionToList(proposal(proposal, 0, 1331, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateClock(8)
Event processed UpdateClock(5)
Event processed UpdateClock(9)
Event processed @ctenv(functionToList(message(response, 1456, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateClock(8)
Event processed UpdateClock(5)
Event processed UpdateClock(9)
[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 4736=no)
							then	{	NextStep(6, 1, 4736)
								}
							else	{	NextStep(6, 1)
								}
						}
				}
			else	{	if	B(not 4736=no)
					then	{	NextStep(6, 1, 4736)
						}
					else	{	NextStep(6, 1)
						}
				}
		};
	if	B(not 4736=no)
	then	{	Sent(4736, 1, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(8)
},
{	UpdateClock(5)
},
{	@ctenv(functionToList(message(response, 4736, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateClock(9)
},
{	@ctenv(functionToList(proposal(proposal, 0, 1331, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 6, 1)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 4736=no) then NextStep(6, 1, 4736) else NextStep(6, 1) else if B(not 4736=no) then NextStep(6, 1, 4736) else NextStep(6, 1); if B(not 4736=no) then Sent(4736, 1, open, Clock); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(8), UpdateClock(5), @ctenv(functionToList(message(response, 4736, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(9), @ctenv(functionToList(proposal(proposal, 0, 1331, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 4736=no)
							then	{	NextStep(6, 1, 4736)
								}
							else	{	NextStep(6, 1)
								}
						}
				}
			else	{	if	B(not 4736=no)
					then	{	NextStep(6, 1, 4736)
						}
					else	{	NextStep(6, 1)
						}
				}
		};
	if	B(not 4736=no)
	then	{	Sent(4736, 1, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(8)
},
{	UpdateClock(5)
},
{	@ctenv(functionToList(message(response, 4736, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateClock(9)
},
{	@ctenv(functionToList(proposal(proposal, 0, 1331, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 5))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 1456=no)
							then	{	NextStep(6, 5, 1456)
								}
							else	{	NextStep(6, 5)
								}
						}
				}
			else	{	if	B(not 1456=no)
					then	{	NextStep(6, 5, 1456)
						}
					else	{	NextStep(6, 5)
						}
				}
		};
	if	B(not 1456=no)
	then	{	Sent(1456, 1, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	UpdateClock(8)
},
{	UpdateClock(5)
},
{	UpdateClock(9)
},
{	@ctenv(functionToList(message(response, 1456, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 6, 5)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not 1456=no) then NextStep(6, 5, 1456) else NextStep(6, 5) else if B(not 1456=no) then NextStep(6, 5, 1456) else NextStep(6, 5); if B(not 1456=no) then Sent(1456, 1, open, Clock); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), UpdateClock(8), UpdateClock(5), UpdateClock(9), @ctenv(functionToList(message(response, 1456, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 5))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 1456=no)
							then	{	NextStep(6, 5, 1456)
								}
							else	{	NextStep(6, 5)
								}
						}
				}
			else	{	if	B(not 1456=no)
					then	{	NextStep(6, 5, 1456)
						}
					else	{	NextStep(6, 5)
						}
				}
		};
	if	B(not 1456=no)
	then	{	Sent(1456, 1, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	UpdateClock(8)
},
{	UpdateClock(5)
},
{	UpdateClock(9)
},
{	@ctenv(functionToList(message(response, 1456, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 0, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 1331=no)
							then	{	NextStep(0, 1, 1331)
								}
							else	{	NextStep(0, 1)
								}
						}
				}
			else	{	if	B(not 1331=no)
					then	{	NextStep(0, 1, 1331)
						}
					else	{	NextStep(0, 1)
						}
				}
		};
	if	B(not 1331=no)
	then	{	Sent(1331, 3, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(8)
},
{	UpdateClock(5)
},
{	UpdateClock(9)
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 0, 1)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 1331=no) then NextStep(0, 1, 1331) else NextStep(0, 1) else if B(not 1331=no) then NextStep(0, 1, 1331) else NextStep(0, 1); if B(not 1331=no) then Sent(1331, 3, open, Clock); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(8), UpdateClock(5), UpdateClock(9)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 0, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 1331=no)
							then	{	NextStep(0, 1, 1331)
								}
							else	{	NextStep(0, 1)
								}
						}
				}
			else	{	if	B(not 1331=no)
					then	{	NextStep(0, 1, 1331)
						}
					else	{	NextStep(0, 1)
						}
				}
		};
	if	B(not 1331=no)
	then	{	Sent(1331, 3, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(8)
},
{	UpdateClock(5)
},
{	UpdateClock(9)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@108031b4
[CTAH] The created APLList : [response,4736,accept]
[CTAH] Array of Terms: [Lapapl.data.Term;@503f28e2
[CTAH] The created APLList : [proposal,0,1331,open]
[CTAH] Array of Terms: [Lapapl.data.Term;@4458862d
[CTAH] The created APLList : [response,1456,accept]
[Planbase]:{	if	B(tile(Color1, 6, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 4736=no)
							then	{	NextStep(6, 1, 4736)
								}
							else	{	NextStep(6, 1)
								}
						}
				}
			else	{	if	B(not 4736=no)
					then	{	NextStep(6, 1, 4736)
						}
					else	{	NextStep(6, 1)
						}
				}
		};
	if	B(not 4736=no)
	then	{	Sent(4736, 1, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,4736,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,4736,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,4736,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	if	B([actionresult([proposal,0,1331,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,0,1331,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,0,1331,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(tile(Color1, 6, 1)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 4736=no) then NextStep(6, 1, 4736) else NextStep(6, 1) else if B(not 4736=no) then NextStep(6, 1, 4736) else NextStep(6, 1); if B(not 4736=no) then Sent(4736, 1, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([response,4736,accept])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([response,4736,accept])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([response,4736,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), if B([actionresult([proposal,0,1331,open])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([proposal,0,1331,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,0,1331,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(tile(Color1, 6, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 4736=no)
							then	{	NextStep(6, 1, 4736)
								}
							else	{	NextStep(6, 1)
								}
						}
				}
			else	{	if	B(not 4736=no)
					then	{	NextStep(6, 1, 4736)
						}
					else	{	NextStep(6, 1)
						}
				}
		};
	if	B(not 4736=no)
	then	{	Sent(4736, 1, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,4736,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,4736,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,4736,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	if	B([actionresult([proposal,0,1331,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,0,1331,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,0,1331,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(tile(Color1, 6, 5))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 1456=no)
							then	{	NextStep(6, 5, 1456)
								}
							else	{	NextStep(6, 5)
								}
						}
				}
			else	{	if	B(not 1456=no)
					then	{	NextStep(6, 5, 1456)
						}
					else	{	NextStep(6, 5)
						}
				}
		};
	if	B(not 1456=no)
	then	{	Sent(1456, 1, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	if	B([actionresult([response,1456,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,1456,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,1456,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(tile(Color1, 6, 5)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not 1456=no) then NextStep(6, 5, 1456) else NextStep(6, 5) else if B(not 1456=no) then NextStep(6, 5, 1456) else NextStep(6, 5); if B(not 1456=no) then Sent(1456, 1, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), if B([actionresult([response,1456,accept])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([response,1456,accept])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([response,1456,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(tile(Color1, 6, 5))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 1456=no)
							then	{	NextStep(6, 5, 1456)
								}
							else	{	NextStep(6, 5)
								}
						}
				}
			else	{	if	B(not 1456=no)
					then	{	NextStep(6, 5, 1456)
						}
					else	{	NextStep(6, 5)
						}
				}
		};
	if	B(not 1456=no)
	then	{	Sent(1456, 1, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	if	B([actionresult([response,1456,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,1456,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,1456,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(tile(Color1, 0, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 1331=no)
							then	{	NextStep(0, 1, 1331)
								}
							else	{	NextStep(0, 1)
								}
						}
				}
			else	{	if	B(not 1331=no)
					then	{	NextStep(0, 1, 1331)
						}
					else	{	NextStep(0, 1)
						}
				}
		};
	if	B(not 1331=no)
	then	{	Sent(1331, 3, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(Color1, 0, 1)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 1331=no) then NextStep(0, 1, 1331) else NextStep(0, 1) else if B(not 1331=no) then NextStep(0, 1, 1331) else NextStep(0, 1); if B(not 1331=no) then Sent(1331, 3, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(Color1, 0, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 1331=no)
							then	{	NextStep(0, 1, 1331)
								}
							else	{	NextStep(0, 1)
								}
						}
				}
			else	{	if	B(not 1331=no)
					then	{	NextStep(0, 1, 1331)
						}
					else	{	NextStep(0, 1)
						}
				}
		};
	if	B(not 1331=no)
	then	{	Sent(1331, 3, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(brown, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 4736=no)
					then	{	NextStep(6, 1, 4736)
						}
					else	{	NextStep(6, 1)
						}
				}
		}
	else	{	if	B(not 4736=no)
			then	{	NextStep(6, 1, 4736)
				}
			else	{	NextStep(6, 1)
				}
		};
	if	B(not 4736=no)
	then	{	Sent(4736, 1, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 4736)
		}
},
{	if	B([actionresult([proposal,0,1331,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,1331,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(brown, V2))) then if B(1000>V2) then if B(not 4736=no) then NextStep(6, 1, 4736) else NextStep(6, 1) else if B(not 4736=no) then NextStep(6, 1, 4736) else NextStep(6, 1); if B(not 4736=no) then Sent(4736, 1, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(response=response) then ReceivedMessage(accept, 4736), if B([actionresult([proposal,0,1331,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,0,1331,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(prohibition(useColor(brown, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 4736=no)
					then	{	NextStep(6, 1, 4736)
						}
					else	{	NextStep(6, 1)
						}
				}
		}
	else	{	if	B(not 4736=no)
			then	{	NextStep(6, 1, 4736)
				}
			else	{	NextStep(6, 1)
				}
		};
	if	B(not 4736=no)
	then	{	Sent(4736, 1, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 4736)
		}
},
{	if	B([actionresult([proposal,0,1331,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,1331,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(brown, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not 1456=no)
					then	{	NextStep(6, 5, 1456)
						}
					else	{	NextStep(6, 5)
						}
				}
		}
	else	{	if	B(not 1456=no)
			then	{	NextStep(6, 5, 1456)
				}
			else	{	NextStep(6, 5)
				}
		};
	if	B(not 1456=no)
	then	{	Sent(1456, 1, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 1456)
		}
}


[new scheduled]:[if B(prohibition(useColor(brown, V2))) then if B(700>V2) then if B(not 1456=no) then NextStep(6, 5, 1456) else NextStep(6, 5) else if B(not 1456=no) then NextStep(6, 5, 1456) else NextStep(6, 5); if B(not 1456=no) then Sent(1456, 1, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), if B(response=response) then ReceivedMessage(accept, 1456)]
[After]:{	if	B(prohibition(useColor(brown, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not 1456=no)
					then	{	NextStep(6, 5, 1456)
						}
					else	{	NextStep(6, 5)
						}
				}
		}
	else	{	if	B(not 1456=no)
			then	{	NextStep(6, 5, 1456)
				}
			else	{	NextStep(6, 5)
				}
		};
	if	B(not 1456=no)
	then	{	Sent(1456, 1, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 1456)
		}
}


[Planbase]:{	if	B(prohibition(useColor(brown, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 1331=no)
					then	{	NextStep(0, 1, 1331)
						}
					else	{	NextStep(0, 1)
						}
				}
		}
	else	{	if	B(not 1331=no)
			then	{	NextStep(0, 1, 1331)
				}
			else	{	NextStep(0, 1)
				}
		};
	if	B(not 1331=no)
	then	{	Sent(1331, 3, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(brown, V2))) then if B(1000>V2) then if B(not 1331=no) then NextStep(0, 1, 1331) else NextStep(0, 1) else if B(not 1331=no) then NextStep(0, 1, 1331) else NextStep(0, 1); if B(not 1331=no) then Sent(1331, 3, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(brown, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 1331=no)
					then	{	NextStep(0, 1, 1331)
						}
					else	{	NextStep(0, 1)
						}
				}
		}
	else	{	if	B(not 1331=no)
			then	{	NextStep(0, 1, 1331)
				}
			else	{	NextStep(0, 1)
				}
		};
	if	B(not 1331=no)
	then	{	Sent(1331, 3, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 4736=no)
	then	{	NextStep(6, 1, 4736)
		}
	else	{	NextStep(6, 1)
		};
	if	B(not 4736=no)
	then	{	Sent(4736, 1, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4736)
},
{	if	B([actionresult([proposal,0,1331,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B(not 4736=no) then NextStep(6, 1, 4736) else NextStep(6, 1); if B(not 4736=no) then Sent(4736, 1, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 4736), if B([actionresult([proposal,0,1331,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(not 4736=no)
	then	{	NextStep(6, 1, 4736)
		}
	else	{	NextStep(6, 1)
		};
	if	B(not 4736=no)
	then	{	Sent(4736, 1, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4736)
},
{	if	B([actionresult([proposal,0,1331,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(not 1456=no)
	then	{	NextStep(6, 5, 1456)
		}
	else	{	NextStep(6, 5)
		};
	if	B(not 1456=no)
	then	{	Sent(1456, 1, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	ReceivedMessage(accept, 1456)
}


[new scheduled]:[if B(not 1456=no) then NextStep(6, 5, 1456) else NextStep(6, 5); if B(not 1456=no) then Sent(1456, 1, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), ReceivedMessage(accept, 1456)]
[After]:{	if	B(not 1456=no)
	then	{	NextStep(6, 5, 1456)
		}
	else	{	NextStep(6, 5)
		};
	if	B(not 1456=no)
	then	{	Sent(1456, 1, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	ReceivedMessage(accept, 1456)
}


[Planbase]:{	if	B(not 1331=no)
	then	{	NextStep(0, 1, 1331)
		}
	else	{	NextStep(0, 1)
		};
	if	B(not 1331=no)
	then	{	Sent(1331, 3, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 1331=no) then NextStep(0, 1, 1331) else NextStep(0, 1); if B(not 1331=no) then Sent(1331, 3, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 1331=no)
	then	{	NextStep(0, 1, 1331)
		}
	else	{	NextStep(0, 1)
		};
	if	B(not 1331=no)
	then	{	Sent(1331, 3, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NextStep(6, 1, 4736);
	if	B(not 4736=no)
	then	{	Sent(4736, 1, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4736)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 1331, open)
		}
}


[new scheduled]:[NextStep(6, 1, 4736); if B(not 4736=no) then Sent(4736, 1, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 4736), if B(proposal=proposal) then ReceivedProposal(0, 1331, open)]
[After]:{	NextStep(6, 1, 4736);
	if	B(not 4736=no)
	then	{	Sent(4736, 1, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4736)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 1331, open)
		}
}


[Planbase]:{	NextStep(6, 5, 1456);
	if	B(not 1456=no)
	then	{	Sent(1456, 1, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	ReceivedMessage(accept, 1456)
}


[new scheduled]:[NextStep(6, 5, 1456); if B(not 1456=no) then Sent(1456, 1, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), ReceivedMessage(accept, 1456)]
[After]:{	NextStep(6, 5, 1456);
	if	B(not 1456=no)
	then	{	Sent(1456, 1, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	ReceivedMessage(accept, 1456)
}


[Planbase]:{	NextStep(0, 1, 1331);
	if	B(not 1331=no)
	then	{	Sent(1331, 3, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NextStep(0, 1, 1331); if B(not 1331=no) then Sent(1331, 3, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NextStep(0, 1, 1331);
	if	B(not 1331=no)
	then	{	Sent(1331, 3, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 4736=no)
	then	{	Sent(4736, 1, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4736)
},
{	ReceivedProposal(0, 1331, open)
}


[new scheduled]:[if B(not 4736=no) then Sent(4736, 1, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 4736), ReceivedProposal(0, 1331, open)]
[Planbase]:{	if	B(not 1456=no)
	then	{	Sent(1456, 1, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	ReceivedMessage(accept, 1456)
}


[new scheduled]:[if B(not 1456=no) then Sent(1456, 1, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), ReceivedMessage(accept, 1456)]
[After]:{	if	B(not 4736=no)
	then	{	Sent(4736, 1, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4736)
},
{	ReceivedProposal(0, 1331, open)
}


[After]:{	if	B(not 1456=no)
	then	{	Sent(1456, 1, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	ReceivedMessage(accept, 1456)
}


[Planbase]:{	if	B(not 1331=no)
	then	{	Sent(1331, 3, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 1331=no) then Sent(1331, 3, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 1331=no)
	then	{	Sent(1331, 3, open, 4)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	Sent(4736, 1, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4736)
}


[new scheduled]:[getScoreAfterExchange(3, 1331); if G(at(A, B, C)) then skip else makeResponse(1331, accept), Sent(4736, 1, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 4736)]
[After]:{	getScoreAfterExchange(3, 1331);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(1331, accept)
		}
},
{	Sent(4736, 1, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4736)
}


[Planbase]:{	Sent(1456, 1, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	ReceivedMessage(accept, 1456)
}


[new scheduled]:[Sent(1456, 1, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), ReceivedMessage(accept, 1456)]
[After]:{	Sent(1456, 1, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	ReceivedMessage(accept, 1456)
}


[Planbase]:{	Sent(1331, 3, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[Sent(1331, 3, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	Sent(1331, 3, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	GetScoreAfterExchange(1331, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(1331, accept)
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[GetScoreAfterExchange(1331, yes); if G(at(A, B, C)) then skip else makeResponse(1331, accept), if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	GetScoreAfterExchange(1331, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(1331, accept)
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(1331, accept)
		}
},
{	if	B(scoreAfterExchange(1331, Score))
	then	{	respond(1331, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(A, B, C)) then skip else makeResponse(1331, accept), if B(scoreAfterExchange(1331, Score)) then respond(1331, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(1331, accept)
		}
},
{	if	B(scoreAfterExchange(1331, Score))
	then	{	respond(1331, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 0)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	skip
},
{	respond(1331, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[skip, respond(1331, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	skip
},
{	respond(1331, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 6, 5),L2,0);
	if	B(L2=[actionresult([6,5])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 5, Clock)
		};
	NoNextStep(6, 5, 1456);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 6, 5),L2,0); if B(L2=[actionresult([6,5])]) then {B(clock(Clock)); UpdatePosition(6, 5, Clock)}; NoNextStep(6, 5, 1456); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	@ctenv(moveStepToGoal(neco, 6, 5),L2,0);
	if	B(L2=[actionresult([6,5])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 5, Clock)
		};
	NoNextStep(6, 5, 1456);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


Need to wait 3 more seconds
org notification: Position [subject=a30, id=null, cell=Cell [x=6, y=5], time=2015-05-27 15:21:22.485, clock=9]
org notification: Position [subject=a30, id=null, cell=Cell [x=6, y=5], time=2015-05-27 15:21:22.485, clock=9]
object notification: Position [subject=a30, id=null, cell=Cell [x=6, y=5], time=2015-05-27 15:21:22.485, clock=9]
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B(ANSWER=accept);
	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>1000)
					then	{	B(ANSWER=reject)
						}
				}
		};
	makeResponse(1331, ANSWER)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[B(ANSWER=accept); if B(yes=no) then if B(prohibition(rejectRequests(V2))) then if B(V2>1000) then B(ANSWER=reject); makeResponse(1331, ANSWER), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	B(ANSWER=accept);
	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>1000)
					then	{	B(ANSWER=reject)
						}
				}
		};
	makeResponse(1331, ANSWER)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>1000)
					then	{	B(accept=reject)
						}
				}
		};
	makeResponse(1331, accept)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(yes=no) then if B(prohibition(rejectRequests(V2))) then if B(V2>1000) then B(accept=reject); makeResponse(1331, accept), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>1000)
					then	{	B(accept=reject)
						}
				}
		};
	makeResponse(1331, accept)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


org notification: Time [clock=6, time=2015-05-27 15:21:22.647]
org notification: Time [clock=6, time=2015-05-27 15:21:22.647]
object notification: Time [clock=6, time=2015-05-27 15:21:22.647]
object notification: Time [clock=6, time=2015-05-27 15:21:22.647]
object notification: Time [clock=6, time=2015-05-27 15:21:22.647]
Event processed UpdateClock(6)
Event processed UpdateClock(6)
[Planbase]:{	if	B(9>4+5)
	then	{	NoNextStep(0, 1, 1331);
			ReceivedMessage(noresponse, 1331)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(6)
}


[new scheduled]:[if B(9>4+5) then {NoNextStep(0, 1, 1331); ReceivedMessage(noresponse, 1331)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(6)]
[After]:{	if	B(9>4+5)
	then	{	NoNextStep(0, 1, 1331);
			ReceivedMessage(noresponse, 1331)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(6)
}


[Planbase]:{	makeResponse(1331, accept)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(6)
}


[new scheduled]:[makeResponse(1331, accept), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(6)]
[After]:{	makeResponse(1331, accept)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(6)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	sendResponse(accept, 1331)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[sendResponse(accept, 1331), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	sendResponse(accept, 1331)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 0)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(sendResponse(1331, accept),L1,0);
	Sent(accept, 1331)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(sendResponse(1331, accept),L1,0); Sent(accept, 1331), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(sendResponse(1331, accept),L1,0);
	Sent(accept, 1331)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
org notification: Response [id=1331, response=accepted, clock=6, time=2015-05-27 15:21:22.929]
org notification: Response [id=1331, response=accepted, clock=6, time=2015-05-27 15:21:22.929]
Event processed @ctenv(functionToList(message(response, 1331, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(response, 1331, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(message(response, 1331, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(response, 1331, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 6)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@29c8a0f8
[CTAH] The created APLList : [response,1331,accept]
[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,1331,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,1331,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,1331,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([response,1331,accept])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([response,1331,accept])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([response,1331,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,1331,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,1331,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,1331,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(0, 1, 1331);
			ReceivedMessage(noresponse, 1331)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 1331)
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(0, 1, 1331); ReceivedMessage(noresponse, 1331)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(response=response) then ReceivedMessage(accept, 1331)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(0, 1, 1331);
			ReceivedMessage(noresponse, 1331)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 1331)
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 1331)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 1331)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 1331)
}


[Planbase]:{	@ctenv(moveStepToGoal(white, 6, 1),L2,0);
	if	B(L2=[actionresult([6,1])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 1, Clock)
		};
	NoNextStep(6, 1, 4736);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(white, 6, 1),L2,0); if B(L2=[actionresult([6,1])]) then {B(clock(Clock)); UpdatePosition(6, 1, Clock)}; NoNextStep(6, 1, 4736); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoal(white, 6, 1),L2,0);
	if	B(L2=[actionresult([6,1])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 1, Clock)
		};
	NoNextStep(6, 1, 4736);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a40[CTAH] moveStepToGoal returns: false
org notification: Position [subject=a40, id=null, cell=Cell [x=6, y=1], time=2015-05-27 15:21:23.273, clock=6]
org notification: Position [subject=a40, id=null, cell=Cell [x=6, y=1], time=2015-05-27 15:21:23.273, clock=6]
object notification: Position [subject=a40, id=null, cell=Cell [x=6, y=1], time=2015-05-27 15:21:23.273, clock=6]
Event processed UpdatePosition(6, 1, 6)
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 0)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NoNextStep(6, 1, 4736);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(6, 1, 6)
}


[new scheduled]:[NoNextStep(6, 1, 4736); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdatePosition(6, 1, 6)]
[After]:{	NoNextStep(6, 1, 4736);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(6, 1, 6)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(white, 0, 1),L2,0);
	if	B(L2=[actionresult([0,1])])
	then	{	B(clock(Clock));
			UpdatePosition(0, 1, Clock)
		};
	NoNextStep(0, 1, 1331);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(white, 0, 1),L2,0); if B(L2=[actionresult([0,1])]) then {B(clock(Clock)); UpdatePosition(0, 1, Clock)}; NoNextStep(0, 1, 1331); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoal(white, 0, 1),L2,0);
	if	B(L2=[actionresult([0,1])])
	then	{	B(clock(Clock));
			UpdatePosition(0, 1, Clock)
		};
	NoNextStep(0, 1, 1331);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Need to wait 4 more seconds
org notification: Position [subject=a10, id=null, cell=Cell [x=0, y=1], time=2015-05-27 15:21:23.599, clock=6]
org notification: Position [subject=a10, id=null, cell=Cell [x=0, y=1], time=2015-05-27 15:21:23.599, clock=6]
object notification: Position [subject=a10, id=null, cell=Cell [x=0, y=1], time=2015-05-27 15:21:23.599, clock=6]
[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0) else if B(tile(white, X, Y)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(white, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(white, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(white, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a40[CTAH] going goal: 3,4 color: white
a30[CTAH] moveStepToGoal returns: [6,5]
Event processed UpdatePosition(6, 5, 9)
Event processed UpdateClock(6)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(6, 5, Clock);
	NoNextStep(6, 5, 1456);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	UpdatePosition(6, 5, 9)
},
{	UpdateClock(6)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(6, 5, Clock); NoNextStep(6, 5, 1456); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), UpdatePosition(6, 5, 9), UpdateClock(6)]
[After]:{	B(clock(Clock));
	UpdatePosition(6, 5, Clock);
	NoNextStep(6, 5, 1456);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	UpdatePosition(6, 5, 9)
},
{	UpdateClock(6)
}


[Planbase]:{	UpdatePosition(6, 5, 9);
	NoNextStep(6, 5, 1456);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[new scheduled]:[UpdatePosition(6, 5, 9); NoNextStep(6, 5, 1456); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10), adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)]
[After]:{	UpdatePosition(6, 5, 9);
	NoNextStep(6, 5, 1456);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
},
{	adoptz(useColor(white, 1000) : 27 May 2015 14:37:22 GMT, priority 10)
}


[Planbase]:{	NoNextStep(6, 5, 1456);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), NoNextStep(6, 5, 1456); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	NoNextStep(6, 5, 1456);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0) else if B(tile(white, X, Y)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(white, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(white, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(white, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] going goal: 4,3 color: white
a10[CTAH] moveStepToGoal returns: [0,1]
Event processed UpdatePosition(0, 1, 6)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(0, 1, Clock);
	NoNextStep(0, 1, 1331);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(0, 1, 6)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(0, 1, Clock); NoNextStep(0, 1, 1331); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdatePosition(0, 1, 6)]
[After]:{	B(clock(Clock));
	UpdatePosition(0, 1, Clock);
	NoNextStep(0, 1, 1331);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(0, 1, 6)
}


[Planbase]:{	UpdatePosition(0, 1, 6);
	NoNextStep(0, 1, 1331);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[UpdatePosition(0, 1, 6); NoNextStep(0, 1, 1331); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	UpdatePosition(0, 1, 6);
	NoNextStep(0, 1, 1331);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NoNextStep(0, 1, 1331);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NoNextStep(0, 1, 1331); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NoNextStep(0, 1, 1331);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0) else if B(tile(white, X, Y)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(white, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(white, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(white, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] going goal: 3,2 color: white
object notification: Time [clock=10, time=2015-05-27 15:21:29.372]
org notification: Time [clock=10, time=2015-05-27 15:21:29.372]
org notification: Time [clock=10, time=2015-05-27 15:21:29.372]
object notification: Time [clock=10, time=2015-05-27 15:21:29.372]
object notification: Time [clock=10, time=2015-05-27 15:21:29.372]
a40[CTAH] paths: 1000
a40[CTAH] path: 0
a40[CTAH] path: Path: [6][0] [6][1] [6][2] [6][3] [5][3] [4][3] [4][4] [3][4]

a40[CTAH] moveStepToGoalTest nopoints: []
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:6,C:1)
a40[CTAH] moveStepToGoalTest sent proposal for: [6,1,1,1532]
org notification: Proposal [id=1532, agent=a40, agent2=a20, clock=10, time=2015-05-27 15:21:29.843]
org notification: Proposal [id=1532, agent=a40, agent2=a20, clock=10, time=2015-05-27 15:21:29.843]
Event processed UpdateClock(10)
[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 1532=no)
							then	{	NextStep(6, 1, 1532)
								}
							else	{	NextStep(6, 1)
								}
						}
				}
			else	{	if	B(not 1532=no)
					then	{	NextStep(6, 1, 1532)
						}
					else	{	NextStep(6, 1)
						}
				}
		};
	if	B(not 1532=no)
	then	{	Sent(1532, 1, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(10)
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 6, 1)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 1532=no) then NextStep(6, 1, 1532) else NextStep(6, 1) else if B(not 1532=no) then NextStep(6, 1, 1532) else NextStep(6, 1); if B(not 1532=no) then Sent(1532, 1, open, Clock); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(10)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 1532=no)
							then	{	NextStep(6, 1, 1532)
								}
							else	{	NextStep(6, 1)
								}
						}
				}
			else	{	if	B(not 1532=no)
					then	{	NextStep(6, 1, 1532)
						}
					else	{	NextStep(6, 1)
						}
				}
		};
	if	B(not 1532=no)
	then	{	Sent(1532, 1, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(10)
}


[Planbase]:{	if	B(tile(Color1, 6, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 1532=no)
							then	{	NextStep(6, 1, 1532)
								}
							else	{	NextStep(6, 1)
								}
						}
				}
			else	{	if	B(not 1532=no)
					then	{	NextStep(6, 1, 1532)
						}
					else	{	NextStep(6, 1)
						}
				}
		};
	if	B(not 1532=no)
	then	{	Sent(1532, 1, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(Color1, 6, 1)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 1532=no) then NextStep(6, 1, 1532) else NextStep(6, 1) else if B(not 1532=no) then NextStep(6, 1, 1532) else NextStep(6, 1); if B(not 1532=no) then Sent(1532, 1, open, 6); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(Color1, 6, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 1532=no)
							then	{	NextStep(6, 1, 1532)
								}
							else	{	NextStep(6, 1)
								}
						}
				}
			else	{	if	B(not 1532=no)
					then	{	NextStep(6, 1, 1532)
						}
					else	{	NextStep(6, 1)
						}
				}
		};
	if	B(not 1532=no)
	then	{	Sent(1532, 1, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(brown, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 1532=no)
					then	{	NextStep(6, 1, 1532)
						}
					else	{	NextStep(6, 1)
						}
				}
		}
	else	{	if	B(not 1532=no)
			then	{	NextStep(6, 1, 1532)
				}
			else	{	NextStep(6, 1)
				}
		};
	if	B(not 1532=no)
	then	{	Sent(1532, 1, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(brown, V2))) then if B(1000>V2) then if B(not 1532=no) then NextStep(6, 1, 1532) else NextStep(6, 1) else if B(not 1532=no) then NextStep(6, 1, 1532) else NextStep(6, 1); if B(not 1532=no) then Sent(1532, 1, open, 6); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(brown, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 1532=no)
					then	{	NextStep(6, 1, 1532)
						}
					else	{	NextStep(6, 1)
						}
				}
		}
	else	{	if	B(not 1532=no)
			then	{	NextStep(6, 1, 1532)
				}
			else	{	NextStep(6, 1)
				}
		};
	if	B(not 1532=no)
	then	{	Sent(1532, 1, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 1532=no)
	then	{	NextStep(6, 1, 1532)
		}
	else	{	NextStep(6, 1)
		};
	if	B(not 1532=no)
	then	{	Sent(1532, 1, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 1532=no) then NextStep(6, 1, 1532) else NextStep(6, 1); if B(not 1532=no) then Sent(1532, 1, open, 6); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 1532=no)
	then	{	NextStep(6, 1, 1532)
		}
	else	{	NextStep(6, 1)
		};
	if	B(not 1532=no)
	then	{	Sent(1532, 1, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NextStep(6, 1, 1532);
	if	B(not 1532=no)
	then	{	Sent(1532, 1, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NextStep(6, 1, 1532); if B(not 1532=no) then Sent(1532, 1, open, 6); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NextStep(6, 1, 1532);
	if	B(not 1532=no)
	then	{	Sent(1532, 1, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 1532=no)
	then	{	Sent(1532, 1, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 1532=no) then Sent(1532, 1, open, 6); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 1532=no)
	then	{	Sent(1532, 1, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	Sent(1532, 1, open, 6);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[Sent(1532, 1, open, 6); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	Sent(1532, 1, open, 6);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 1, 1532);
			ReceivedMessage(noresponse, 1532)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>6+5) then {NoNextStep(6, 1, 1532); ReceivedMessage(noresponse, 1532)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 1, 1532);
			ReceivedMessage(noresponse, 1532)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 1, 1532);
			ReceivedMessage(noresponse, 1532)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(10>6+5) then {NoNextStep(6, 1, 1532); ReceivedMessage(noresponse, 1532)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 1, 1532);
			ReceivedMessage(noresponse, 1532)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
org notification: Response [id=1532, response=accepted, clock=10, time=2015-05-27 15:21:31.259]
org notification: Response [id=1532, response=accepted, clock=10, time=2015-05-27 15:21:31.259]
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed @ctenv(functionToList(message(response, 1532, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(response, 1532, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(message(response, 1532, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(response, 1532, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@7c5ad06f
[CTAH] The created APLList : [response,1532,accept]
[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,1532,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,1532,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,1532,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([response,1532,accept])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([response,1532,accept])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([response,1532,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,1532,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,1532,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,1532,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 1, 1532);
			ReceivedMessage(noresponse, 1532)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 1532)
		}
}


[new scheduled]:[if B(10>6+5) then {NoNextStep(6, 1, 1532); ReceivedMessage(noresponse, 1532)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(response=response) then ReceivedMessage(accept, 1532)]
[After]:{	if	B(10>6+5)
	then	{	NoNextStep(6, 1, 1532);
			ReceivedMessage(noresponse, 1532)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 1532)
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 1532)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 1532)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 1532)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(white, 6, 1),L2,0);
	if	B(L2=[actionresult([6,1])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 1, Clock)
		};
	NoNextStep(6, 1, 1532);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(white, 6, 1),L2,0); if B(L2=[actionresult([6,1])]) then {B(clock(Clock)); UpdatePosition(6, 1, Clock)}; NoNextStep(6, 1, 1532); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoal(white, 6, 1),L2,0);
	if	B(L2=[actionresult([6,1])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 1, Clock)
		};
	NoNextStep(6, 1, 1532);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a40[CTAH] moveStepToGoal returns: false
object notification: Position [subject=a40, id=null, cell=Cell [x=6, y=1], time=2015-05-27 15:21:31.921, clock=10]
org notification: Position [subject=a40, id=null, cell=Cell [x=6, y=1], time=2015-05-27 15:21:31.921, clock=10]
Event processed UpdatePosition(6, 1, 10)
org notification: Position [subject=a40, id=null, cell=Cell [x=6, y=1], time=2015-05-27 15:21:31.921, clock=10]
[Planbase]:{	NoNextStep(6, 1, 1532);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(6, 1, 10)
}


[new scheduled]:[NoNextStep(6, 1, 1532); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdatePosition(6, 1, 10)]
[After]:{	NoNextStep(6, 1, 1532);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(6, 1, 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0) else if B(tile(white, X, Y)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(white, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(white, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(white, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a40[CTAH] going goal: 3,4 color: white
object notification: Time [clock=7, time=2015-05-27 15:21:32.65]
org notification: Time [clock=7, time=2015-05-27 15:21:32.65]
org notification: Time [clock=7, time=2015-05-27 15:21:32.65]
object notification: Time [clock=7, time=2015-05-27 15:21:32.65]
object notification: Time [clock=7, time=2015-05-27 15:21:32.65]
a30[CTAH] paths: 1000
Need to wait 3 more seconds
a10[CTAH] paths: 1000
Need to wait 4 more seconds
a30[CTAH] path: 0
a30[CTAH] path: Path: [6][5] [6][4] [6][3] [5][3] [4][3]

a30[CTAH] moveStepToGoalTest nopoints: []
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:6,C:4)
a30[CTAH] moveStepToGoalTest sent proposal for: [6,4,0,6306]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
org notification: Proposal [id=6306, agent=a30, agent2=a10, clock=7, time=2015-05-27 15:21:35.99]
org notification: Proposal [id=6306, agent=a30, agent2=a10, clock=7, time=2015-05-27 15:21:35.99]
Received a proposal creating event
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
Event processed UpdateClock(10)
Event processed UpdateClock(7)
[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 4))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 6306=no)
							then	{	NextStep(6, 4, 6306)
								}
							else	{	NextStep(6, 4)
								}
						}
				}
			else	{	if	B(not 6306=no)
					then	{	NextStep(6, 4, 6306)
						}
					else	{	NextStep(6, 4)
						}
				}
		};
	if	B(not 6306=no)
	then	{	Sent(6306, 0, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(10)
},
{	UpdateClock(7)
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 6, 4)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 6306=no) then NextStep(6, 4, 6306) else NextStep(6, 4) else if B(not 6306=no) then NextStep(6, 4, 6306) else NextStep(6, 4); if B(not 6306=no) then Sent(6306, 0, open, Clock); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(10), UpdateClock(7)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 4))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 6306=no)
							then	{	NextStep(6, 4, 6306)
								}
							else	{	NextStep(6, 4)
								}
						}
				}
			else	{	if	B(not 6306=no)
					then	{	NextStep(6, 4, 6306)
						}
					else	{	NextStep(6, 4)
						}
				}
		};
	if	B(not 6306=no)
	then	{	Sent(6306, 0, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(10)
},
{	UpdateClock(7)
}


[Planbase]:{	if	B(tile(Color1, 6, 4))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 6306=no)
							then	{	NextStep(6, 4, 6306)
								}
							else	{	NextStep(6, 4)
								}
						}
				}
			else	{	if	B(not 6306=no)
					then	{	NextStep(6, 4, 6306)
						}
					else	{	NextStep(6, 4)
						}
				}
		};
	if	B(not 6306=no)
	then	{	Sent(6306, 0, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(Color1, 6, 4)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 6306=no) then NextStep(6, 4, 6306) else NextStep(6, 4) else if B(not 6306=no) then NextStep(6, 4, 6306) else NextStep(6, 4); if B(not 6306=no) then Sent(6306, 0, open, 6); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(Color1, 6, 4))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 6306=no)
							then	{	NextStep(6, 4, 6306)
								}
							else	{	NextStep(6, 4)
								}
						}
				}
			else	{	if	B(not 6306=no)
					then	{	NextStep(6, 4, 6306)
						}
					else	{	NextStep(6, 4)
						}
				}
		};
	if	B(not 6306=no)
	then	{	Sent(6306, 0, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 6306=no)
					then	{	NextStep(6, 4, 6306)
						}
					else	{	NextStep(6, 4)
						}
				}
		}
	else	{	if	B(not 6306=no)
			then	{	NextStep(6, 4, 6306)
				}
			else	{	NextStep(6, 4)
				}
		};
	if	B(not 6306=no)
	then	{	Sent(6306, 0, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(1000>V2) then if B(not 6306=no) then NextStep(6, 4, 6306) else NextStep(6, 4) else if B(not 6306=no) then NextStep(6, 4, 6306) else NextStep(6, 4); if B(not 6306=no) then Sent(6306, 0, open, 6); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 6306=no)
					then	{	NextStep(6, 4, 6306)
						}
					else	{	NextStep(6, 4)
						}
				}
		}
	else	{	if	B(not 6306=no)
			then	{	NextStep(6, 4, 6306)
				}
			else	{	NextStep(6, 4)
				}
		};
	if	B(not 6306=no)
	then	{	Sent(6306, 0, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 6306=no)
	then	{	NextStep(6, 4, 6306)
		}
	else	{	NextStep(6, 4)
		};
	if	B(not 6306=no)
	then	{	Sent(6306, 0, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 6306=no) then NextStep(6, 4, 6306) else NextStep(6, 4); if B(not 6306=no) then Sent(6306, 0, open, 6); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 6306=no)
	then	{	NextStep(6, 4, 6306)
		}
	else	{	NextStep(6, 4)
		};
	if	B(not 6306=no)
	then	{	Sent(6306, 0, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NextStep(6, 4, 6306);
	if	B(not 6306=no)
	then	{	Sent(6306, 0, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NextStep(6, 4, 6306); if B(not 6306=no) then Sent(6306, 0, open, 6); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NextStep(6, 4, 6306);
	if	B(not 6306=no)
	then	{	Sent(6306, 0, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 6306=no)
	then	{	Sent(6306, 0, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 6306=no) then Sent(6306, 0, open, 6); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 6306=no)
	then	{	Sent(6306, 0, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	Sent(6306, 0, open, 6);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[Sent(6306, 0, open, 6); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	Sent(6306, 0, open, 6);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 4, 6306); ReceivedMessage(noresponse, 6306)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 4, 6306); ReceivedMessage(noresponse, 6306)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 4, 6306); ReceivedMessage(noresponse, 6306)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 4, 6306); ReceivedMessage(noresponse, 6306)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 4, 6306); ReceivedMessage(noresponse, 6306)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a40[CTAH] paths: 1000
a40[CTAH] path: 0
a40[CTAH] path: Path: [6][1] [6][2] [6][3] [5][3] [5][4] [4][4] [3][4]

a40[CTAH] moveStepToGoalTest nopoints: []
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:6,C:2)
a40[CTAH] moveStepToGoalTest sent proposal for: [6,2,0,3916]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
org notification: Proposal [id=3916, agent=a40, agent2=a10, clock=7, time=2015-05-27 15:21:37.915]
org notification: Proposal [id=3916, agent=a40, agent2=a10, clock=7, time=2015-05-27 15:21:37.915]
Received a proposal creating event
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
Event processed UpdateClock(7)
[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 3916=no)
							then	{	NextStep(6, 2, 3916)
								}
							else	{	NextStep(6, 2)
								}
						}
				}
			else	{	if	B(not 3916=no)
					then	{	NextStep(6, 2, 3916)
						}
					else	{	NextStep(6, 2)
						}
				}
		};
	if	B(not 3916=no)
	then	{	Sent(3916, 0, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(7)
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 6, 2)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 3916=no) then NextStep(6, 2, 3916) else NextStep(6, 2) else if B(not 3916=no) then NextStep(6, 2, 3916) else NextStep(6, 2); if B(not 3916=no) then Sent(3916, 0, open, Clock); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(7)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 6, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 3916=no)
							then	{	NextStep(6, 2, 3916)
								}
							else	{	NextStep(6, 2)
								}
						}
				}
			else	{	if	B(not 3916=no)
					then	{	NextStep(6, 2, 3916)
						}
					else	{	NextStep(6, 2)
						}
				}
		};
	if	B(not 3916=no)
	then	{	Sent(3916, 0, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(7)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(tile(Color1, 6, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 3916=no)
							then	{	NextStep(6, 2, 3916)
								}
							else	{	NextStep(6, 2)
								}
						}
				}
			else	{	if	B(not 3916=no)
					then	{	NextStep(6, 2, 3916)
						}
					else	{	NextStep(6, 2)
						}
				}
		};
	if	B(not 3916=no)
	then	{	Sent(3916, 0, open, 10)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(Color1, 6, 2)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 3916=no) then NextStep(6, 2, 3916) else NextStep(6, 2) else if B(not 3916=no) then NextStep(6, 2, 3916) else NextStep(6, 2); if B(not 3916=no) then Sent(3916, 0, open, 10); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(Color1, 6, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 3916=no)
							then	{	NextStep(6, 2, 3916)
								}
							else	{	NextStep(6, 2)
								}
						}
				}
			else	{	if	B(not 3916=no)
					then	{	NextStep(6, 2, 3916)
						}
					else	{	NextStep(6, 2)
						}
				}
		};
	if	B(not 3916=no)
	then	{	Sent(3916, 0, open, 10)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 3916=no)
					then	{	NextStep(6, 2, 3916)
						}
					else	{	NextStep(6, 2)
						}
				}
		}
	else	{	if	B(not 3916=no)
			then	{	NextStep(6, 2, 3916)
				}
			else	{	NextStep(6, 2)
				}
		};
	if	B(not 3916=no)
	then	{	Sent(3916, 0, open, 10)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(1000>V2) then if B(not 3916=no) then NextStep(6, 2, 3916) else NextStep(6, 2) else if B(not 3916=no) then NextStep(6, 2, 3916) else NextStep(6, 2); if B(not 3916=no) then Sent(3916, 0, open, 10); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 3916=no)
					then	{	NextStep(6, 2, 3916)
						}
					else	{	NextStep(6, 2)
						}
				}
		}
	else	{	if	B(not 3916=no)
			then	{	NextStep(6, 2, 3916)
				}
			else	{	NextStep(6, 2)
				}
		};
	if	B(not 3916=no)
	then	{	Sent(3916, 0, open, 10)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 4, 6306); ReceivedMessage(noresponse, 6306)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 3916=no)
	then	{	NextStep(6, 2, 3916)
		}
	else	{	NextStep(6, 2)
		};
	if	B(not 3916=no)
	then	{	Sent(3916, 0, open, 10)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 3916=no) then NextStep(6, 2, 3916) else NextStep(6, 2); if B(not 3916=no) then Sent(3916, 0, open, 10); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 3916=no)
	then	{	NextStep(6, 2, 3916)
		}
	else	{	NextStep(6, 2)
		};
	if	B(not 3916=no)
	then	{	Sent(3916, 0, open, 10)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NextStep(6, 2, 3916);
	if	B(not 3916=no)
	then	{	Sent(3916, 0, open, 10)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NextStep(6, 2, 3916); if B(not 3916=no) then Sent(3916, 0, open, 10); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NextStep(6, 2, 3916);
	if	B(not 3916=no)
	then	{	Sent(3916, 0, open, 10)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 3916=no)
	then	{	Sent(3916, 0, open, 10)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 3916=no) then Sent(3916, 0, open, 10); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 3916=no)
	then	{	Sent(3916, 0, open, 10)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	Sent(3916, 0, open, 10);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[Sent(3916, 0, open, 10); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	Sent(3916, 0, open, 10);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 4, 6306); ReceivedMessage(noresponse, 6306)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>10+5)
	then	{	NoNextStep(6, 2, 3916);
			ReceivedMessage(noresponse, 3916)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>10+5) then {NoNextStep(6, 2, 3916); ReceivedMessage(noresponse, 3916)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>10+5)
	then	{	NoNextStep(6, 2, 3916);
			ReceivedMessage(noresponse, 3916)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 4, 6306); ReceivedMessage(noresponse, 6306)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>10+5)
	then	{	NoNextStep(6, 2, 3916);
			ReceivedMessage(noresponse, 3916)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>10+5) then {NoNextStep(6, 2, 3916); ReceivedMessage(noresponse, 3916)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>10+5)
	then	{	NoNextStep(6, 2, 3916);
			ReceivedMessage(noresponse, 3916)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(7>6+5) then {NoNextStep(6, 4, 6306); ReceivedMessage(noresponse, 6306)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(7>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


org notification: Time [clock=11, time=2015-05-27 15:21:39.375]
object notification: Time [clock=11, time=2015-05-27 15:21:39.375]
object notification: Time [clock=11, time=2015-05-27 15:21:39.375]
object notification: Time [clock=11, time=2015-05-27 15:21:39.375]
org notification: Time [clock=11, time=2015-05-27 15:21:39.375]
Event processed UpdateClock(11)
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(11)
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(11)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(11)
}


Event processed UpdateClock(11)
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(11)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(11)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(11)
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(6, 2, 3916);
			ReceivedMessage(noresponse, 3916)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(6, 2, 3916); ReceivedMessage(noresponse, 3916)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(6, 2, 3916);
			ReceivedMessage(noresponse, 3916)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] path: 0
a10[CTAH] path: Path: [0][1] [1][1] [2][1] [2][2] [3][2]

a10[CTAH] moveStepToGoalTest nopoints: []
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:1,C:1)
a10[CTAH] moveStepToGoalTest sent proposal for: [1,1,3,4190]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
org notification: Proposal [id=4190, agent=a10, agent2=a40, clock=11, time=2015-05-27 15:21:39.728]
org notification: Proposal [id=4190, agent=a10, agent2=a40, clock=11, time=2015-05-27 15:21:39.728]
Received a proposal creating event
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed @ctenv(functionToList(proposal(proposal, 0, 4190, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateClock(10)
Event processed UpdateClock(7)
Event processed @ctenv(functionToList(proposal(proposal, 2, 6306, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(proposal(proposal, 3, 3916, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateClock(11)
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 0, 4190, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(proposal(proposal, 0, 4190, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 0, 4190, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 1, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 4190=no)
							then	{	NextStep(1, 1, 4190)
								}
							else	{	NextStep(1, 1)
								}
						}
				}
			else	{	if	B(not 4190=no)
					then	{	NextStep(1, 1, 4190)
						}
					else	{	NextStep(1, 1)
						}
				}
		};
	if	B(not 4190=no)
	then	{	Sent(4190, 3, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(10)
},
{	UpdateClock(7)
},
{	@ctenv(functionToList(proposal(proposal, 2, 6306, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 3, 3916, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateClock(11)
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 1, 1)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 4190=no) then NextStep(1, 1, 4190) else NextStep(1, 1) else if B(not 4190=no) then NextStep(1, 1, 4190) else NextStep(1, 1); if B(not 4190=no) then Sent(4190, 3, open, Clock); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(10), UpdateClock(7), @ctenv(functionToList(proposal(proposal, 2, 6306, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), @ctenv(functionToList(proposal(proposal, 3, 3916, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(11)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 1, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 4190=no)
							then	{	NextStep(1, 1, 4190)
								}
							else	{	NextStep(1, 1)
								}
						}
				}
			else	{	if	B(not 4190=no)
					then	{	NextStep(1, 1, 4190)
						}
					else	{	NextStep(1, 1)
						}
				}
		};
	if	B(not 4190=no)
	then	{	Sent(4190, 3, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(10)
},
{	UpdateClock(7)
},
{	@ctenv(functionToList(proposal(proposal, 2, 6306, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 3, 3916, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateClock(11)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@f6eecef
[CTAH] The created APLList : [proposal,0,4190,open]
[CTAH] Array of Terms: [Lapapl.data.Term;@3b375e2e
[CTAH] Array of Terms: [Lapapl.data.Term;@30083c61
[CTAH] The created APLList : [proposal,2,6306,open]
[CTAH] The created APLList : [proposal,3,3916,open]
[Planbase]:{	if	B(11>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>6+5) then {NoNextStep(6, 4, 6306); ReceivedMessage(noresponse, 6306)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,4190,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,0,4190,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,0,4190,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,0,4190,open])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([proposal,0,4190,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,0,4190,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,4190,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,0,4190,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,0,4190,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(tile(Color1, 1, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 4190=no)
							then	{	NextStep(1, 1, 4190)
								}
							else	{	NextStep(1, 1)
								}
						}
				}
			else	{	if	B(not 4190=no)
					then	{	NextStep(1, 1, 4190)
						}
					else	{	NextStep(1, 1)
						}
				}
		};
	if	B(not 4190=no)
	then	{	Sent(4190, 3, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,6306,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,2,6306,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,2,6306,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	if	B([actionresult([proposal,3,3916,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,3,3916,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,3,3916,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(tile(Color1, 1, 1)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not 4190=no) then NextStep(1, 1, 4190) else NextStep(1, 1) else if B(not 4190=no) then NextStep(1, 1, 4190) else NextStep(1, 1); if B(not 4190=no) then Sent(4190, 3, open, 6); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,2,6306,open])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([proposal,2,6306,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,2,6306,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), if B([actionresult([proposal,3,3916,open])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([proposal,3,3916,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,3,3916,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(tile(Color1, 1, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not 4190=no)
							then	{	NextStep(1, 1, 4190)
								}
							else	{	NextStep(1, 1)
								}
						}
				}
			else	{	if	B(not 4190=no)
					then	{	NextStep(1, 1, 4190)
						}
					else	{	NextStep(1, 1)
						}
				}
		};
	if	B(not 4190=no)
	then	{	Sent(4190, 3, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,6306,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,2,6306,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,2,6306,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	if	B([actionresult([proposal,3,3916,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,3,3916,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,3,3916,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,4190,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,4190,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,0,4190,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,0,4190,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,4190,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,4190,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 4190=no)
					then	{	NextStep(1, 1, 4190)
						}
					else	{	NextStep(1, 1)
						}
				}
		}
	else	{	if	B(not 4190=no)
			then	{	NextStep(1, 1, 4190)
				}
			else	{	NextStep(1, 1)
				}
		};
	if	B(not 4190=no)
	then	{	Sent(4190, 3, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,6306,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,6306,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	if	B([actionresult([proposal,3,3916,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,3916,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(1000>V2) then if B(not 4190=no) then NextStep(1, 1, 4190) else NextStep(1, 1) else if B(not 4190=no) then NextStep(1, 1, 4190) else NextStep(1, 1); if B(not 4190=no) then Sent(4190, 3, open, 6); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,2,6306,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,2,6306,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), if B([actionresult([proposal,3,3916,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,3,3916,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not 4190=no)
					then	{	NextStep(1, 1, 4190)
						}
					else	{	NextStep(1, 1)
						}
				}
		}
	else	{	if	B(not 4190=no)
			then	{	NextStep(1, 1, 4190)
				}
			else	{	NextStep(1, 1)
				}
		};
	if	B(not 4190=no)
	then	{	Sent(4190, 3, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,6306,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,6306,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
},
{	if	B([actionresult([proposal,3,3916,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,3916,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,4190,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,0,4190,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,4190,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(not 4190=no)
	then	{	NextStep(1, 1, 4190)
		}
	else	{	NextStep(1, 1)
		};
	if	B(not 4190=no)
	then	{	Sent(4190, 3, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,6306,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
},
{	if	B([actionresult([proposal,3,3916,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B(not 4190=no) then NextStep(1, 1, 4190) else NextStep(1, 1); if B(not 4190=no) then Sent(4190, 3, open, 6); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,2,6306,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), if B([actionresult([proposal,3,3916,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(not 4190=no)
	then	{	NextStep(1, 1, 4190)
		}
	else	{	NextStep(1, 1)
		};
	if	B(not 4190=no)
	then	{	Sent(4190, 3, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,6306,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
},
{	if	B([actionresult([proposal,3,3916,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(6, 2, 3916);
			ReceivedMessage(noresponse, 3916)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 4190, open)
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(6, 2, 3916); ReceivedMessage(noresponse, 3916)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(proposal=proposal) then ReceivedProposal(0, 4190, open)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(6, 2, 3916);
			ReceivedMessage(noresponse, 3916)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 4190, open)
		}
}


[Planbase]:{	NextStep(1, 1, 4190);
	if	B(not 4190=no)
	then	{	Sent(4190, 3, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 6306, open)
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 3916, open)
		}
}


[new scheduled]:[NextStep(1, 1, 4190); if B(not 4190=no) then Sent(4190, 3, open, 6); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(proposal=proposal) then ReceivedProposal(2, 6306, open), if B(proposal=proposal) then ReceivedProposal(3, 3916, open)]
[After]:{	NextStep(1, 1, 4190);
	if	B(not 4190=no)
	then	{	Sent(4190, 3, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 6306, open)
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 3916, open)
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(0, 4190, open)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedProposal(0, 4190, open)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(0, 4190, open)
}


[Planbase]:{	if	B(not 4190=no)
	then	{	Sent(4190, 3, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(2, 6306, open)
},
{	ReceivedProposal(3, 3916, open)
}


[new scheduled]:[if B(not 4190=no) then Sent(4190, 3, open, 6); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedProposal(2, 6306, open), ReceivedProposal(3, 3916, open)]
[After]:{	if	B(not 4190=no)
	then	{	Sent(4190, 3, open, 6)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(2, 6306, open)
},
{	ReceivedProposal(3, 3916, open)
}


[Planbase]:{	if	B(11>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>6+5) then {NoNextStep(6, 4, 6306); ReceivedMessage(noresponse, 6306)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[getScoreAfterExchange(3, 4190); if G(at(A, B, C)) then skip else makeResponse(4190, accept), if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	getScoreAfterExchange(3, 4190);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(4190, accept)
		}
},
{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	Sent(4190, 3, open, 6);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[getScoreAfterExchange(0, 6306); if G(at(A, B, C)) then skip else makeResponse(6306, accept), Sent(4190, 3, open, 6); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	getScoreAfterExchange(0, 6306);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(6306, accept)
		}
},
{	Sent(4190, 3, open, 6);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	GetScoreAfterExchange(4190, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(4190, accept)
		}
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[GetScoreAfterExchange(4190, yes); if G(at(A, B, C)) then skip else makeResponse(4190, accept), if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	GetScoreAfterExchange(4190, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(4190, accept)
		}
},
{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	GetScoreAfterExchange(6306, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(6306, accept)
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[GetScoreAfterExchange(6306, yes); if G(at(A, B, C)) then skip else makeResponse(6306, accept), if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	GetScoreAfterExchange(6306, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(6306, accept)
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(4190, accept)
		}
},
{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(A, B, C)) then skip else makeResponse(4190, accept), findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(4190, accept)
		}
},
{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(6306, accept)
		}
},
{	if	B(scoreAfterExchange(6306, Score))
	then	{	respond(6306, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(A, B, C)) then skip else makeResponse(6306, accept), if B(scoreAfterExchange(6306, Score)) then respond(6306, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(6306, accept)
		}
},
{	if	B(scoreAfterExchange(6306, Score))
	then	{	respond(6306, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	skip
},
{	if	B(11>10+5)
	then	{	NoNextStep(6, 2, 3916);
			ReceivedMessage(noresponse, 3916)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[skip, if B(11>10+5) then {NoNextStep(6, 2, 3916); ReceivedMessage(noresponse, 3916)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	skip
},
{	if	B(11>10+5)
	then	{	NoNextStep(6, 2, 3916);
			ReceivedMessage(noresponse, 3916)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	skip
},
{	respond(6306, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[skip, respond(6306, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	skip
},
{	respond(6306, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B(ANSWER=accept);
	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>1000)
					then	{	B(ANSWER=reject)
						}
				}
		};
	makeResponse(6306, ANSWER)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[getScoreAfterExchange(0, 3916); if G(at(A, B, C)) then skip else makeResponse(3916, accept), B(ANSWER=accept); if B(yes=no) then if B(prohibition(rejectRequests(V2))) then if B(V2>1000) then B(ANSWER=reject); makeResponse(6306, ANSWER), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	getScoreAfterExchange(0, 3916);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(3916, accept)
		}
},
{	B(ANSWER=accept);
	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>1000)
					then	{	B(ANSWER=reject)
						}
				}
		};
	makeResponse(6306, ANSWER)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>6+5) then {NoNextStep(6, 4, 6306); ReceivedMessage(noresponse, 6306)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(scoreAfterExchange(4190, Score))
	then	{	respond(4190, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(scoreAfterExchange(4190, Score)) then respond(4190, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(scoreAfterExchange(4190, Score))
	then	{	respond(4190, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	GetScoreAfterExchange(3916, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(3916, accept)
		}
},
{	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>1000)
					then	{	B(accept=reject)
						}
				}
		};
	makeResponse(6306, accept)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[GetScoreAfterExchange(3916, yes); if G(at(A, B, C)) then skip else makeResponse(3916, accept), if B(yes=no) then if B(prohibition(rejectRequests(V2))) then if B(V2>1000) then B(accept=reject); makeResponse(6306, accept), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	GetScoreAfterExchange(3916, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(3916, accept)
		}
},
{	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>1000)
					then	{	B(accept=reject)
						}
				}
		};
	makeResponse(6306, accept)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	respond(4190, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[respond(4190, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	respond(4190, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(3916, accept)
		}
},
{	makeResponse(6306, accept)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(A, B, C)) then skip else makeResponse(3916, accept), makeResponse(6306, accept), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(3916, accept)
		}
},
{	makeResponse(6306, accept)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B(ANSWER=accept);
	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>1000)
					then	{	B(ANSWER=reject)
						}
				}
		};
	makeResponse(4190, ANSWER)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[B(ANSWER=accept); if B(yes=no) then if B(prohibition(rejectRequests(V2))) then if B(V2>1000) then B(ANSWER=reject); makeResponse(4190, ANSWER), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	B(ANSWER=accept);
	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>1000)
					then	{	B(ANSWER=reject)
						}
				}
		};
	makeResponse(4190, ANSWER)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	skip
},
{	sendResponse(accept, 6306)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[skip, sendResponse(accept, 6306), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	skip
},
{	sendResponse(accept, 6306)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>1000)
					then	{	B(accept=reject)
						}
				}
		};
	makeResponse(4190, accept)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(yes=no) then if B(prohibition(rejectRequests(V2))) then if B(V2>1000) then B(accept=reject); makeResponse(4190, accept), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>1000)
					then	{	B(accept=reject)
						}
				}
		};
	makeResponse(4190, accept)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(sendResponse(6306, accept),L1,0);
	Sent(accept, 6306)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(sendResponse(6306, accept),L1,0); Sent(accept, 6306), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(sendResponse(6306, accept),L1,0);
	Sent(accept, 6306)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=6306, response=accepted, clock=11, time=2015-05-27 15:21:41.862]
org notification: Response [id=6306, response=accepted, clock=11, time=2015-05-27 15:21:41.862]
[Planbase]:{	makeResponse(4190, accept)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[makeResponse(4190, accept), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	makeResponse(4190, accept)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed @ctenv(functionToList(message(response, 6306, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B(11>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(response, 6306, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[if B(11>6+5) then {NoNextStep(6, 4, 6306); ReceivedMessage(noresponse, 6306)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(message(response, 6306, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(11>6+5)
	then	{	NoNextStep(6, 4, 6306);
			ReceivedMessage(noresponse, 6306)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(response, 6306, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Planbase]:{	sendResponse(accept, 4190)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[sendResponse(accept, 4190), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	sendResponse(accept, 4190)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@141726c4
[CTAH] The created APLList : [response,6306,accept]
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,6306,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,6306,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,6306,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([response,6306,accept])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([response,6306,accept])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([response,6306,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,6306,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,6306,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,6306,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(sendResponse(4190, accept),L1,0);
	Sent(accept, 4190)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(sendResponse(4190, accept),L1,0); Sent(accept, 4190), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(sendResponse(4190, accept),L1,0);
	Sent(accept, 4190)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
org notification: Response [id=4190, response=accepted, clock=11, time=2015-05-27 15:21:42.298]
org notification: Response [id=4190, response=accepted, clock=11, time=2015-05-27 15:21:42.298]
Event processed @ctenv(functionToList(message(response, 4190, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(response, 4190, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(message(response, 4190, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(response, 4190, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 6306)
		}
}


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(response=response) then ReceivedMessage(accept, 6306)]
[After]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 6306)
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@2f6c824
[CTAH] The created APLList : [response,4190,accept]
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>6+5)
	then	{	NoNextStep(1, 1, 4190);
			ReceivedMessage(noresponse, 4190)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,4190,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,4190,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,4190,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(11>6+5) then {NoNextStep(1, 1, 4190); ReceivedMessage(noresponse, 4190)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([response,4190,accept])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([response,4190,accept])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([response,4190,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(11>6+5)
	then	{	NoNextStep(1, 1, 4190);
			ReceivedMessage(noresponse, 4190)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,4190,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,4190,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,4190,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 6306)
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 6306)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 6306)
}


org notification: Time [clock=8, time=2015-05-27 15:21:42.652]
object notification: Time [clock=8, time=2015-05-27 15:21:42.652]
object notification: Time [clock=8, time=2015-05-27 15:21:42.652]
object notification: Time [clock=8, time=2015-05-27 15:21:42.652]
org notification: Time [clock=8, time=2015-05-27 15:21:42.652]
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed UpdateClock(8)
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 4190)
		}
},
{	UpdateClock(8)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(response=response) then ReceivedMessage(accept, 4190), UpdateClock(8)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 4190)
		}
},
{	UpdateClock(8)
}


Event processed UpdateClock(8)
[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(8)
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(8)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(8)
}


Event processed UpdateClock(8)
[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(8)
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(8)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(8)
}


[Planbase]:{	if	B(scoreAfterExchange(3916, Score))
	then	{	respond(3916, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4190)
}


[new scheduled]:[if B(scoreAfterExchange(3916, Score)) then respond(3916, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 4190)]
[After]:{	if	B(scoreAfterExchange(3916, Score))
	then	{	respond(3916, 1000)
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4190)
}


[Planbase]:{	@ctenv(moveStepToGoal(white, 6, 4),L2,0);
	if	B(L2=[actionresult([6,4])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 4, Clock)
		};
	NoNextStep(6, 4, 6306);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(white, 6, 4),L2,0); if B(L2=[actionresult([6,4])]) then {B(clock(Clock)); UpdatePosition(6, 4, Clock)}; NoNextStep(6, 4, 6306); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoal(white, 6, 4),L2,0);
	if	B(L2=[actionresult([6,4])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 4, Clock)
		};
	NoNextStep(6, 4, 6306);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>10+5)
	then	{	NoNextStep(6, 2, 3916);
			ReceivedMessage(noresponse, 3916)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>10+5) then {NoNextStep(6, 2, 3916); ReceivedMessage(noresponse, 3916)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>10+5)
	then	{	NoNextStep(6, 2, 3916);
			ReceivedMessage(noresponse, 3916)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Need to wait 3 more seconds
org notification: Position [subject=a30, id=null, cell=Cell [x=6, y=4], time=2015-05-27 15:21:43.018, clock=8]
org notification: Position [subject=a30, id=null, cell=Cell [x=6, y=4], time=2015-05-27 15:21:43.018, clock=8]
object notification: Position [subject=a30, id=null, cell=Cell [x=6, y=4], time=2015-05-27 15:21:43.018, clock=8]
[Planbase]:{	respond(3916, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[respond(3916, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	respond(3916, 1000)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B(ANSWER=accept);
	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>1000)
					then	{	B(ANSWER=reject)
						}
				}
		};
	makeResponse(3916, ANSWER)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[B(ANSWER=accept); if B(yes=no) then if B(prohibition(rejectRequests(V2))) then if B(V2>1000) then B(ANSWER=reject); makeResponse(3916, ANSWER), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	B(ANSWER=accept);
	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>1000)
					then	{	B(ANSWER=reject)
						}
				}
		};
	makeResponse(3916, ANSWER)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>1000)
					then	{	B(accept=reject)
						}
				}
		};
	makeResponse(3916, accept)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(yes=no) then if B(prohibition(rejectRequests(V2))) then if B(V2>1000) then B(accept=reject); makeResponse(3916, accept), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>1000)
					then	{	B(accept=reject)
						}
				}
		};
	makeResponse(3916, accept)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	makeResponse(3916, accept)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[makeResponse(3916, accept), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	makeResponse(3916, accept)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	sendResponse(accept, 3916)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[sendResponse(accept, 3916), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	sendResponse(accept, 3916)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>10+5)
	then	{	NoNextStep(6, 2, 3916);
			ReceivedMessage(noresponse, 3916)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>10+5) then {NoNextStep(6, 2, 3916); ReceivedMessage(noresponse, 3916)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>10+5)
	then	{	NoNextStep(6, 2, 3916);
			ReceivedMessage(noresponse, 3916)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(sendResponse(3916, accept),L1,0);
	Sent(accept, 3916)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(sendResponse(3916, accept),L1,0); Sent(accept, 3916), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(sendResponse(3916, accept),L1,0);
	Sent(accept, 3916)
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
org notification: Response [id=3916, response=accepted, clock=8, time=2015-05-27 15:21:43.832]
org notification: Response [id=3916, response=accepted, clock=8, time=2015-05-27 15:21:43.832]
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed @ctenv(functionToList(message(response, 3916, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[new scheduled]:[if B(tile(white, 0, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 0, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(response, 3916, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(message(response, 3916, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(response, 3916, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@2f128e84
[CTAH] The created APLList : [response,3916,accept]
[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,3916,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,3916,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,3916,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([response,3916,accept])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([response,3916,accept])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([response,3916,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,3916,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,3916,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,3916,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 3916)
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(response=response) then ReceivedMessage(accept, 3916)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 3916)
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(white, 1, 1),L2,0);
	if	B(L2=[actionresult([1,1])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 1, Clock)
		};
	NoNextStep(1, 1, 4190);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(white, 1, 1),L2,0); if B(L2=[actionresult([1,1])]) then {B(clock(Clock)); UpdatePosition(1, 1, Clock)}; NoNextStep(1, 1, 4190); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoal(white, 1, 1),L2,0);
	if	B(L2=[actionresult([1,1])])
	then	{	B(clock(Clock));
			UpdatePosition(1, 1, Clock)
		};
	NoNextStep(1, 1, 4190);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>10+5)
	then	{	NoNextStep(6, 2, 3916);
			ReceivedMessage(noresponse, 3916)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 3916)
}


[new scheduled]:[if B(8>10+5) then {NoNextStep(6, 2, 3916); ReceivedMessage(noresponse, 3916)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 3916)]
[After]:{	if	B(8>10+5)
	then	{	NoNextStep(6, 2, 3916);
			ReceivedMessage(noresponse, 3916)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 3916)
}


Need to wait 3 more seconds
object notification: Position [subject=a10, id=null, cell=Cell [x=1, y=1], time=2015-05-27 15:21:44.367, clock=8]
org notification: Position [subject=a10, id=null, cell=Cell [x=1, y=1], time=2015-05-27 15:21:44.367, clock=8]
org notification: Position [subject=a10, id=null, cell=Cell [x=1, y=1], time=2015-05-27 15:21:44.367, clock=8]
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 6, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 6, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(white, 6, 2),L2,0);
	if	B(L2=[actionresult([6,2])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 2, Clock)
		};
	NoNextStep(6, 2, 3916);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(white, 6, 2),L2,0); if B(L2=[actionresult([6,2])]) then {B(clock(Clock)); UpdatePosition(6, 2, Clock)}; NoNextStep(6, 2, 3916); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoal(white, 6, 2),L2,0);
	if	B(L2=[actionresult([6,2])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 2, Clock)
		};
	NoNextStep(6, 2, 3916);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a40[CTAH] moveStepToGoal returns: false
org notification: Position [subject=a40, id=null, cell=Cell [x=6, y=2], time=2015-05-27 15:21:44.611, clock=8]
org notification: Position [subject=a40, id=null, cell=Cell [x=6, y=2], time=2015-05-27 15:21:44.611, clock=8]
object notification: Position [subject=a40, id=null, cell=Cell [x=6, y=2], time=2015-05-27 15:21:44.611, clock=8]
Event processed UpdatePosition(6, 2, 8)
[Planbase]:{	NoNextStep(6, 2, 3916);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(6, 2, 8)
}


[new scheduled]:[NoNextStep(6, 2, 3916); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdatePosition(6, 2, 8)]
[After]:{	NoNextStep(6, 2, 3916);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(6, 2, 8)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0) else if B(tile(neco, X, Y)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a40[CTAH] going goal: 3,4 color: neco
a30[CTAH] moveStepToGoal returns: [6,4]
Event processed UpdatePosition(6, 4, 8)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(6, 4, Clock);
	NoNextStep(6, 4, 6306);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(6, 4, 8)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(6, 4, Clock); NoNextStep(6, 4, 6306); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdatePosition(6, 4, 8)]
[After]:{	B(clock(Clock));
	UpdatePosition(6, 4, Clock);
	NoNextStep(6, 4, 6306);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(6, 4, 8)
}


[Planbase]:{	UpdatePosition(6, 4, 8);
	NoNextStep(6, 4, 6306);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[UpdatePosition(6, 4, 8); NoNextStep(6, 4, 6306); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	UpdatePosition(6, 4, 8);
	NoNextStep(6, 4, 6306);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 6, 4),L2,0);
	if	B(L2=[actionresult([6,4])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 4, Clock)
		};
	NoNextStep(6, 4, 6306);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 6, 4),L2,0); if B(L2=[actionresult([6,4])]) then {B(clock(Clock)); UpdatePosition(6, 4, Clock)}; NoNextStep(6, 4, 6306); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoal(neco, 6, 4),L2,0);
	if	B(L2=[actionresult([6,4])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 4, Clock)
		};
	NoNextStep(6, 4, 6306);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Need to wait 3 more seconds
object notification: Position [subject=a30, id=null, cell=Cell [x=6, y=4], time=2015-05-27 15:21:46.218, clock=8]
org notification: Position [subject=a30, id=null, cell=Cell [x=6, y=4], time=2015-05-27 15:21:46.218, clock=8]
org notification: Position [subject=a30, id=null, cell=Cell [x=6, y=4], time=2015-05-27 15:21:46.218, clock=8]
a10[CTAH] moveStepToGoal returns: [1,1]
a40[CTAH] paths: 1000
a40[CTAH] path: 0
a40[CTAH] path: Path: [6][2] [5][2] [4][2] [4][3] [4][4] [3][4]

a40[CTAH] moveStepToGoalTest nopoints: []
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:5,C:2)
a40[CTAH] moveStepToGoalTest sent proposal for: [5,2,1,8778]
org notification: Proposal [id=8778, agent=a40, agent2=a20, clock=8, time=2015-05-27 15:21:47.373]
org notification: Proposal [id=8778, agent=a40, agent2=a20, clock=8, time=2015-05-27 15:21:47.373]
Event processed UpdatePosition(1, 1, 8)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(1, 1, Clock);
	NoNextStep(1, 1, 4190);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(1, 1, 8)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(1, 1, Clock); NoNextStep(1, 1, 4190); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdatePosition(1, 1, 8)]
[After]:{	B(clock(Clock));
	UpdatePosition(1, 1, Clock);
	NoNextStep(1, 1, 4190);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(1, 1, 8)
}


[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 5, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 8778=no)
							then	{	NextStep(5, 2, 8778)
								}
							else	{	NextStep(5, 2)
								}
						}
				}
			else	{	if	B(not 8778=no)
					then	{	NextStep(5, 2, 8778)
						}
					else	{	NextStep(5, 2)
						}
				}
		};
	if	B(not 8778=no)
	then	{	Sent(8778, 1, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 5, 2)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not 8778=no) then NextStep(5, 2, 8778) else NextStep(5, 2) else if B(not 8778=no) then NextStep(5, 2, 8778) else NextStep(5, 2); if B(not 8778=no) then Sent(8778, 1, open, Clock); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 5, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 8778=no)
							then	{	NextStep(5, 2, 8778)
								}
							else	{	NextStep(5, 2)
								}
						}
				}
			else	{	if	B(not 8778=no)
					then	{	NextStep(5, 2, 8778)
						}
					else	{	NextStep(5, 2)
						}
				}
		};
	if	B(not 8778=no)
	then	{	Sent(8778, 1, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	UpdatePosition(1, 1, 8);
	NoNextStep(1, 1, 4190);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[UpdatePosition(1, 1, 8); NoNextStep(1, 1, 4190); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	UpdatePosition(1, 1, 8);
	NoNextStep(1, 1, 4190);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(tile(Color1, 5, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 8778=no)
							then	{	NextStep(5, 2, 8778)
								}
							else	{	NextStep(5, 2)
								}
						}
				}
			else	{	if	B(not 8778=no)
					then	{	NextStep(5, 2, 8778)
						}
					else	{	NextStep(5, 2)
						}
				}
		};
	if	B(not 8778=no)
	then	{	Sent(8778, 1, open, 8)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(Color1, 5, 2)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not 8778=no) then NextStep(5, 2, 8778) else NextStep(5, 2) else if B(not 8778=no) then NextStep(5, 2, 8778) else NextStep(5, 2); if B(not 8778=no) then Sent(8778, 1, open, 8); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(Color1, 5, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 8778=no)
							then	{	NextStep(5, 2, 8778)
								}
							else	{	NextStep(5, 2)
								}
						}
				}
			else	{	if	B(not 8778=no)
					then	{	NextStep(5, 2, 8778)
						}
					else	{	NextStep(5, 2)
						}
				}
		};
	if	B(not 8778=no)
	then	{	Sent(8778, 1, open, 8)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NoNextStep(1, 1, 4190);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NoNextStep(1, 1, 4190); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NoNextStep(1, 1, 4190);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(brown, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not 8778=no)
					then	{	NextStep(5, 2, 8778)
						}
					else	{	NextStep(5, 2)
						}
				}
		}
	else	{	if	B(not 8778=no)
			then	{	NextStep(5, 2, 8778)
				}
			else	{	NextStep(5, 2)
				}
		};
	if	B(not 8778=no)
	then	{	Sent(8778, 1, open, 8)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(brown, V2))) then if B(700>V2) then if B(not 8778=no) then NextStep(5, 2, 8778) else NextStep(5, 2) else if B(not 8778=no) then NextStep(5, 2, 8778) else NextStep(5, 2); if B(not 8778=no) then Sent(8778, 1, open, 8); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(brown, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not 8778=no)
					then	{	NextStep(5, 2, 8778)
						}
					else	{	NextStep(5, 2)
						}
				}
		}
	else	{	if	B(not 8778=no)
			then	{	NextStep(5, 2, 8778)
				}
			else	{	NextStep(5, 2)
				}
		};
	if	B(not 8778=no)
	then	{	Sent(8778, 1, open, 8)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 8778=no)
	then	{	NextStep(5, 2, 8778)
		}
	else	{	NextStep(5, 2)
		};
	if	B(not 8778=no)
	then	{	Sent(8778, 1, open, 8)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 8778=no) then NextStep(5, 2, 8778) else NextStep(5, 2); if B(not 8778=no) then Sent(8778, 1, open, 8); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 8778=no)
	then	{	NextStep(5, 2, 8778)
		}
	else	{	NextStep(5, 2)
		};
	if	B(not 8778=no)
	then	{	Sent(8778, 1, open, 8)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 1, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 1, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NextStep(5, 2, 8778);
	if	B(not 8778=no)
	then	{	Sent(8778, 1, open, 8)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NextStep(5, 2, 8778); if B(not 8778=no) then Sent(8778, 1, open, 8); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NextStep(5, 2, 8778);
	if	B(not 8778=no)
	then	{	Sent(8778, 1, open, 8)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 8778=no)
	then	{	Sent(8778, 1, open, 8)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 8778=no) then Sent(8778, 1, open, 8); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 8778=no)
	then	{	Sent(8778, 1, open, 8)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	Sent(8778, 1, open, 8);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[Sent(8778, 1, open, 8); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	Sent(8778, 1, open, 8);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0) else if B(tile(white, X, Y)) then @ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(white, X, Y))
			then	{	@ctenv(moveStepToGoalTest(white, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(white, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(white, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(white, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(1000>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] going goal: 3,2 color: white
[Planbase]:{	if	B(8>8+5)
	then	{	NoNextStep(5, 2, 8778);
			ReceivedMessage(noresponse, 8778)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>8+5) then {NoNextStep(5, 2, 8778); ReceivedMessage(noresponse, 8778)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>8+5)
	then	{	NoNextStep(5, 2, 8778);
			ReceivedMessage(noresponse, 8778)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>8+5)
	then	{	NoNextStep(5, 2, 8778);
			ReceivedMessage(noresponse, 8778)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>8+5) then {NoNextStep(5, 2, 8778); ReceivedMessage(noresponse, 8778)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>8+5)
	then	{	NoNextStep(5, 2, 8778);
			ReceivedMessage(noresponse, 8778)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>8+5)
	then	{	NoNextStep(5, 2, 8778);
			ReceivedMessage(noresponse, 8778)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>8+5) then {NoNextStep(5, 2, 8778); ReceivedMessage(noresponse, 8778)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>8+5)
	then	{	NoNextStep(5, 2, 8778);
			ReceivedMessage(noresponse, 8778)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(8>8+5)
	then	{	NoNextStep(5, 2, 8778);
			ReceivedMessage(noresponse, 8778)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(8>8+5) then {NoNextStep(5, 2, 8778); ReceivedMessage(noresponse, 8778)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(8>8+5)
	then	{	NoNextStep(5, 2, 8778);
			ReceivedMessage(noresponse, 8778)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] moveStepToGoal returns: [6,4]
object notification: Time [clock=12, time=2015-05-27 15:21:49.378]
object notification: Time [clock=12, time=2015-05-27 15:21:49.378]
object notification: Time [clock=12, time=2015-05-27 15:21:49.378]
org notification: Time [clock=12, time=2015-05-27 15:21:49.378]
org notification: Time [clock=12, time=2015-05-27 15:21:49.378]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
org notification: Response [id=8778, response=accepted, clock=12, time=2015-05-27 15:21:49.982]
org notification: Response [id=8778, response=accepted, clock=12, time=2015-05-27 15:21:49.982]
object notification: Time [clock=9, time=2015-05-27 15:21:52.655]
org notification: Time [clock=9, time=2015-05-27 15:21:52.655]
object notification: Time [clock=9, time=2015-05-27 15:21:52.655]
object notification: Time [clock=9, time=2015-05-27 15:21:52.655]
org notification: Time [clock=9, time=2015-05-27 15:21:52.655]
a10[CTAH] paths: 1000
Need to wait 4 more seconds
org notification: Time [clock=13, time=2015-05-27 15:21:59.381]
object notification: Time [clock=13, time=2015-05-27 15:21:59.381]
object notification: Time [clock=13, time=2015-05-27 15:21:59.381]
object notification: Time [clock=13, time=2015-05-27 15:21:59.381]
org notification: Time [clock=13, time=2015-05-27 15:21:59.381]
a10[CTAH] path: 0
a10[CTAH] path: Path: [1][1] [2][1] [2][2] [3][2]

a10[CTAH] moveStepToGoalTest returns I have chip: [2,1,no,no]
Event processed UpdateClock(12)
Event processed @ctenv(functionToList(message(response, 8778, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateClock(9)
Event processed UpdateClock(13)
Event processed UpdatePosition(6, 4, 8)
Event processed UpdateClock(12)
Event processed UpdateClock(9)
Event processed UpdateClock(13)
Event processed UpdateClock(12)
Event processed UpdateClock(9)
Event processed UpdateClock(13)
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(12)
},
{	@ctenv(functionToList(message(response, 8778, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateClock(9)
},
{	UpdateClock(13)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(12), @ctenv(functionToList(message(response, 8778, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(9), UpdateClock(13)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(12)
},
{	@ctenv(functionToList(message(response, 8778, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateClock(9)
},
{	UpdateClock(13)
}


[Planbase]:{	B(clock(Clock));
	UpdatePosition(6, 4, Clock);
	NoNextStep(6, 4, 6306);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(6, 4, 8)
},
{	UpdateClock(12)
},
{	UpdateClock(9)
},
{	UpdateClock(13)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(6, 4, Clock); NoNextStep(6, 4, 6306); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdatePosition(6, 4, 8), UpdateClock(12), UpdateClock(9), UpdateClock(13)]
[After]:{	B(clock(Clock));
	UpdatePosition(6, 4, Clock);
	NoNextStep(6, 4, 6306);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(6, 4, 8)
},
{	UpdateClock(12)
},
{	UpdateClock(9)
},
{	UpdateClock(13)
}


[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 2, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not no=no)
							then	{	NextStep(2, 1, no)
								}
							else	{	NextStep(2, 1)
								}
						}
				}
			else	{	if	B(not no=no)
					then	{	NextStep(2, 1, no)
						}
					else	{	NextStep(2, 1)
						}
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(12)
},
{	UpdateClock(9)
},
{	UpdateClock(13)
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 2, 1)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not no=no) then NextStep(2, 1, no) else NextStep(2, 1) else if B(not no=no) then NextStep(2, 1, no) else NextStep(2, 1); if B(not no=no) then Sent(no, no, open, Clock); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(12), UpdateClock(9), UpdateClock(13)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 2, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not no=no)
							then	{	NextStep(2, 1, no)
								}
							else	{	NextStep(2, 1)
								}
						}
				}
			else	{	if	B(not no=no)
					then	{	NextStep(2, 1, no)
						}
					else	{	NextStep(2, 1)
						}
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(12)
},
{	UpdateClock(9)
},
{	UpdateClock(13)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@7ced9588
[CTAH] The created APLList : [response,8778,accept]
[Planbase]:{	if	B([actionresult([response,8778,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,8778,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,8778,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([response,8778,accept])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([response,8778,accept])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([response,8778,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,8778,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,8778,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,8778,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	UpdatePosition(6, 4, 8);
	NoNextStep(6, 4, 6306);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[UpdatePosition(6, 4, 8); NoNextStep(6, 4, 6306); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	UpdatePosition(6, 4, 8);
	NoNextStep(6, 4, 6306);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(tile(Color1, 2, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not no=no)
							then	{	NextStep(2, 1, no)
								}
							else	{	NextStep(2, 1)
								}
						}
				}
			else	{	if	B(not no=no)
					then	{	NextStep(2, 1, no)
						}
					else	{	NextStep(2, 1)
						}
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 8)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(Color1, 2, 1)) then if B(prohibition(useColor(Color1, V2))) then if B(1000>V2) then if B(not no=no) then NextStep(2, 1, no) else NextStep(2, 1) else if B(not no=no) then NextStep(2, 1, no) else NextStep(2, 1); if B(not no=no) then Sent(no, no, open, 8); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(Color1, 2, 1))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(1000>V2)
					then	{	if	B(not no=no)
							then	{	NextStep(2, 1, no)
								}
							else	{	NextStep(2, 1)
								}
						}
				}
			else	{	if	B(not no=no)
					then	{	NextStep(2, 1, no)
						}
					else	{	NextStep(2, 1)
						}
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 8)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>8+5)
	then	{	NoNextStep(5, 2, 8778);
			ReceivedMessage(noresponse, 8778)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 8778)
		}
}


[new scheduled]:[if B(13>8+5) then {NoNextStep(5, 2, 8778); ReceivedMessage(noresponse, 8778)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(response=response) then ReceivedMessage(accept, 8778)]
[After]:{	if	B(13>8+5)
	then	{	NoNextStep(5, 2, 8778);
			ReceivedMessage(noresponse, 8778)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 8778)
		}
}


[Planbase]:{	NoNextStep(6, 4, 6306);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NoNextStep(6, 4, 6306); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NoNextStep(6, 4, 6306);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not no=no)
					then	{	NextStep(2, 1, no)
						}
					else	{	NextStep(2, 1)
						}
				}
		}
	else	{	if	B(not no=no)
			then	{	NextStep(2, 1, no)
				}
			else	{	NextStep(2, 1)
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 8)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(1000>V2) then if B(not no=no) then NextStep(2, 1, no) else NextStep(2, 1) else if B(not no=no) then NextStep(2, 1, no) else NextStep(2, 1); if B(not no=no) then Sent(no, no, open, 8); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(1000>V2)
			then	{	if	B(not no=no)
					then	{	NextStep(2, 1, no)
						}
					else	{	NextStep(2, 1)
						}
				}
		}
	else	{	if	B(not no=no)
			then	{	NextStep(2, 1, no)
				}
			else	{	NextStep(2, 1)
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 8)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 8778)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 8778)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 8778)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(2, 1, no)
		}
	else	{	NextStep(2, 1)
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 8)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not no=no) then NextStep(2, 1, no) else NextStep(2, 1); if B(not no=no) then Sent(no, no, open, 8); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not no=no)
	then	{	NextStep(2, 1, no)
		}
	else	{	NextStep(2, 1)
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 8)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NextStep(2, 1);
	if	B(not no=no)
	then	{	Sent(no, no, open, 8)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NextStep(2, 1); if B(not no=no) then Sent(no, no, open, 8); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NextStep(2, 1);
	if	B(not no=no)
	then	{	Sent(no, no, open, 8)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 5, 2),L2,0);
	if	B(L2=[actionresult([5,2])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 2, Clock)
		};
	NoNextStep(5, 2, 8778);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 5, 2),L2,0); if B(L2=[actionresult([5,2])]) then {B(clock(Clock)); UpdatePosition(5, 2, Clock)}; NoNextStep(5, 2, 8778); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoal(neco, 5, 2),L2,0);
	if	B(L2=[actionresult([5,2])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 2, Clock)
		};
	NoNextStep(5, 2, 8778);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0) else if B(tile(neco, X, Y)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	Sent(no, no, open, 8)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not no=no) then Sent(no, no, open, 8); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not no=no)
	then	{	Sent(no, no, open, 8)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a40[CTAH] moveStepToGoal returns: false
org notification: Position [subject=a40, id=null, cell=Cell [x=5, y=2], time=2015-05-27 15:22:01.199, clock=13]
org notification: Position [subject=a40, id=null, cell=Cell [x=5, y=2], time=2015-05-27 15:22:01.199, clock=13]
object notification: Position [subject=a40, id=null, cell=Cell [x=5, y=2], time=2015-05-27 15:22:01.199, clock=13]
Event processed UpdatePosition(5, 2, 13)
[Planbase]:{	NoNextStep(5, 2, 8778);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(5, 2, 13)
}


[new scheduled]:[NoNextStep(5, 2, 8778); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdatePosition(5, 2, 13)]
[After]:{	NoNextStep(5, 2, 8778);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(5, 2, 13)
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] going goal: 4,3 color: neco
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 1, 1)) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(white, 1, 1))
	then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>1000)
					then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 1000)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(white, V2))) then if B(V2>1000) then dropgoal(useColor(white, 1000) : Infinite, priority 10) else findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(white, V2)))
	then	{	if	B(V2>1000)
			then	{	dropgoal(useColor(white, 1000) : Infinite, priority 10)
				}
		}
	else	{	findNextStep(white, 1000)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0) else if B(tile(neco, X, Y)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[findNextStep(white, 1000); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(white, 1000);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a40[CTAH] going goal: 3,4 color: neco
[Planbase]:{	@ctenv(moveStepToGoal(white, 2, 1),L2,0);
	if	B(L2=[actionresult([2,1])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 1, Clock)
		};
	NoNextStep(2, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(white, 2, 1),L2,0); if B(L2=[actionresult([2,1])]) then {B(clock(Clock)); UpdatePosition(2, 1, Clock)}; NoNextStep(2, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoal(white, 2, 1),L2,0);
	if	B(L2=[actionresult([2,1])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 1, Clock)
		};
	NoNextStep(2, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Need to wait 3 more seconds
org notification: Position [subject=a10, id=null, cell=Cell [x=2, y=1], time=2015-05-27 15:22:01.663, clock=13]
org notification: Position [subject=a10, id=null, cell=Cell [x=2, y=1], time=2015-05-27 15:22:01.663, clock=13]
object notification: Position [subject=a10, id=null, cell=Cell [x=2, y=1], time=2015-05-27 15:22:01.663, clock=13]
org notification: Time [clock=10, time=2015-05-27 15:22:02.659]
object notification: Time [clock=10, time=2015-05-27 15:22:02.659]
object notification: Time [clock=10, time=2015-05-27 15:22:02.659]
org notification: Time [clock=10, time=2015-05-27 15:22:02.659]
object notification: Time [clock=10, time=2015-05-27 15:22:02.659]
setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
a10[CTAH] moveStepToGoal returns: [2,1]
Event processed UpdatePosition(2, 1, 13)
Event processed UpdateClock(10)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(2, 1, Clock);
	NoNextStep(2, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(2, 1, 13)
},
{	UpdateClock(10)
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(2, 1, Clock); NoNextStep(2, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdatePosition(2, 1, 13), UpdateClock(10), @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(clock(Clock));
	UpdatePosition(2, 1, Clock);
	NoNextStep(2, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(2, 1, 13)
},
{	UpdateClock(10)
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


a40[CTAH] paths: 1000
Need to wait 3 more seconds
org notification: Time [clock=14, time=2015-05-27 15:22:09.384]
object notification: Time [clock=14, time=2015-05-27 15:22:09.384]
object notification: Time [clock=14, time=2015-05-27 15:22:09.384]
object notification: Time [clock=14, time=2015-05-27 15:22:09.384]
org notification: Time [clock=14, time=2015-05-27 15:22:09.384]
a30[CTAH] paths: 1000
Need to wait 3 more seconds
a40[CTAH] path: 0
a40[CTAH] path: Path: [5][2] [4][2] [4][3] [3][3] [3][4]

a40[CTAH] moveStepToGoalTest returns I have chip: [4,2,no,no]
a30[CTAH] path: 0
a30[CTAH] path: Path: [6][4] [5][4] [4][4] [4][3]

a30[CTAH] moveStepToGoalTest returns I have chip: [5,4,no,no]
[CTAH] Array of Terms: [Lapapl.data.Term;@7f794fd6
[CTAH] The created APLList : [phasechange]
Event processed UpdateClock(10)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateClock(14)
Event processed UpdateClock(10)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateClock(14)
object notification: Time [clock=11, time=2015-05-27 15:22:12.662]
org notification: Time [clock=11, time=2015-05-27 15:22:12.662]
object notification: Time [clock=11, time=2015-05-27 15:22:12.662]
org notification: Time [clock=11, time=2015-05-27 15:22:12.662]
object notification: Time [clock=11, time=2015-05-27 15:22:12.662]
[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 4, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not no=no)
							then	{	NextStep(4, 2, no)
								}
							else	{	NextStep(4, 2)
								}
						}
				}
			else	{	if	B(not no=no)
					then	{	NextStep(4, 2, no)
						}
					else	{	NextStep(4, 2)
						}
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(10)
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateClock(14)
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 4, 2)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not no=no) then NextStep(4, 2, no) else NextStep(4, 2) else if B(not no=no) then NextStep(4, 2, no) else NextStep(4, 2); if B(not no=no) then Sent(no, no, open, Clock); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(10), @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(14)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 4, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not no=no)
							then	{	NextStep(4, 2, no)
								}
							else	{	NextStep(4, 2)
								}
						}
				}
			else	{	if	B(not no=no)
					then	{	NextStep(4, 2, no)
						}
					else	{	NextStep(4, 2)
						}
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(10)
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateClock(14)
}


[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 5, 4))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not no=no)
							then	{	NextStep(5, 4, no)
								}
							else	{	NextStep(5, 4)
								}
						}
				}
			else	{	if	B(not no=no)
					then	{	NextStep(5, 4, no)
						}
					else	{	NextStep(5, 4)
						}
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(10)
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateClock(14)
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 5, 4)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not no=no) then NextStep(5, 4, no) else NextStep(5, 4) else if B(not no=no) then NextStep(5, 4, no) else NextStep(5, 4); if B(not no=no) then Sent(no, no, open, Clock); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(10), @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(14)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 5, 4))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not no=no)
							then	{	NextStep(5, 4, no)
								}
							else	{	NextStep(5, 4)
								}
						}
				}
			else	{	if	B(not no=no)
					then	{	NextStep(5, 4, no)
						}
					else	{	NextStep(5, 4)
						}
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(10)
},
{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateClock(14)
}


Event processed UpdateClock(14)
Event processed UpdateClock(11)
[Planbase]:{	UpdatePosition(2, 1, 13);
	NoNextStep(2, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(14)
},
{	UpdateClock(11)
}


[new scheduled]:[UpdatePosition(2, 1, 13); NoNextStep(2, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 1000), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(14), UpdateClock(11)]
[After]:{	UpdatePosition(2, 1, 13);
	NoNextStep(2, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 1000)
				}
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(14)
},
{	UpdateClock(11)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@2f20b689
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@5fe085b3
[CTAH] The created APLList : [phasechange]
Event processed UpdateClock(11)
Event processed UpdateClock(11)
[Planbase]:{	if	B(tile(Color1, 4, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not no=no)
							then	{	NextStep(4, 2, no)
								}
							else	{	NextStep(4, 2)
								}
						}
				}
			else	{	if	B(not no=no)
					then	{	NextStep(4, 2, no)
						}
					else	{	NextStep(4, 2)
						}
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(11)
}


[new scheduled]:[if B(tile(Color1, 4, 2)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not no=no) then NextStep(4, 2, no) else NextStep(4, 2) else if B(not no=no) then NextStep(4, 2, no) else NextStep(4, 2); if B(not no=no) then Sent(no, no, open, 13); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(11)]
[After]:{	if	B(tile(Color1, 4, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not no=no)
							then	{	NextStep(4, 2, no)
								}
							else	{	NextStep(4, 2)
								}
						}
				}
			else	{	if	B(not no=no)
					then	{	NextStep(4, 2, no)
						}
					else	{	NextStep(4, 2)
						}
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(11)
}


[Planbase]:{	if	B(tile(Color1, 5, 4))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not no=no)
							then	{	NextStep(5, 4, no)
								}
							else	{	NextStep(5, 4)
								}
						}
				}
			else	{	if	B(not no=no)
					then	{	NextStep(5, 4, no)
						}
					else	{	NextStep(5, 4)
						}
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(11)
}


[new scheduled]:[if B(tile(Color1, 5, 4)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not no=no) then NextStep(5, 4, no) else NextStep(5, 4) else if B(not no=no) then NextStep(5, 4, no) else NextStep(5, 4); if B(not no=no) then Sent(no, no, open, 13); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(11)]
[After]:{	if	B(tile(Color1, 5, 4))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not no=no)
							then	{	NextStep(5, 4, no)
								}
							else	{	NextStep(5, 4)
								}
						}
				}
			else	{	if	B(not no=no)
					then	{	NextStep(5, 4, no)
						}
					else	{	NextStep(5, 4)
						}
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
},
{	UpdateClock(11)
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not no=no)
					then	{	NextStep(4, 2, no)
						}
					else	{	NextStep(4, 2)
						}
				}
		}
	else	{	if	B(not no=no)
			then	{	NextStep(4, 2, no)
				}
			else	{	NextStep(4, 2)
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(700>V2) then if B(not no=no) then NextStep(4, 2, no) else NextStep(4, 2) else if B(not no=no) then NextStep(4, 2, no) else NextStep(4, 2); if B(not no=no) then Sent(no, no, open, 13); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not no=no)
					then	{	NextStep(4, 2, no)
						}
					else	{	NextStep(4, 2)
						}
				}
		}
	else	{	if	B(not no=no)
			then	{	NextStep(4, 2, no)
				}
			else	{	NextStep(4, 2)
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(blue, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not no=no)
					then	{	NextStep(5, 4, no)
						}
					else	{	NextStep(5, 4)
						}
				}
		}
	else	{	if	B(not no=no)
			then	{	NextStep(5, 4, no)
				}
			else	{	NextStep(5, 4)
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(blue, V2))) then if B(700>V2) then if B(not no=no) then NextStep(5, 4, no) else NextStep(5, 4) else if B(not no=no) then NextStep(5, 4, no) else NextStep(5, 4); if B(not no=no) then Sent(no, no, open, 13); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(prohibition(useColor(blue, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not no=no)
					then	{	NextStep(5, 4, no)
						}
					else	{	NextStep(5, 4)
						}
				}
		}
	else	{	if	B(not no=no)
			then	{	NextStep(5, 4, no)
				}
			else	{	NextStep(5, 4)
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 2, 1),L2,0);
	if	B(L2=[actionresult([2,1])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 1, Clock)
		};
	NoNextStep(2, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedEvent(phasechange)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 2, 1),L2,0); if B(L2=[actionresult([2,1])]) then {B(clock(Clock)); UpdatePosition(2, 1, Clock)}; NoNextStep(2, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedEvent(phasechange)]
[After]:{	@ctenv(moveStepToGoal(neco, 2, 1),L2,0);
	if	B(L2=[actionresult([2,1])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 1, Clock)
		};
	NoNextStep(2, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedEvent(phasechange)
}


Need to wait 4 more seconds
org notification: Position [subject=a10, id=null, cell=Cell [x=2, y=1], time=2015-05-27 15:22:12.933, clock=11]
org notification: Position [subject=a10, id=null, cell=Cell [x=2, y=1], time=2015-05-27 15:22:12.933, clock=11]
object notification: Position [subject=a10, id=null, cell=Cell [x=2, y=1], time=2015-05-27 15:22:12.933, clock=11]
[Planbase]:{	if	B(not no=no)
	then	{	NextStep(4, 2, no)
		}
	else	{	NextStep(4, 2)
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedEvent(phasechange)
}


[new scheduled]:[if B(not no=no) then NextStep(4, 2, no) else NextStep(4, 2); if B(not no=no) then Sent(no, no, open, 13); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedEvent(phasechange)]
[After]:{	if	B(not no=no)
	then	{	NextStep(4, 2, no)
		}
	else	{	NextStep(4, 2)
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedEvent(phasechange)
}


[Planbase]:{	if	B(700>100)
	then	{	if	B(not no=no)
			then	{	NextStep(5, 4, no)
				}
			else	{	NextStep(5, 4)
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedEvent(phasechange)
}


[new scheduled]:[if B(700>100) then if B(not no=no) then NextStep(5, 4, no) else NextStep(5, 4); if B(not no=no) then Sent(no, no, open, 13); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedEvent(phasechange)]
[After]:{	if	B(700>100)
	then	{	if	B(not no=no)
			then	{	NextStep(5, 4, no)
				}
			else	{	NextStep(5, 4)
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedEvent(phasechange)
}


[Planbase]:{	NextStep(4, 2);
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[update, NextStep(4, 2); if B(not no=no) then Sent(no, no, open, 13); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	update
},
{	NextStep(4, 2);
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(5, 4, no)
		}
	else	{	NextStep(5, 4)
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[update, if B(not no=no) then NextStep(5, 4, no) else NextStep(5, 4); if B(not no=no) then Sent(no, no, open, 13); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	update
},
{	if	B(not no=no)
	then	{	NextStep(5, 4, no)
		}
	else	{	NextStep(5, 4)
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated, if B(not no=no) then Sent(no, no, open, 13); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	NextStep(5, 4);
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated, NextStep(5, 4); if B(not no=no) then Sent(no, no, open, 13); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	NextStep(5, 4);
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated, if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated, if B(not no=no) then Sent(no, no, open, 13); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated, if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(moveStepToGoal(neco, 4, 2),L2,0);
	if	B(L2=[actionresult([4,2])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 2, Clock)
		};
	NoNextStep(4, 2);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated, @ctenv(moveStepToGoal(neco, 4, 2),L2,0); if B(L2=[actionresult([4,2])]) then {B(clock(Clock)); UpdatePosition(4, 2, Clock)}; NoNextStep(4, 2); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(moveStepToGoal(neco, 4, 2),L2,0);
	if	B(L2=[actionresult([4,2])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 2, Clock)
		};
	NoNextStep(4, 2);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Need to wait 2 more seconds
object notification: Position [subject=a40, id=null, cell=Cell [x=4, y=2], time=2015-05-27 15:22:13.317, clock=11]
org notification: Position [subject=a40, id=null, cell=Cell [x=4, y=2], time=2015-05-27 15:22:13.317, clock=11]
org notification: Position [subject=a40, id=null, cell=Cell [x=4, y=2], time=2015-05-27 15:22:13.317, clock=11]
[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(moveStepToGoal(neco, 5, 4),L2,0);
	if	B(L2=[actionresult([5,4])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 4, Clock)
		};
	NoNextStep(5, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, @ctenv(moveStepToGoal(neco, 5, 4),L2,0); if B(L2=[actionresult([5,4])]) then {B(clock(Clock)); UpdatePosition(5, 4, Clock)}; NoNextStep(5, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	@ctenv(moveStepToGoal(neco, 5, 4),L2,0);
	if	B(L2=[actionresult([5,4])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 4, Clock)
		};
	NoNextStep(5, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Need to wait 3 more seconds
org notification: Position [subject=a30, id=null, cell=Cell [x=5, y=4], time=2015-05-27 15:22:13.385, clock=11]
object notification: Position [subject=a30, id=null, cell=Cell [x=5, y=4], time=2015-05-27 15:22:13.385, clock=11]
org notification: Position [subject=a30, id=null, cell=Cell [x=5, y=4], time=2015-05-27 15:22:13.385, clock=11]
object notification: Points [subject=a30, time=2015-05-27 15:22:13.392, clock=11, value=900, id=null]
object notification: Points [subject=a30, time=2015-05-27 15:22:13.406, clock=11, value=900, id=null]
a40[CTAH] moveStepToGoal returns: [4,2]
Event processed UpdatePosition(4, 2, 11)
[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	UpdatePosition(4, 2, Clock);
	NoNextStep(4, 2);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(4, 2, 11)
}


[new scheduled]:[if B(event(phasechange)) then Updated, B(clock(Clock)); UpdatePosition(4, 2, Clock); NoNextStep(4, 2); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdatePosition(4, 2, 11)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	B(clock(Clock));
	UpdatePosition(4, 2, Clock);
	NoNextStep(4, 2);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(4, 2, 11)
}


[Planbase]:{	Updated
},
{	UpdatePosition(4, 2, 11);
	NoNextStep(4, 2);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[Updated, UpdatePosition(4, 2, 11); NoNextStep(4, 2); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	Updated
},
{	UpdatePosition(4, 2, 11);
	NoNextStep(4, 2);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NoNextStep(4, 2);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NoNextStep(4, 2); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NoNextStep(4, 2);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0) else if B(tile(neco, X, Y)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a40[CTAH] going goal: 3,4 color: neco
a30[CTAH] moveStepToGoal returns: [5,4]
Event processed UpdatePosition(5, 4, 11)
Event processed UpdatePoints(900)
Event processed UpdatePoints(900)
[Planbase]:{	Updated
},
{	B(clock(Clock));
	UpdatePosition(5, 4, Clock);
	NoNextStep(5, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(5, 4, 11)
},
{	UpdatePoints(900)
},
{	UpdatePoints(900)
}


[new scheduled]:[Updated, B(clock(Clock)); UpdatePosition(5, 4, Clock); NoNextStep(5, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdatePosition(5, 4, 11), UpdatePoints(900), UpdatePoints(900)]
[After]:{	Updated
},
{	B(clock(Clock));
	UpdatePosition(5, 4, Clock);
	NoNextStep(5, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(5, 4, 11)
},
{	UpdatePoints(900)
},
{	UpdatePoints(900)
}


[Planbase]:{	UpdatePosition(5, 4, 11);
	NoNextStep(5, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[UpdatePosition(5, 4, 11); NoNextStep(5, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	UpdatePosition(5, 4, 11);
	NoNextStep(5, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NoNextStep(5, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NoNextStep(5, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NoNextStep(5, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0) else if B(tile(neco, X, Y)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] going goal: 4,3 color: neco
a10[CTAH] moveStepToGoal returns: [2,1]
Event processed UpdatePosition(2, 1, 11)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(2, 1, Clock);
	NoNextStep(2, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(2, 1, 11)
}


[new scheduled]:[update, B(clock(Clock)); UpdatePosition(2, 1, Clock); NoNextStep(2, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdatePosition(2, 1, 11)]
[After]:{	update
},
{	B(clock(Clock));
	UpdatePosition(2, 1, Clock);
	NoNextStep(2, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(2, 1, 11)
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	UpdatePosition(2, 1, 11);
	NoNextStep(2, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated, UpdatePosition(2, 1, 11); NoNextStep(2, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	UpdatePosition(2, 1, 11);
	NoNextStep(2, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	NoNextStep(2, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated, NoNextStep(2, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	NoNextStep(2, 1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[GetPhase(movementphase); B(clock(Clock)); if B(event(phasechange)) then Updated, if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	GetPhase(movementphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(event(phasechange)) then Updated, if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0) else if B(tile(neco, X, Y)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	Updated
},
{	@ctenv(moveStepToGoalTest(neco, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[Updated, @ctenv(moveStepToGoalTest(neco, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	Updated
},
{	@ctenv(moveStepToGoalTest(neco, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] going goal: 3,2 color: neco
a40[CTAH] paths: 1000
a40[CTAH] path: 0
a40[CTAH] path: Path: [4][2] [4][3] [3][3] [3][4]

a40[CTAH] moveStepToGoalTest nopoints: []
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:4,C:3)
a40[CTAH] moveStepToGoalTest sent proposal for: [4,3,2,8155]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 2
[MSG] i'm: 2
org notification: Proposal [id=8155, agent=a40, agent2=a30, clock=11, time=2015-05-27 15:22:18.194]
org notification: Proposal [id=8155, agent=a40, agent2=a30, clock=11, time=2015-05-27 15:22:18.194]
Received a proposal creating event
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 4, 3))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 8155=no)
							then	{	NextStep(4, 3, 8155)
								}
							else	{	NextStep(4, 3)
								}
						}
				}
			else	{	if	B(not 8155=no)
					then	{	NextStep(4, 3, 8155)
						}
					else	{	NextStep(4, 3)
						}
				}
		};
	if	B(not 8155=no)
	then	{	Sent(8155, 2, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 4, 3)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not 8155=no) then NextStep(4, 3, 8155) else NextStep(4, 3) else if B(not 8155=no) then NextStep(4, 3, 8155) else NextStep(4, 3); if B(not 8155=no) then Sent(8155, 2, open, Clock); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 4, 3))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 8155=no)
							then	{	NextStep(4, 3, 8155)
								}
							else	{	NextStep(4, 3)
								}
						}
				}
			else	{	if	B(not 8155=no)
					then	{	NextStep(4, 3, 8155)
						}
					else	{	NextStep(4, 3)
						}
				}
		};
	if	B(not 8155=no)
	then	{	Sent(8155, 2, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(tile(Color1, 4, 3))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 8155=no)
							then	{	NextStep(4, 3, 8155)
								}
							else	{	NextStep(4, 3)
								}
						}
				}
			else	{	if	B(not 8155=no)
					then	{	NextStep(4, 3, 8155)
						}
					else	{	NextStep(4, 3)
						}
				}
		};
	if	B(not 8155=no)
	then	{	Sent(8155, 2, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(Color1, 4, 3)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not 8155=no) then NextStep(4, 3, 8155) else NextStep(4, 3) else if B(not 8155=no) then NextStep(4, 3, 8155) else NextStep(4, 3); if B(not 8155=no) then Sent(8155, 2, open, 11); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(Color1, 4, 3))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 8155=no)
							then	{	NextStep(4, 3, 8155)
								}
							else	{	NextStep(4, 3)
								}
						}
				}
			else	{	if	B(not 8155=no)
					then	{	NextStep(4, 3, 8155)
						}
					else	{	NextStep(4, 3)
						}
				}
		};
	if	B(not 8155=no)
	then	{	Sent(8155, 2, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(blue, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not 8155=no)
					then	{	NextStep(4, 3, 8155)
						}
					else	{	NextStep(4, 3)
						}
				}
		}
	else	{	if	B(not 8155=no)
			then	{	NextStep(4, 3, 8155)
				}
			else	{	NextStep(4, 3)
				}
		};
	if	B(not 8155=no)
	then	{	Sent(8155, 2, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(blue, V2))) then if B(700>V2) then if B(not 8155=no) then NextStep(4, 3, 8155) else NextStep(4, 3) else if B(not 8155=no) then NextStep(4, 3, 8155) else NextStep(4, 3); if B(not 8155=no) then Sent(8155, 2, open, 11); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(blue, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not 8155=no)
					then	{	NextStep(4, 3, 8155)
						}
					else	{	NextStep(4, 3)
						}
				}
		}
	else	{	if	B(not 8155=no)
			then	{	NextStep(4, 3, 8155)
				}
			else	{	NextStep(4, 3)
				}
		};
	if	B(not 8155=no)
	then	{	Sent(8155, 2, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(700>100)
	then	{	if	B(not 8155=no)
			then	{	NextStep(4, 3, 8155)
				}
			else	{	NextStep(4, 3)
				}
		};
	if	B(not 8155=no)
	then	{	Sent(8155, 2, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(700>100) then if B(not 8155=no) then NextStep(4, 3, 8155) else NextStep(4, 3); if B(not 8155=no) then Sent(8155, 2, open, 11); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(700>100)
	then	{	if	B(not 8155=no)
			then	{	NextStep(4, 3, 8155)
				}
			else	{	NextStep(4, 3)
				}
		};
	if	B(not 8155=no)
	then	{	Sent(8155, 2, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 8155=no)
	then	{	NextStep(4, 3, 8155)
		}
	else	{	NextStep(4, 3)
		};
	if	B(not 8155=no)
	then	{	Sent(8155, 2, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 8155=no) then NextStep(4, 3, 8155) else NextStep(4, 3); if B(not 8155=no) then Sent(8155, 2, open, 11); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 8155=no)
	then	{	NextStep(4, 3, 8155)
		}
	else	{	NextStep(4, 3)
		};
	if	B(not 8155=no)
	then	{	Sent(8155, 2, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NextStep(4, 3, 8155);
	if	B(not 8155=no)
	then	{	Sent(8155, 2, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NextStep(4, 3, 8155); if B(not 8155=no) then Sent(8155, 2, open, 11); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NextStep(4, 3, 8155);
	if	B(not 8155=no)
	then	{	Sent(8155, 2, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 8155=no)
	then	{	Sent(8155, 2, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 8155=no) then Sent(8155, 2, open, 11); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 8155=no)
	then	{	Sent(8155, 2, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	Sent(8155, 2, open, 11);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[Sent(8155, 2, open, 11); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	Sent(8155, 2, open, 11);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(11>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=15, time=2015-05-27 15:22:19.386]
org notification: Time [clock=15, time=2015-05-27 15:22:19.386]
org notification: Time [clock=15, time=2015-05-27 15:22:19.386]
object notification: Time [clock=15, time=2015-05-27 15:22:19.386]
object notification: Time [clock=15, time=2015-05-27 15:22:19.386]
Event processed UpdateClock(15)
[Planbase]:{	UpdateClock(15)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(15)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(15)
}


[Planbase]:{	if	B(11>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(11>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(11>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=12, time=2015-05-27 15:22:22.664]
org notification: Time [clock=12, time=2015-05-27 15:22:22.664]
object notification: Time [clock=12, time=2015-05-27 15:22:22.664]
object notification: Time [clock=12, time=2015-05-27 15:22:22.664]
org notification: Time [clock=12, time=2015-05-27 15:22:22.664]
Event processed UpdateClock(12)
[Planbase]:{	UpdateClock(12)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(12)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(12)
}


[Planbase]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] paths: 1000
Need to wait 3 more seconds
[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] paths: 1000
Need to wait 4 more seconds
[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] path: 0
a30[CTAH] path: Path: [5][4] [5][3] [4][3]

a30[CTAH] moveStepToGoalTest nopoints: []
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:5,C:3)
a30[CTAH] moveStepToGoalTest sent proposal for: [5,3,3,7113]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 3
[MSG] i'm: 3
Received a proposal creating event
org notification: Proposal [id=7113, agent=a30, agent2=a40, clock=12, time=2015-05-27 15:22:28.755]
org notification: Proposal [id=7113, agent=a30, agent2=a40, clock=12, time=2015-05-27 15:22:28.755]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
Event processed @ctenv(functionToList(proposal(proposal, 3, 8155, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateClock(15)
Event processed UpdateClock(12)
Event processed @ctenv(functionToList(proposal(proposal, 2, 7113, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 5, 3))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 7113=no)
							then	{	NextStep(5, 3, 7113)
								}
							else	{	NextStep(5, 3)
								}
						}
				}
			else	{	if	B(not 7113=no)
					then	{	NextStep(5, 3, 7113)
						}
					else	{	NextStep(5, 3)
						}
				}
		};
	if	B(not 7113=no)
	then	{	Sent(7113, 3, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 3, 8155, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateClock(15)
},
{	UpdateClock(12)
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 5, 3)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not 7113=no) then NextStep(5, 3, 7113) else NextStep(5, 3) else if B(not 7113=no) then NextStep(5, 3, 7113) else NextStep(5, 3); if B(not 7113=no) then Sent(7113, 3, open, Clock); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(proposal(proposal, 3, 8155, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(15), UpdateClock(12)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 5, 3))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 7113=no)
							then	{	NextStep(5, 3, 7113)
								}
							else	{	NextStep(5, 3)
								}
						}
				}
			else	{	if	B(not 7113=no)
					then	{	NextStep(5, 3, 7113)
						}
					else	{	NextStep(5, 3)
						}
				}
		};
	if	B(not 7113=no)
	then	{	Sent(7113, 3, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 3, 8155, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateClock(15)
},
{	UpdateClock(12)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 2, 7113, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(proposal(proposal, 2, 7113, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 2, 7113, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@16a42fa7
[CTAH] The created APLList : [proposal,3,8155,open]
[CTAH] Array of Terms: [Lapapl.data.Term;@5c6ecbcd
[CTAH] The created APLList : [proposal,2,7113,open]
[Planbase]:{	if	B(tile(Color1, 5, 3))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 7113=no)
							then	{	NextStep(5, 3, 7113)
								}
							else	{	NextStep(5, 3)
								}
						}
				}
			else	{	if	B(not 7113=no)
					then	{	NextStep(5, 3, 7113)
						}
					else	{	NextStep(5, 3)
						}
				}
		};
	if	B(not 7113=no)
	then	{	Sent(7113, 3, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,8155,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,3,8155,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,3,8155,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(tile(Color1, 5, 3)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not 7113=no) then NextStep(5, 3, 7113) else NextStep(5, 3) else if B(not 7113=no) then NextStep(5, 3, 7113) else NextStep(5, 3); if B(not 7113=no) then Sent(7113, 3, open, 11); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,3,8155,open])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([proposal,3,8155,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,3,8155,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(tile(Color1, 5, 3))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 7113=no)
							then	{	NextStep(5, 3, 7113)
								}
							else	{	NextStep(5, 3)
								}
						}
				}
			else	{	if	B(not 7113=no)
					then	{	NextStep(5, 3, 7113)
						}
					else	{	NextStep(5, 3)
						}
				}
		};
	if	B(not 7113=no)
	then	{	Sent(7113, 3, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,8155,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,3,8155,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,3,8155,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([proposal,2,7113,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,2,7113,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,2,7113,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,2,7113,open])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([proposal,2,7113,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,2,7113,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,7113,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,2,7113,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,2,7113,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not 7113=no)
					then	{	NextStep(5, 3, 7113)
						}
					else	{	NextStep(5, 3)
						}
				}
		}
	else	{	if	B(not 7113=no)
			then	{	NextStep(5, 3, 7113)
				}
			else	{	NextStep(5, 3)
				}
		};
	if	B(not 7113=no)
	then	{	Sent(7113, 3, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,8155,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,8155,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(700>V2) then if B(not 7113=no) then NextStep(5, 3, 7113) else NextStep(5, 3) else if B(not 7113=no) then NextStep(5, 3, 7113) else NextStep(5, 3); if B(not 7113=no) then Sent(7113, 3, open, 11); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,3,8155,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,3,8155,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not 7113=no)
					then	{	NextStep(5, 3, 7113)
						}
					else	{	NextStep(5, 3)
						}
				}
		}
	else	{	if	B(not 7113=no)
			then	{	NextStep(5, 3, 7113)
				}
			else	{	NextStep(5, 3)
				}
		};
	if	B(not 7113=no)
	then	{	Sent(7113, 3, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,8155,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,8155,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,7113,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,7113,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,2,7113,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,2,7113,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,7113,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,2,7113,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B(not 7113=no)
	then	{	NextStep(5, 3, 7113)
		}
	else	{	NextStep(5, 3)
		};
	if	B(not 7113=no)
	then	{	Sent(7113, 3, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,8155,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B(not 7113=no) then NextStep(5, 3, 7113) else NextStep(5, 3); if B(not 7113=no) then Sent(7113, 3, open, 11); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,3,8155,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(not 7113=no)
	then	{	NextStep(5, 3, 7113)
		}
	else	{	NextStep(5, 3)
		};
	if	B(not 7113=no)
	then	{	Sent(7113, 3, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,8155,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,7113,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,2,7113,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,2,7113,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	NextStep(5, 3, 7113);
	if	B(not 7113=no)
	then	{	Sent(7113, 3, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 8155, open)
		}
}


[new scheduled]:[NextStep(5, 3, 7113); if B(not 7113=no) then Sent(7113, 3, open, 11); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(proposal=proposal) then ReceivedProposal(3, 8155, open)]
[After]:{	NextStep(5, 3, 7113);
	if	B(not 7113=no)
	then	{	Sent(7113, 3, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 8155, open)
		}
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 7113, open)
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(proposal=proposal) then ReceivedProposal(2, 7113, open)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(2, 7113, open)
		}
}


[Planbase]:{	if	B(not 7113=no)
	then	{	Sent(7113, 3, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(3, 8155, open)
}


[new scheduled]:[if B(not 7113=no) then Sent(7113, 3, open, 11); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedProposal(3, 8155, open)]
[After]:{	if	B(not 7113=no)
	then	{	Sent(7113, 3, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(3, 8155, open)
}


[Planbase]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(2, 7113, open)
}


[new scheduled]:[if B(12>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedProposal(2, 7113, open)]
[After]:{	if	B(12>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(2, 7113, open)
}


[Planbase]:{	Sent(7113, 3, open, 11);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[getScoreAfterExchange(2, 8155); if G(at(A, B, C)) then skip else makeResponse(8155, accept), Sent(7113, 3, open, 11); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	getScoreAfterExchange(2, 8155);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(8155, accept)
		}
},
{	Sent(7113, 3, open, 11);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[getScoreAfterExchange(3, 7113); if G(at(A, B, C)) then skip else makeResponse(7113, accept), if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	getScoreAfterExchange(3, 7113);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(7113, accept)
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


org notification: Time [clock=16, time=2015-05-27 15:22:29.391]
object notification: Time [clock=16, time=2015-05-27 15:22:29.391]
object notification: Time [clock=16, time=2015-05-27 15:22:29.391]
object notification: Time [clock=16, time=2015-05-27 15:22:29.391]
org notification: Time [clock=16, time=2015-05-27 15:22:29.391]
Event processed UpdateClock(16)
[Planbase]:{	GetScoreAfterExchange(8155, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(8155, accept)
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[GetScoreAfterExchange(8155, yes); if G(at(A, B, C)) then skip else makeResponse(8155, accept), if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	GetScoreAfterExchange(8155, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(8155, accept)
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	GetScoreAfterExchange(7113, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(7113, accept)
		}
},
{	if	B(scoreAfterExchange(7113, Score))
	then	{	respond(7113, 700)
		}
},
{	UpdateClock(16)
}


[new scheduled]:[GetScoreAfterExchange(7113, yes); if G(at(A, B, C)) then skip else makeResponse(7113, accept), if B(scoreAfterExchange(7113, Score)) then respond(7113, 700), UpdateClock(16)]
[After]:{	GetScoreAfterExchange(7113, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(7113, accept)
		}
},
{	if	B(scoreAfterExchange(7113, Score))
	then	{	respond(7113, 700)
		}
},
{	UpdateClock(16)
}


Event processed UpdateClock(16)
[Planbase]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(8155, accept)
		}
},
{	if	B(scoreAfterExchange(8155, Score))
	then	{	respond(8155, 700)
		}
},
{	UpdateClock(16)
}


[new scheduled]:[if G(at(A, B, C)) then skip else makeResponse(8155, accept), if B(scoreAfterExchange(8155, Score)) then respond(8155, 700), UpdateClock(16)]
[After]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(8155, accept)
		}
},
{	if	B(scoreAfterExchange(8155, Score))
	then	{	respond(8155, 700)
		}
},
{	UpdateClock(16)
}


[Planbase]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(7113, accept)
		}
},
{	respond(7113, 700)
}


[new scheduled]:[if G(at(A, B, C)) then skip else makeResponse(7113, accept), respond(7113, 700)]
[After]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(7113, accept)
		}
},
{	respond(7113, 700)
}


[Planbase]:{	skip
},
{	respond(8155, 700)
}


[new scheduled]:[skip, respond(8155, 700)]
[After]:{	skip
},
{	respond(8155, 700)
}


[Planbase]:{	skip
},
{	B(ANSWER=accept);
	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>700)
					then	{	B(ANSWER=reject)
						}
				}
		};
	makeResponse(7113, ANSWER)
}


[new scheduled]:[skip, B(ANSWER=accept); if B(yes=no) then if B(prohibition(rejectRequests(V2))) then if B(V2>700) then B(ANSWER=reject); makeResponse(7113, ANSWER)]
[After]:{	skip
},
{	B(ANSWER=accept);
	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>700)
					then	{	B(ANSWER=reject)
						}
				}
		};
	makeResponse(7113, ANSWER)
}


[Planbase]:{	B(ANSWER=accept);
	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>700)
					then	{	B(ANSWER=reject)
						}
				}
		};
	makeResponse(8155, ANSWER)
}


[new scheduled]:[B(ANSWER=accept); if B(yes=no) then if B(prohibition(rejectRequests(V2))) then if B(V2>700) then B(ANSWER=reject); makeResponse(8155, ANSWER)]
[After]:{	B(ANSWER=accept);
	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>700)
					then	{	B(ANSWER=reject)
						}
				}
		};
	makeResponse(8155, ANSWER)
}


[Planbase]:{	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>700)
					then	{	B(accept=reject)
						}
				}
		};
	makeResponse(7113, accept)
}


[new scheduled]:[if B(yes=no) then if B(prohibition(rejectRequests(V2))) then if B(V2>700) then B(accept=reject); makeResponse(7113, accept)]
[After]:{	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>700)
					then	{	B(accept=reject)
						}
				}
		};
	makeResponse(7113, accept)
}


[Planbase]:{	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>700)
					then	{	B(accept=reject)
						}
				}
		};
	makeResponse(8155, accept)
}


[new scheduled]:[if B(yes=no) then if B(prohibition(rejectRequests(V2))) then if B(V2>700) then B(accept=reject); makeResponse(8155, accept)]
[After]:{	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>700)
					then	{	B(accept=reject)
						}
				}
		};
	makeResponse(8155, accept)
}


[Planbase]:{	makeResponse(7113, accept)
}


[new scheduled]:[makeResponse(7113, accept)]
[After]:{	makeResponse(7113, accept)
}


[Planbase]:{	makeResponse(8155, accept)
}


[new scheduled]:[makeResponse(8155, accept)]
[After]:{	makeResponse(8155, accept)
}


[Planbase]:{	sendResponse(accept, 7113)
}


[new scheduled]:[sendResponse(accept, 7113)]
[After]:{	sendResponse(accept, 7113)
}


[Planbase]:{	sendResponse(accept, 8155)
}


[new scheduled]:[sendResponse(accept, 8155)]
[After]:{	sendResponse(accept, 8155)
}


[Planbase]:{	@ctenv(sendResponse(7113, accept),L1,0);
	Sent(accept, 7113)
}


[new scheduled]:[@ctenv(sendResponse(7113, accept),L1,0); Sent(accept, 7113)]
[After]:{	@ctenv(sendResponse(7113, accept),L1,0);
	Sent(accept, 7113)
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
org notification: Response [id=7113, response=accepted, clock=16, time=2015-05-27 15:22:29.947]
org notification: Response [id=7113, response=accepted, clock=16, time=2015-05-27 15:22:29.947]
a10[CTAH] path: 0
a10[CTAH] path: Path: [2][1] [2][2] [3][2]

a10[CTAH] moveStepToGoalTest nopoints: []
Event processed @ctenv(functionToList(message(response, 7113, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:2,C:2)
a10[CTAH] moveStepToGoalTest sent proposal for: [2,2,1,8801]
org notification: Proposal [id=8801, agent=a10, agent2=a20, clock=16, time=2015-05-27 15:22:29.994]
org notification: Proposal [id=8801, agent=a10, agent2=a20, clock=16, time=2015-05-27 15:22:29.994]
[Planbase]:{	@ctenv(sendResponse(8155, accept),L1,0);
	Sent(accept, 8155)
},
{	@ctenv(functionToList(message(response, 7113, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(sendResponse(8155, accept),L1,0); Sent(accept, 8155), @ctenv(functionToList(message(response, 7113, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(sendResponse(8155, accept),L1,0);
	Sent(accept, 8155)
},
{	@ctenv(functionToList(message(response, 7113, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed UpdateClock(15)
Event processed UpdateClock(12)
Event processed UpdateClock(16)
[CTAH] Array of Terms: [Lapapl.data.Term;@6119de05
[CTAH] The created APLList : [response,7113,accept]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
org notification: Response [id=8155, response=accepted, clock=16, time=2015-05-27 15:22:30.057]
org notification: Response [id=8155, response=accepted, clock=16, time=2015-05-27 15:22:30.057]
[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 2, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 8801=no)
							then	{	NextStep(2, 2, 8801)
								}
							else	{	NextStep(2, 2)
								}
						}
				}
			else	{	if	B(not 8801=no)
					then	{	NextStep(2, 2, 8801)
						}
					else	{	NextStep(2, 2)
						}
				}
		};
	if	B(not 8801=no)
	then	{	Sent(8801, 1, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(15)
},
{	UpdateClock(12)
},
{	UpdateClock(16)
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 2, 2)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not 8801=no) then NextStep(2, 2, 8801) else NextStep(2, 2) else if B(not 8801=no) then NextStep(2, 2, 8801) else NextStep(2, 2); if B(not 8801=no) then Sent(8801, 1, open, Clock); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(15), UpdateClock(12), UpdateClock(16)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 2, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 8801=no)
							then	{	NextStep(2, 2, 8801)
								}
							else	{	NextStep(2, 2)
								}
						}
				}
			else	{	if	B(not 8801=no)
					then	{	NextStep(2, 2, 8801)
						}
					else	{	NextStep(2, 2)
						}
				}
		};
	if	B(not 8801=no)
	then	{	Sent(8801, 1, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(15)
},
{	UpdateClock(12)
},
{	UpdateClock(16)
}


Event processed @ctenv(functionToList(message(response, 8155, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	if	B([actionresult([response,7113,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,7113,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,7113,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([response,7113,accept])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([response,7113,accept])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([response,7113,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,7113,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,7113,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,7113,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(response, 8155, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(message(response, 8155, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(response, 8155, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@5ab4f997
[CTAH] The created APLList : [response,8155,accept]
[Planbase]:{	if	B(tile(Color1, 2, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 8801=no)
							then	{	NextStep(2, 2, 8801)
								}
							else	{	NextStep(2, 2)
								}
						}
				}
			else	{	if	B(not 8801=no)
					then	{	NextStep(2, 2, 8801)
						}
					else	{	NextStep(2, 2)
						}
				}
		};
	if	B(not 8801=no)
	then	{	Sent(8801, 1, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(Color1, 2, 2)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not 8801=no) then NextStep(2, 2, 8801) else NextStep(2, 2) else if B(not 8801=no) then NextStep(2, 2, 8801) else NextStep(2, 2); if B(not 8801=no) then Sent(8801, 1, open, 11); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(Color1, 2, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 8801=no)
							then	{	NextStep(2, 2, 8801)
								}
							else	{	NextStep(2, 2)
								}
						}
				}
			else	{	if	B(not 8801=no)
					then	{	NextStep(2, 2, 8801)
						}
					else	{	NextStep(2, 2)
						}
				}
		};
	if	B(not 8801=no)
	then	{	Sent(8801, 1, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(5, 3, 7113);
			ReceivedMessage(noresponse, 7113)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 7113)
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(5, 3, 7113); ReceivedMessage(noresponse, 7113)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(response=response) then ReceivedMessage(accept, 7113)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(5, 3, 7113);
			ReceivedMessage(noresponse, 7113)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 7113)
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,8155,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,8155,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,8155,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([response,8155,accept])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([response,8155,accept])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([response,8155,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,8155,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,8155,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,8155,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(brown, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not 8801=no)
					then	{	NextStep(2, 2, 8801)
						}
					else	{	NextStep(2, 2)
						}
				}
		}
	else	{	if	B(not 8801=no)
			then	{	NextStep(2, 2, 8801)
				}
			else	{	NextStep(2, 2)
				}
		};
	if	B(not 8801=no)
	then	{	Sent(8801, 1, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(brown, V2))) then if B(700>V2) then if B(not 8801=no) then NextStep(2, 2, 8801) else NextStep(2, 2) else if B(not 8801=no) then NextStep(2, 2, 8801) else NextStep(2, 2); if B(not 8801=no) then Sent(8801, 1, open, 11); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(brown, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not 8801=no)
					then	{	NextStep(2, 2, 8801)
						}
					else	{	NextStep(2, 2)
						}
				}
		}
	else	{	if	B(not 8801=no)
			then	{	NextStep(2, 2, 8801)
				}
			else	{	NextStep(2, 2)
				}
		};
	if	B(not 8801=no)
	then	{	Sent(8801, 1, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 7113)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 7113)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 7113)
}


[Planbase]:{	if	B(response=response)
	then	{	ReceivedMessage(accept, 8155)
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(response=response) then ReceivedMessage(accept, 8155)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 8155)
		}
}


[Planbase]:{	if	B(not 8801=no)
	then	{	NextStep(2, 2, 8801)
		}
	else	{	NextStep(2, 2)
		};
	if	B(not 8801=no)
	then	{	Sent(8801, 1, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 8801=no) then NextStep(2, 2, 8801) else NextStep(2, 2); if B(not 8801=no) then Sent(8801, 1, open, 11); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 8801=no)
	then	{	NextStep(2, 2, 8801)
		}
	else	{	NextStep(2, 2)
		};
	if	B(not 8801=no)
	then	{	Sent(8801, 1, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 8155)
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(4, 3, 8155); ReceivedMessage(noresponse, 8155)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 8155)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(4, 3, 8155);
			ReceivedMessage(noresponse, 8155)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 8155)
}


[Planbase]:{	NextStep(2, 2, 8801);
	if	B(not 8801=no)
	then	{	Sent(8801, 1, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NextStep(2, 2, 8801); if B(not 8801=no) then Sent(8801, 1, open, 11); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NextStep(2, 2, 8801);
	if	B(not 8801=no)
	then	{	Sent(8801, 1, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 5, 3),L2,0);
	if	B(L2=[actionresult([5,3])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 3, Clock)
		};
	NoNextStep(5, 3, 7113);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 5, 3),L2,0); if B(L2=[actionresult([5,3])]) then {B(clock(Clock)); UpdatePosition(5, 3, Clock)}; NoNextStep(5, 3, 7113); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoal(neco, 5, 3),L2,0);
	if	B(L2=[actionresult([5,3])])
	then	{	B(clock(Clock));
			UpdatePosition(5, 3, Clock)
		};
	NoNextStep(5, 3, 7113);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Need to wait 4 more seconds
object notification: Position [subject=a30, id=null, cell=Cell [x=5, y=3], time=2015-05-27 15:22:30.686, clock=16]
org notification: Position [subject=a30, id=null, cell=Cell [x=5, y=3], time=2015-05-27 15:22:30.686, clock=16]
org notification: Position [subject=a30, id=null, cell=Cell [x=5, y=3], time=2015-05-27 15:22:30.686, clock=16]
[Planbase]:{	if	B(not 8801=no)
	then	{	Sent(8801, 1, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 8801=no) then Sent(8801, 1, open, 11); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 8801=no)
	then	{	Sent(8801, 1, open, 11)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	Sent(8801, 1, open, 11);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[Sent(8801, 1, open, 11); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	Sent(8801, 1, open, 11);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 4, 3),L2,0);
	if	B(L2=[actionresult([4,3])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 3, Clock)
		};
	NoNextStep(4, 3, 8155);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 4, 3),L2,0); if B(L2=[actionresult([4,3])]) then {B(clock(Clock)); UpdatePosition(4, 3, Clock)}; NoNextStep(4, 3, 8155); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoal(neco, 4, 3),L2,0);
	if	B(L2=[actionresult([4,3])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 3, Clock)
		};
	NoNextStep(4, 3, 8155);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a40[CTAH] moveStepToGoal returns: false
org notification: Position [subject=a40, id=null, cell=Cell [x=4, y=3], time=2015-05-27 15:22:30.85, clock=16]
object notification: Position [subject=a40, id=null, cell=Cell [x=4, y=3], time=2015-05-27 15:22:30.85, clock=16]
org notification: Position [subject=a40, id=null, cell=Cell [x=4, y=3], time=2015-05-27 15:22:30.85, clock=16]
Event processed UpdatePosition(4, 3, 16)
object notification: Points [subject=a40, time=2015-05-27 15:22:30.874, clock=16, value=900, id=null]
object notification: Points [subject=a40, time=2015-05-27 15:22:30.874, clock=16, value=900, id=null]
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[Planbase]:{	NoNextStep(4, 3, 8155);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(4, 3, 16)
}


[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NoNextStep(4, 3, 8155); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdatePosition(4, 3, 16)]
[After]:{	NoNextStep(4, 3, 8155);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(4, 3, 16)
}


Event processed UpdatePoints(900)
Event processed UpdatePoints(900)
[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePoints(900)
},
{	UpdatePoints(900)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdatePoints(900), UpdatePoints(900)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePoints(900)
},
{	UpdatePoints(900)
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 8801);
			ReceivedMessage(noresponse, 8801)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 8801); ReceivedMessage(noresponse, 8801)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 8801);
			ReceivedMessage(noresponse, 8801)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0) else if B(tile(neco, X, Y)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a40[CTAH] going goal: 3,4 color: neco
[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 8801);
			ReceivedMessage(noresponse, 8801)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 8801); ReceivedMessage(noresponse, 8801)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 8801);
			ReceivedMessage(noresponse, 8801)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 8801);
			ReceivedMessage(noresponse, 8801)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 8801); ReceivedMessage(noresponse, 8801)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 8801);
			ReceivedMessage(noresponse, 8801)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 8801);
			ReceivedMessage(noresponse, 8801)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 8801); ReceivedMessage(noresponse, 8801)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 8801);
			ReceivedMessage(noresponse, 8801)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 8801);
			ReceivedMessage(noresponse, 8801)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 8801); ReceivedMessage(noresponse, 8801)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 8801);
			ReceivedMessage(noresponse, 8801)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 8801);
			ReceivedMessage(noresponse, 8801)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 8801); ReceivedMessage(noresponse, 8801)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 8801);
			ReceivedMessage(noresponse, 8801)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 8801);
			ReceivedMessage(noresponse, 8801)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 8801); ReceivedMessage(noresponse, 8801)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 8801);
			ReceivedMessage(noresponse, 8801)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 8801);
			ReceivedMessage(noresponse, 8801)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 8801); ReceivedMessage(noresponse, 8801)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 8801);
			ReceivedMessage(noresponse, 8801)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 8801);
			ReceivedMessage(noresponse, 8801)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 8801); ReceivedMessage(noresponse, 8801)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 8801);
			ReceivedMessage(noresponse, 8801)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 8801);
			ReceivedMessage(noresponse, 8801)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(16>11+5) then {NoNextStep(2, 2, 8801); ReceivedMessage(noresponse, 8801)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(16>11+5)
	then	{	NoNextStep(2, 2, 8801);
			ReceivedMessage(noresponse, 8801)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=13, time=2015-05-27 15:22:32.667]
org notification: Time [clock=13, time=2015-05-27 15:22:32.667]
object notification: Time [clock=13, time=2015-05-27 15:22:32.667]
org notification: Time [clock=13, time=2015-05-27 15:22:32.667]
object notification: Time [clock=13, time=2015-05-27 15:22:32.667]
Event processed UpdateClock(13)
org notification: Response [id=8801, response=accepted, clock=13, time=2015-05-27 15:22:32.721]
org notification: Response [id=8801, response=accepted, clock=13, time=2015-05-27 15:22:32.721]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(13)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(13)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(13)
}


Event processed @ctenv(functionToList(message(response, 8801, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(response, 8801, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(message(response, 8801, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(response, 8801, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@244da3c
[CTAH] The created APLList : [response,8801,accept]
[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 8801);
			ReceivedMessage(noresponse, 8801)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,8801,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,8801,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,8801,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 8801); ReceivedMessage(noresponse, 8801)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([response,8801,accept])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([response,8801,accept])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([response,8801,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 8801);
			ReceivedMessage(noresponse, 8801)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,8801,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,8801,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,8801,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 8801)
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(response=response) then ReceivedMessage(accept, 8801)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 8801)
		}
}


[Planbase]:{	ReceivedMessage(accept, 8801)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 8801)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 8801)
}


[Planbase]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 8801);
			ReceivedMessage(noresponse, 8801)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>11+5) then {NoNextStep(2, 2, 8801); ReceivedMessage(noresponse, 8801)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>11+5)
	then	{	NoNextStep(2, 2, 8801);
			ReceivedMessage(noresponse, 8801)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 2, 2),L2,0);
	if	B(L2=[actionresult([2,2])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 2, Clock)
		};
	NoNextStep(2, 2, 8801);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 2, 2),L2,0); if B(L2=[actionresult([2,2])]) then {B(clock(Clock)); UpdatePosition(2, 2, Clock)}; NoNextStep(2, 2, 8801); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoal(neco, 2, 2),L2,0);
	if	B(L2=[actionresult([2,2])])
	then	{	B(clock(Clock));
			UpdatePosition(2, 2, Clock)
		};
	NoNextStep(2, 2, 8801);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Need to wait 4 more seconds
object notification: Position [subject=a10, id=null, cell=Cell [x=2, y=2], time=2015-05-27 15:22:33.379, clock=13]
org notification: Position [subject=a10, id=null, cell=Cell [x=2, y=2], time=2015-05-27 15:22:33.379, clock=13]
org notification: Position [subject=a10, id=null, cell=Cell [x=2, y=2], time=2015-05-27 15:22:33.379, clock=13]
a30[CTAH] moveStepToGoal returns: [5,3]
Event processed UpdatePosition(5, 3, 16)
Event processed UpdateClock(13)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(5, 3, Clock);
	NoNextStep(5, 3, 7113);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(5, 3, 16)
},
{	UpdateClock(13)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(5, 3, Clock); NoNextStep(5, 3, 7113); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdatePosition(5, 3, 16), UpdateClock(13)]
[After]:{	B(clock(Clock));
	UpdatePosition(5, 3, Clock);
	NoNextStep(5, 3, 7113);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(5, 3, 16)
},
{	UpdateClock(13)
}


[Planbase]:{	UpdatePosition(5, 3, 16);
	NoNextStep(5, 3, 7113);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[UpdatePosition(5, 3, 16); NoNextStep(5, 3, 7113); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	UpdatePosition(5, 3, 16);
	NoNextStep(5, 3, 7113);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NoNextStep(5, 3, 7113);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NoNextStep(5, 3, 7113); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NoNextStep(5, 3, 7113);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0) else if B(tile(neco, X, Y)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] going goal: 4,3 color: neco
a40[CTAH] paths: 1000
a40[CTAH] path: 0
a40[CTAH] path: Path: [4][3] [3][3] [3][4]

a40[CTAH] moveStepToGoalTest nopoints: []
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:3,C:3)
a40[CTAH] moveStepToGoalTest sent proposal for: [3,3,2,7403]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 2
[MSG] i'm: 2
org notification: Proposal [id=7403, agent=a40, agent2=a30, clock=13, time=2015-05-27 15:22:36.828]
org notification: Proposal [id=7403, agent=a40, agent2=a30, clock=13, time=2015-05-27 15:22:36.828]
Received a proposal creating event
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
Event processed UpdateClock(13)
[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 3, 3))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 7403=no)
							then	{	NextStep(3, 3, 7403)
								}
							else	{	NextStep(3, 3)
								}
						}
				}
			else	{	if	B(not 7403=no)
					then	{	NextStep(3, 3, 7403)
						}
					else	{	NextStep(3, 3)
						}
				}
		};
	if	B(not 7403=no)
	then	{	Sent(7403, 2, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(13)
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 3, 3)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not 7403=no) then NextStep(3, 3, 7403) else NextStep(3, 3) else if B(not 7403=no) then NextStep(3, 3, 7403) else NextStep(3, 3); if B(not 7403=no) then Sent(7403, 2, open, Clock); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(13)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 3, 3))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 7403=no)
							then	{	NextStep(3, 3, 7403)
								}
							else	{	NextStep(3, 3)
								}
						}
				}
			else	{	if	B(not 7403=no)
					then	{	NextStep(3, 3, 7403)
						}
					else	{	NextStep(3, 3)
						}
				}
		};
	if	B(not 7403=no)
	then	{	Sent(7403, 2, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(13)
}


[Planbase]:{	if	B(tile(Color1, 3, 3))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 7403=no)
							then	{	NextStep(3, 3, 7403)
								}
							else	{	NextStep(3, 3)
								}
						}
				}
			else	{	if	B(not 7403=no)
					then	{	NextStep(3, 3, 7403)
						}
					else	{	NextStep(3, 3)
						}
				}
		};
	if	B(not 7403=no)
	then	{	Sent(7403, 2, open, 16)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(Color1, 3, 3)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not 7403=no) then NextStep(3, 3, 7403) else NextStep(3, 3) else if B(not 7403=no) then NextStep(3, 3, 7403) else NextStep(3, 3); if B(not 7403=no) then Sent(7403, 2, open, 16); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(Color1, 3, 3))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 7403=no)
							then	{	NextStep(3, 3, 7403)
								}
							else	{	NextStep(3, 3)
								}
						}
				}
			else	{	if	B(not 7403=no)
					then	{	NextStep(3, 3, 7403)
						}
					else	{	NextStep(3, 3)
						}
				}
		};
	if	B(not 7403=no)
	then	{	Sent(7403, 2, open, 16)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(blue, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not 7403=no)
					then	{	NextStep(3, 3, 7403)
						}
					else	{	NextStep(3, 3)
						}
				}
		}
	else	{	if	B(not 7403=no)
			then	{	NextStep(3, 3, 7403)
				}
			else	{	NextStep(3, 3)
				}
		};
	if	B(not 7403=no)
	then	{	Sent(7403, 2, open, 16)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(blue, V2))) then if B(700>V2) then if B(not 7403=no) then NextStep(3, 3, 7403) else NextStep(3, 3) else if B(not 7403=no) then NextStep(3, 3, 7403) else NextStep(3, 3); if B(not 7403=no) then Sent(7403, 2, open, 16); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(blue, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not 7403=no)
					then	{	NextStep(3, 3, 7403)
						}
					else	{	NextStep(3, 3)
						}
				}
		}
	else	{	if	B(not 7403=no)
			then	{	NextStep(3, 3, 7403)
				}
			else	{	NextStep(3, 3)
				}
		};
	if	B(not 7403=no)
	then	{	Sent(7403, 2, open, 16)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(700>100)
	then	{	if	B(not 7403=no)
			then	{	NextStep(3, 3, 7403)
				}
			else	{	NextStep(3, 3)
				}
		};
	if	B(not 7403=no)
	then	{	Sent(7403, 2, open, 16)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(700>100) then if B(not 7403=no) then NextStep(3, 3, 7403) else NextStep(3, 3); if B(not 7403=no) then Sent(7403, 2, open, 16); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(700>100)
	then	{	if	B(not 7403=no)
			then	{	NextStep(3, 3, 7403)
				}
			else	{	NextStep(3, 3)
				}
		};
	if	B(not 7403=no)
	then	{	Sent(7403, 2, open, 16)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 7403=no)
	then	{	NextStep(3, 3, 7403)
		}
	else	{	NextStep(3, 3)
		};
	if	B(not 7403=no)
	then	{	Sent(7403, 2, open, 16)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 7403=no) then NextStep(3, 3, 7403) else NextStep(3, 3); if B(not 7403=no) then Sent(7403, 2, open, 16); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 7403=no)
	then	{	NextStep(3, 3, 7403)
		}
	else	{	NextStep(3, 3)
		};
	if	B(not 7403=no)
	then	{	Sent(7403, 2, open, 16)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NextStep(3, 3, 7403);
	if	B(not 7403=no)
	then	{	Sent(7403, 2, open, 16)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NextStep(3, 3, 7403); if B(not 7403=no) then Sent(7403, 2, open, 16); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NextStep(3, 3, 7403);
	if	B(not 7403=no)
	then	{	Sent(7403, 2, open, 16)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 7403=no)
	then	{	Sent(7403, 2, open, 16)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 7403=no) then Sent(7403, 2, open, 16); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 7403=no)
	then	{	Sent(7403, 2, open, 16)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	Sent(7403, 2, open, 16);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[Sent(7403, 2, open, 16); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	Sent(7403, 2, open, 16);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] moveStepToGoal returns: [2,2]
[Planbase]:{	if	B(13>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed UpdatePosition(2, 2, 13)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(2, 2, Clock);
	NoNextStep(2, 2, 8801);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(2, 2, 13)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(2, 2, Clock); NoNextStep(2, 2, 8801); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdatePosition(2, 2, 13)]
[After]:{	B(clock(Clock));
	UpdatePosition(2, 2, Clock);
	NoNextStep(2, 2, 8801);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(2, 2, 13)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	UpdatePosition(2, 2, 13);
	NoNextStep(2, 2, 8801);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[UpdatePosition(2, 2, 13); NoNextStep(2, 2, 8801); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	UpdatePosition(2, 2, 13);
	NoNextStep(2, 2, 8801);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NoNextStep(2, 2, 8801);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NoNextStep(2, 2, 8801); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NoNextStep(2, 2, 8801);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0) else if B(tile(neco, X, Y)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] going goal: 3,2 color: neco
[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(13>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(13>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(13>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


org notification: Time [clock=17, time=2015-05-27 15:22:39.393]
org notification: Time [clock=17, time=2015-05-27 15:22:39.393]
object notification: Time [clock=17, time=2015-05-27 15:22:39.393]
object notification: Time [clock=17, time=2015-05-27 15:22:39.393]
object notification: Time [clock=17, time=2015-05-27 15:22:39.393]
[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed UpdateClock(17)
[Planbase]:{	if	B(13>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(17)
}


[new scheduled]:[if B(13>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(17)]
[After]:{	if	B(13>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(17)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


org notification: Time [clock=14, time=2015-05-27 15:22:42.67]
object notification: Time [clock=14, time=2015-05-27 15:22:42.67]
org notification: Time [clock=14, time=2015-05-27 15:22:42.67]
object notification: Time [clock=14, time=2015-05-27 15:22:42.67]
object notification: Time [clock=14, time=2015-05-27 15:22:42.67]
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed UpdateClock(14)
[Planbase]:{	UpdateClock(14)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(14)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(14)
}


[Planbase]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(17>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(17>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=18, time=2015-05-27 15:22:49.398]
org notification: Time [clock=18, time=2015-05-27 15:22:49.398]
org notification: Time [clock=18, time=2015-05-27 15:22:49.398]
object notification: Time [clock=18, time=2015-05-27 15:22:49.398]
object notification: Time [clock=18, time=2015-05-27 15:22:49.398]
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed UpdateClock(18)
[Planbase]:{	UpdateClock(18)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(18)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(18)
}


[Planbase]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(14>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(14>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] paths: 1000
Need to wait 3 more seconds
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a10[CTAH] paths: 1000
Need to wait 3 more seconds
[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


org notification: Time [clock=15, time=2015-05-27 15:22:52.675]
object notification: Time [clock=15, time=2015-05-27 15:22:52.675]
org notification: Time [clock=15, time=2015-05-27 15:22:52.675]
object notification: Time [clock=15, time=2015-05-27 15:22:52.675]
object notification: Time [clock=15, time=2015-05-27 15:22:52.675]
Event processed UpdateClock(15)
[Planbase]:{	UpdateClock(15)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(15)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(15)
}


[Planbase]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(18>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(18>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] path: 0
a30[CTAH] path: Path: [5][3] [4][3]

a30[CTAH] moveStepToGoalTest returns I have chip: [4,3,no,no]
Event processed @ctenv(functionToList(proposal(proposal, 3, 7403, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateClock(17)
Event processed UpdateClock(14)
Event processed UpdateClock(18)
Event processed UpdateClock(15)
[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 4, 3))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not no=no)
							then	{	NextStep(4, 3, no)
								}
							else	{	NextStep(4, 3)
								}
						}
				}
			else	{	if	B(not no=no)
					then	{	NextStep(4, 3, no)
						}
					else	{	NextStep(4, 3)
						}
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 3, 7403, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateClock(17)
},
{	UpdateClock(14)
},
{	UpdateClock(18)
},
{	UpdateClock(15)
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 4, 3)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not no=no) then NextStep(4, 3, no) else NextStep(4, 3) else if B(not no=no) then NextStep(4, 3, no) else NextStep(4, 3); if B(not no=no) then Sent(no, no, open, Clock); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(proposal(proposal, 3, 7403, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateClock(17), UpdateClock(14), UpdateClock(18), UpdateClock(15)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 4, 3))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not no=no)
							then	{	NextStep(4, 3, no)
								}
							else	{	NextStep(4, 3)
								}
						}
				}
			else	{	if	B(not no=no)
					then	{	NextStep(4, 3, no)
						}
					else	{	NextStep(4, 3)
						}
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(proposal(proposal, 3, 7403, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateClock(17)
},
{	UpdateClock(14)
},
{	UpdateClock(18)
},
{	UpdateClock(15)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@14b69af7
[CTAH] The created APLList : [proposal,3,7403,open]
[Planbase]:{	if	B(tile(Color1, 4, 3))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not no=no)
							then	{	NextStep(4, 3, no)
								}
							else	{	NextStep(4, 3)
								}
						}
				}
			else	{	if	B(not no=no)
					then	{	NextStep(4, 3, no)
						}
					else	{	NextStep(4, 3)
						}
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,7403,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,3,7403,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,3,7403,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(tile(Color1, 4, 3)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not no=no) then NextStep(4, 3, no) else NextStep(4, 3) else if B(not no=no) then NextStep(4, 3, no) else NextStep(4, 3); if B(not no=no) then Sent(no, no, open, 13); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,3,7403,open])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([proposal,3,7403,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,3,7403,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(tile(Color1, 4, 3))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not no=no)
							then	{	NextStep(4, 3, no)
								}
							else	{	NextStep(4, 3)
								}
						}
				}
			else	{	if	B(not no=no)
					then	{	NextStep(4, 3, no)
						}
					else	{	NextStep(4, 3)
						}
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,7403,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,3,7403,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,3,7403,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(15>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(blue, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not no=no)
					then	{	NextStep(4, 3, no)
						}
					else	{	NextStep(4, 3)
						}
				}
		}
	else	{	if	B(not no=no)
			then	{	NextStep(4, 3, no)
				}
			else	{	NextStep(4, 3)
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,7403,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,7403,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(blue, V2))) then if B(700>V2) then if B(not no=no) then NextStep(4, 3, no) else NextStep(4, 3) else if B(not no=no) then NextStep(4, 3, no) else NextStep(4, 3); if B(not no=no) then Sent(no, no, open, 13); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,3,7403,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,3,7403,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(prohibition(useColor(blue, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not no=no)
					then	{	NextStep(4, 3, no)
						}
					else	{	NextStep(4, 3)
						}
				}
		}
	else	{	if	B(not no=no)
			then	{	NextStep(4, 3, no)
				}
			else	{	NextStep(4, 3)
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,7403,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,3,7403,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(700>100)
	then	{	if	B(not no=no)
			then	{	NextStep(4, 3, no)
				}
			else	{	NextStep(4, 3)
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,7403,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B(700>100) then if B(not no=no) then NextStep(4, 3, no) else NextStep(4, 3); if B(not no=no) then Sent(no, no, open, 13); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,3,7403,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(700>100)
	then	{	if	B(not no=no)
			then	{	NextStep(4, 3, no)
				}
			else	{	NextStep(4, 3)
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,3,7403,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(4, 3, no)
		}
	else	{	NextStep(4, 3)
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 7403, open)
		}
}


[new scheduled]:[if B(not no=no) then NextStep(4, 3, no) else NextStep(4, 3); if B(not no=no) then Sent(no, no, open, 13); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(proposal=proposal) then ReceivedProposal(3, 7403, open)]
[After]:{	if	B(not no=no)
	then	{	NextStep(4, 3, no)
		}
	else	{	NextStep(4, 3)
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(3, 7403, open)
		}
}


[Planbase]:{	if	B(15>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NextStep(4, 3);
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(3, 7403, open)
}


[new scheduled]:[NextStep(4, 3); if B(not no=no) then Sent(no, no, open, 13); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedProposal(3, 7403, open)]
[After]:{	NextStep(4, 3);
	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedProposal(3, 7403, open)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[getScoreAfterExchange(2, 7403); if G(at(A, B, C)) then skip else makeResponse(7403, accept), if B(not no=no) then Sent(no, no, open, 13); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	getScoreAfterExchange(2, 7403);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(7403, accept)
		}
},
{	if	B(not no=no)
	then	{	Sent(no, no, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	GetScoreAfterExchange(7403, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(7403, accept)
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[GetScoreAfterExchange(7403, yes); if G(at(A, B, C)) then skip else makeResponse(7403, accept), if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	GetScoreAfterExchange(7403, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(7403, accept)
		}
},
{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(7403, accept)
		}
},
{	if	B(scoreAfterExchange(7403, Score))
	then	{	respond(7403, 700)
		}
}


[new scheduled]:[if G(at(A, B, C)) then skip else makeResponse(7403, accept), if B(scoreAfterExchange(7403, Score)) then respond(7403, 700)]
[After]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(7403, accept)
		}
},
{	if	B(scoreAfterExchange(7403, Score))
	then	{	respond(7403, 700)
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	skip
},
{	respond(7403, 700)
}


[new scheduled]:[skip, respond(7403, 700)]
[After]:{	skip
},
{	respond(7403, 700)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	B(ANSWER=accept);
	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>700)
					then	{	B(ANSWER=reject)
						}
				}
		};
	makeResponse(7403, ANSWER)
}


[new scheduled]:[B(ANSWER=accept); if B(yes=no) then if B(prohibition(rejectRequests(V2))) then if B(V2>700) then B(ANSWER=reject); makeResponse(7403, ANSWER)]
[After]:{	B(ANSWER=accept);
	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>700)
					then	{	B(ANSWER=reject)
						}
				}
		};
	makeResponse(7403, ANSWER)
}


[Planbase]:{	if	B(15>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>700)
					then	{	B(accept=reject)
						}
				}
		};
	makeResponse(7403, accept)
}


[new scheduled]:[if B(yes=no) then if B(prohibition(rejectRequests(V2))) then if B(V2>700) then B(accept=reject); makeResponse(7403, accept)]
[After]:{	if	B(yes=no)
	then	{	if	B(prohibition(rejectRequests(V2)))
			then	{	if	B(V2>700)
					then	{	B(accept=reject)
						}
				}
		};
	makeResponse(7403, accept)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	makeResponse(7403, accept)
}


[new scheduled]:[makeResponse(7403, accept)]
[After]:{	makeResponse(7403, accept)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	sendResponse(accept, 7403)
}


[new scheduled]:[sendResponse(accept, 7403)]
[After]:{	sendResponse(accept, 7403)
}


[Planbase]:{	if	B(15>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(sendResponse(7403, accept),L1,0);
	Sent(accept, 7403)
}


[new scheduled]:[@ctenv(sendResponse(7403, accept),L1,0); Sent(accept, 7403)]
[After]:{	@ctenv(sendResponse(7403, accept),L1,0);
	Sent(accept, 7403)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
org notification: Response [id=7403, response=accepted, clock=15, time=2015-05-27 15:22:54.267]
org notification: Response [id=7403, response=accepted, clock=15, time=2015-05-27 15:22:54.267]
Event processed @ctenv(functionToList(message(response, 7403, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(response, 7403, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(message(response, 7403, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(response, 7403, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@2b250a01
[CTAH] The created APLList : [response,7403,accept]
[Planbase]:{	@ctenv(moveStepToGoal(neco, 4, 3),L2,0);
	if	B(L2=[actionresult([4,3])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 3, Clock)
		};
	NoNextStep(4, 3);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 4, 3),L2,0); if B(L2=[actionresult([4,3])]) then {B(clock(Clock)); UpdatePosition(4, 3, Clock)}; NoNextStep(4, 3); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoal(neco, 4, 3),L2,0);
	if	B(L2=[actionresult([4,3])])
	then	{	B(clock(Clock));
			UpdatePosition(4, 3, Clock)
		};
	NoNextStep(4, 3);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,7403,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,7403,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,7403,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(15>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([response,7403,accept])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([response,7403,accept])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([response,7403,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(15>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,7403,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,7403,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,7403,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


Need to wait 4 more seconds
object notification: Position [subject=a30, id=null, cell=Cell [x=4, y=3], time=2015-05-27 15:22:54.477, clock=15]
org notification: Position [subject=a30, id=null, cell=Cell [x=4, y=3], time=2015-05-27 15:22:54.477, clock=15]
org notification: Position [subject=a30, id=null, cell=Cell [x=4, y=3], time=2015-05-27 15:22:54.477, clock=15]
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 7403)
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(response=response) then ReceivedMessage(accept, 7403)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 7403)
		}
}


[Planbase]:{	ReceivedMessage(accept, 7403)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 7403)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 7403)
}


[Planbase]:{	if	B(15>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>16+5) then {NoNextStep(3, 3, 7403); ReceivedMessage(noresponse, 7403)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>16+5)
	then	{	NoNextStep(3, 3, 7403);
			ReceivedMessage(noresponse, 7403)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 3, 3),L2,0);
	if	B(L2=[actionresult([3,3])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 3, Clock)
		};
	NoNextStep(3, 3, 7403);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 3, 3),L2,0); if B(L2=[actionresult([3,3])]) then {B(clock(Clock)); UpdatePosition(3, 3, Clock)}; NoNextStep(3, 3, 7403); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoal(neco, 3, 3),L2,0);
	if	B(L2=[actionresult([3,3])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 3, Clock)
		};
	NoNextStep(3, 3, 7403);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a40[CTAH] moveStepToGoal returns: false
org notification: Position [subject=a40, id=null, cell=Cell [x=3, y=3], time=2015-05-27 15:22:54.771, clock=15]
object notification: Position [subject=a40, id=null, cell=Cell [x=3, y=3], time=2015-05-27 15:22:54.771, clock=15]
org notification: Position [subject=a40, id=null, cell=Cell [x=3, y=3], time=2015-05-27 15:22:54.771, clock=15]
Event processed UpdatePosition(3, 3, 15)
[Planbase]:{	NoNextStep(3, 3, 7403);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(3, 3, 15)
}


[new scheduled]:[NoNextStep(3, 3, 7403); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdatePosition(3, 3, 15)]
[After]:{	NoNextStep(3, 3, 7403);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(3, 3, 15)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0) else if B(tile(neco, X, Y)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a40[CTAH] going goal: 3,4 color: neco
a10[CTAH] path: 0
a10[CTAH] path: Path: [2][2] [3][2]

a10[CTAH] moveStepToGoalTest nopoints: []
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] moveStepToGoalTest proposals: null
a10[CTAH] found a chip....: (R:3,C:2)
a10[CTAH] moveStepToGoalTest sent proposal for: [3,2,2,4725]
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 2
[MSG] i'm: 2
org notification: Proposal [id=4725, agent=a10, agent2=a30, clock=15, time=2015-05-27 15:22:55.441]
org notification: Proposal [id=4725, agent=a10, agent2=a30, clock=15, time=2015-05-27 15:22:55.441]
Received a proposal creating event
Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
Event processed UpdateClock(17)
Event processed UpdateClock(14)
Event processed UpdateClock(18)
Event processed UpdateClock(15)
[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 3, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 4725=no)
							then	{	NextStep(3, 2, 4725)
								}
							else	{	NextStep(3, 2)
								}
						}
				}
			else	{	if	B(not 4725=no)
					then	{	NextStep(3, 2, 4725)
						}
					else	{	NextStep(3, 2)
						}
				}
		};
	if	B(not 4725=no)
	then	{	Sent(4725, 2, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(17)
},
{	UpdateClock(14)
},
{	UpdateClock(18)
},
{	UpdateClock(15)
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 3, 2)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not 4725=no) then NextStep(3, 2, 4725) else NextStep(3, 2) else if B(not 4725=no) then NextStep(3, 2, 4725) else NextStep(3, 2); if B(not 4725=no) then Sent(4725, 2, open, Clock); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(17), UpdateClock(14), UpdateClock(18), UpdateClock(15)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 3, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 4725=no)
							then	{	NextStep(3, 2, 4725)
								}
							else	{	NextStep(3, 2)
								}
						}
				}
			else	{	if	B(not 4725=no)
					then	{	NextStep(3, 2, 4725)
						}
					else	{	NextStep(3, 2)
						}
				}
		};
	if	B(not 4725=no)
	then	{	Sent(4725, 2, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(17)
},
{	UpdateClock(14)
},
{	UpdateClock(18)
},
{	UpdateClock(15)
}


[Planbase]:{	if	B(tile(Color1, 3, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 4725=no)
							then	{	NextStep(3, 2, 4725)
								}
							else	{	NextStep(3, 2)
								}
						}
				}
			else	{	if	B(not 4725=no)
					then	{	NextStep(3, 2, 4725)
						}
					else	{	NextStep(3, 2)
						}
				}
		};
	if	B(not 4725=no)
	then	{	Sent(4725, 2, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(Color1, 3, 2)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not 4725=no) then NextStep(3, 2, 4725) else NextStep(3, 2) else if B(not 4725=no) then NextStep(3, 2, 4725) else NextStep(3, 2); if B(not 4725=no) then Sent(4725, 2, open, 13); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(Color1, 3, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not 4725=no)
							then	{	NextStep(3, 2, 4725)
								}
							else	{	NextStep(3, 2)
								}
						}
				}
			else	{	if	B(not 4725=no)
					then	{	NextStep(3, 2, 4725)
						}
					else	{	NextStep(3, 2)
						}
				}
		};
	if	B(not 4725=no)
	then	{	Sent(4725, 2, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(blue, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not 4725=no)
					then	{	NextStep(3, 2, 4725)
						}
					else	{	NextStep(3, 2)
						}
				}
		}
	else	{	if	B(not 4725=no)
			then	{	NextStep(3, 2, 4725)
				}
			else	{	NextStep(3, 2)
				}
		};
	if	B(not 4725=no)
	then	{	Sent(4725, 2, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(blue, V2))) then if B(700>V2) then if B(not 4725=no) then NextStep(3, 2, 4725) else NextStep(3, 2) else if B(not 4725=no) then NextStep(3, 2, 4725) else NextStep(3, 2); if B(not 4725=no) then Sent(4725, 2, open, 13); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(blue, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not 4725=no)
					then	{	NextStep(3, 2, 4725)
						}
					else	{	NextStep(3, 2)
						}
				}
		}
	else	{	if	B(not 4725=no)
			then	{	NextStep(3, 2, 4725)
				}
			else	{	NextStep(3, 2)
				}
		};
	if	B(not 4725=no)
	then	{	Sent(4725, 2, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(700>100)
	then	{	if	B(not 4725=no)
			then	{	NextStep(3, 2, 4725)
				}
			else	{	NextStep(3, 2)
				}
		};
	if	B(not 4725=no)
	then	{	Sent(4725, 2, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(700>100) then if B(not 4725=no) then NextStep(3, 2, 4725) else NextStep(3, 2); if B(not 4725=no) then Sent(4725, 2, open, 13); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(700>100)
	then	{	if	B(not 4725=no)
			then	{	NextStep(3, 2, 4725)
				}
			else	{	NextStep(3, 2)
				}
		};
	if	B(not 4725=no)
	then	{	Sent(4725, 2, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 4725=no)
	then	{	NextStep(3, 2, 4725)
		}
	else	{	NextStep(3, 2)
		};
	if	B(not 4725=no)
	then	{	Sent(4725, 2, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 4725=no) then NextStep(3, 2, 4725) else NextStep(3, 2); if B(not 4725=no) then Sent(4725, 2, open, 13); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 4725=no)
	then	{	NextStep(3, 2, 4725)
		}
	else	{	NextStep(3, 2)
		};
	if	B(not 4725=no)
	then	{	Sent(4725, 2, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NextStep(3, 2, 4725);
	if	B(not 4725=no)
	then	{	Sent(4725, 2, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NextStep(3, 2, 4725); if B(not 4725=no) then Sent(4725, 2, open, 13); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NextStep(3, 2, 4725);
	if	B(not 4725=no)
	then	{	Sent(4725, 2, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not 4725=no)
	then	{	Sent(4725, 2, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not 4725=no) then Sent(4725, 2, open, 13); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not 4725=no)
	then	{	Sent(4725, 2, open, 13)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	Sent(4725, 2, open, 13);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[Sent(4725, 2, open, 13); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	Sent(4725, 2, open, 13);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>13+5) then {NoNextStep(3, 2, 4725); ReceivedMessage(noresponse, 4725)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>13+5) then {NoNextStep(3, 2, 4725); ReceivedMessage(noresponse, 4725)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>13+5) then {NoNextStep(3, 2, 4725); ReceivedMessage(noresponse, 4725)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


org notification: Proposal [id=2571, agent=a20, agent2=a20, clock=15, time=2015-05-27 15:22:56.373]
org notification: Proposal [id=2571, agent=a20, agent2=a20, clock=15, time=2015-05-27 15:22:56.373]
[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>13+5) then {NoNextStep(3, 2, 4725); ReceivedMessage(noresponse, 4725)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>13+5) then {NoNextStep(3, 2, 4725); ReceivedMessage(noresponse, 4725)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>13+5) then {NoNextStep(3, 2, 4725); ReceivedMessage(noresponse, 4725)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>13+5) then {NoNextStep(3, 2, 4725); ReceivedMessage(noresponse, 4725)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>13+5) then {NoNextStep(3, 2, 4725); ReceivedMessage(noresponse, 4725)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>13+5) then {NoNextStep(3, 2, 4725); ReceivedMessage(noresponse, 4725)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>13+5) then {NoNextStep(3, 2, 4725); ReceivedMessage(noresponse, 4725)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>13+5) then {NoNextStep(3, 2, 4725); ReceivedMessage(noresponse, 4725)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>13+5) then {NoNextStep(3, 2, 4725); ReceivedMessage(noresponse, 4725)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>13+5) then {NoNextStep(3, 2, 4725); ReceivedMessage(noresponse, 4725)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>13+5) then {NoNextStep(3, 2, 4725); ReceivedMessage(noresponse, 4725)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>13+5) then {NoNextStep(3, 2, 4725); ReceivedMessage(noresponse, 4725)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>13+5) then {NoNextStep(3, 2, 4725); ReceivedMessage(noresponse, 4725)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a30[CTAH] moveStepToGoal returns: [4,3]
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Event processed UpdatePosition(4, 3, 15)
Event processed @ctenv(functionToList(proposal(proposal, 0, 4725, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(4, 3, Clock);
	NoNextStep(4, 3);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(4, 3, 15)
},
{	@ctenv(functionToList(proposal(proposal, 0, 4725, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(4, 3, Clock); NoNextStep(4, 3); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdatePosition(4, 3, 15), @ctenv(functionToList(proposal(proposal, 0, 4725, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	B(clock(Clock));
	UpdatePosition(4, 3, Clock);
	NoNextStep(4, 3);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(4, 3, 15)
},
{	@ctenv(functionToList(proposal(proposal, 0, 4725, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@2a88f387
[CTAH] The created APLList : [proposal,0,4725,open]
[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	UpdatePosition(4, 3, 15);
	NoNextStep(4, 3);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,4725,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,0,4725,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,0,4725,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[UpdatePosition(4, 3, 15); NoNextStep(4, 3); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([proposal,0,4725,open])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([proposal,0,4725,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,0,4725,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	UpdatePosition(4, 3, 15);
	NoNextStep(4, 3);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([proposal,0,4725,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,0,4725,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,0,4725,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>13+5) then {NoNextStep(3, 2, 4725); ReceivedMessage(noresponse, 4725)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B([actionresult([proposal,0,4725,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,4725,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([proposal,0,4725,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,0,4725,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([proposal,0,4725,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,0,4725,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B([actionresult([proposal,0,4725,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B([actionresult([proposal,0,4725,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([proposal,0,4725,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 4725, open)
		}
}


[new scheduled]:[if B(proposal=proposal) then ReceivedProposal(0, 4725, open)]
[After]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(0, 4725, open)
		}
}


[Planbase]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(15>13+5) then {NoNextStep(3, 2, 4725); ReceivedMessage(noresponse, 4725)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	ReceivedProposal(0, 4725, open)
}


[new scheduled]:[ReceivedProposal(0, 4725, open)]
[After]:{	ReceivedProposal(0, 4725, open)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[getScoreAfterExchange(2, 4725); if G(at(A, B, C)) then skip else makeResponse(4725, accept)]
[After]:{	getScoreAfterExchange(2, 4725);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(4725, accept)
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


object notification: Time [clock=19, time=2015-05-27 15:22:59.404]
org notification: Time [clock=19, time=2015-05-27 15:22:59.404]
org notification: Time [clock=19, time=2015-05-27 15:22:59.404]
object notification: Time [clock=19, time=2015-05-27 15:22:59.404]
object notification: Time [clock=19, time=2015-05-27 15:22:59.404]
[Planbase]:{	GetScoreAfterExchange(4725, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(4725, accept)
		}
}


[new scheduled]:[GetScoreAfterExchange(4725, yes); if G(at(A, B, C)) then skip else makeResponse(4725, accept)]
[After]:{	GetScoreAfterExchange(4725, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(4725, accept)
		}
}


Event processed UpdateClock(19)
[Planbase]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(19)
}


[new scheduled]:[if B(15>13+5) then {NoNextStep(3, 2, 4725); ReceivedMessage(noresponse, 4725)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(19)]
[After]:{	if	B(15>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(19)
}


Event processed UpdateClock(19)
[Planbase]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(4725, accept)
		}
},
{	UpdateClock(19)
}


[new scheduled]:[if G(at(A, B, C)) then skip else makeResponse(4725, accept), UpdateClock(19)]
[After]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(4725, accept)
		}
},
{	UpdateClock(19)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	makeResponse(4725, accept)
}


[new scheduled]:[makeResponse(4725, accept)]
[After]:{	makeResponse(4725, accept)
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	sendResponse(accept, 4725)
}


[new scheduled]:[sendResponse(accept, 4725)]
[After]:{	sendResponse(accept, 4725)
}


[Planbase]:{	if	B(19>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(19>13+5) then {NoNextStep(3, 2, 4725); ReceivedMessage(noresponse, 4725)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(19>13+5)
	then	{	NoNextStep(3, 2, 4725);
			ReceivedMessage(noresponse, 4725)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(sendResponse(4725, accept),L1,0);
	Sent(accept, 4725)
}


[new scheduled]:[@ctenv(sendResponse(4725, accept),L1,0); Sent(accept, 4725)]
[After]:{	@ctenv(sendResponse(4725, accept),L1,0);
	Sent(accept, 4725)
}


[Planbase]:{	NoNextStep(3, 2, 4725);
	ReceivedMessage(noresponse, 4725);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NoNextStep(3, 2, 4725); ReceivedMessage(noresponse, 4725); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NoNextStep(3, 2, 4725);
	ReceivedMessage(noresponse, 4725);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 0
[MSG] i'm: 0
AGENT : got response to offer
org notification: Response [id=4725, response=accepted, clock=19, time=2015-05-27 15:22:59.96]
org notification: Response [id=4725, response=accepted, clock=19, time=2015-05-27 15:22:59.96]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(message(response, 4725, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	ReceivedMessage(noresponse, 4725);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(response, 4725, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[ReceivedMessage(noresponse, 4725); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(functionToList(message(response, 4725, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	ReceivedMessage(noresponse, 4725);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(functionToList(message(response, 4725, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@422b6605
[CTAH] The created APLList : [response,4725,accept]
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,4725,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,4725,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,4725,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B([actionresult([response,4725,accept])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([response,4725,accept])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([response,4725,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B([actionresult([response,4725,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,4725,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,4725,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(response=response)
	then	{	ReceivedMessage(accept, 4725)
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(response=response) then ReceivedMessage(accept, 4725)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 4725)
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[if G(at(X, Y, V)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0) else if B(tile(neco, X, Y)) then @ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 4725)]
[After]:{	if	G(at(X, Y, V))
	then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	@ctenv(moveStepToGoalTest(neco, X, Y, 8),L1,0)
				}
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(tile(Color1, Xa, Ya)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya) else if B(not ID=no) then NextStep(Xa, Ya, ID) else NextStep(Xa, Ya); if B(not ID=no) then Sent(ID, Agent, open, Clock)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 4725)]
[After]:{	@ctenv(moveStepToGoalTest(neco, 3, 2, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(tile(Color1, Xa, Ya))
			then	{	if	B(prohibition(useColor(Color1, V2)))
					then	{	if	B(700>V2)
							then	{	if	B(not ID=no)
									then	{	NextStep(Xa, Ya, ID)
										}
									else	{	NextStep(Xa, Ya)
										}
								}
						}
					else	{	if	B(not ID=no)
							then	{	NextStep(Xa, Ya, ID)
								}
							else	{	NextStep(Xa, Ya)
								}
						}
				};
			if	B(not ID=no)
			then	{	Sent(ID, Agent, open, Clock)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
}


a10[CTAH] going goal: 3,2 color: neco
object notification: Time [clock=16, time=2015-05-27 15:23:02.677]
org notification: Time [clock=16, time=2015-05-27 15:23:02.677]
object notification: Time [clock=16, time=2015-05-27 15:23:02.677]
object notification: Time [clock=16, time=2015-05-27 15:23:02.677]
org notification: Time [clock=16, time=2015-05-27 15:23:02.677]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(16)
[Planbase]:{	UpdateClock(16)
}


[new scheduled]:[UpdateClock(16)]
[After]:{	UpdateClock(16)
}


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Response [id=2571, response=rejected, clock=16, time=2015-05-27 15:23:05.481]
org notification: Response [id=2571, response=rejected, clock=16, time=2015-05-27 15:23:05.481]
a40[CTAH] paths: 1000
a40[CTAH] path: 0
a40[CTAH] path: Path: [3][3] [3][4]

a40[CTAH] moveStepToGoalTest returns I have chip: [3,4,no,no]
Event processed UpdateClock(19)
Event processed UpdateClock(16)
[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 3, 4))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not no=no)
							then	{	NextStep(3, 4, no)
								}
							else	{	NextStep(3, 4)
								}
						}
				}
			else	{	if	B(not no=no)
					then	{	NextStep(3, 4, no)
						}
					else	{	NextStep(3, 4)
						}
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(19)
},
{	UpdateClock(16)
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 3, 4)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not no=no) then NextStep(3, 4, no) else NextStep(3, 4) else if B(not no=no) then NextStep(3, 4, no) else NextStep(3, 4); if B(not no=no) then Sent(no, no, open, Clock); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdateClock(19), UpdateClock(16)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 3, 4))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not no=no)
							then	{	NextStep(3, 4, no)
								}
							else	{	NextStep(3, 4)
								}
						}
				}
			else	{	if	B(not no=no)
					then	{	NextStep(3, 4, no)
						}
					else	{	NextStep(3, 4)
						}
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdateClock(19)
},
{	UpdateClock(16)
}


[Planbase]:{	if	B(tile(Color1, 3, 4))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not no=no)
							then	{	NextStep(3, 4, no)
								}
							else	{	NextStep(3, 4)
								}
						}
				}
			else	{	if	B(not no=no)
					then	{	NextStep(3, 4, no)
						}
					else	{	NextStep(3, 4)
						}
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 15)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(Color1, 3, 4)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not no=no) then NextStep(3, 4, no) else NextStep(3, 4) else if B(not no=no) then NextStep(3, 4, no) else NextStep(3, 4); if B(not no=no) then Sent(no, no, open, 15); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(tile(Color1, 3, 4))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not no=no)
							then	{	NextStep(3, 4, no)
								}
							else	{	NextStep(3, 4)
								}
						}
				}
			else	{	if	B(not no=no)
					then	{	NextStep(3, 4, no)
						}
					else	{	NextStep(3, 4)
						}
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 15)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not no=no)
					then	{	NextStep(3, 4, no)
						}
					else	{	NextStep(3, 4)
						}
				}
		}
	else	{	if	B(not no=no)
			then	{	NextStep(3, 4, no)
				}
			else	{	NextStep(3, 4)
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 15)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(yellow, V2))) then if B(700>V2) then if B(not no=no) then NextStep(3, 4, no) else NextStep(3, 4) else if B(not no=no) then NextStep(3, 4, no) else NextStep(3, 4); if B(not no=no) then Sent(no, no, open, 15); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(prohibition(useColor(yellow, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not no=no)
					then	{	NextStep(3, 4, no)
						}
					else	{	NextStep(3, 4)
						}
				}
		}
	else	{	if	B(not no=no)
			then	{	NextStep(3, 4, no)
				}
			else	{	NextStep(3, 4)
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 15)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(3, 4, no)
		}
	else	{	NextStep(3, 4)
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 15)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not no=no) then NextStep(3, 4, no) else NextStep(3, 4); if B(not no=no) then Sent(no, no, open, 15); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not no=no)
	then	{	NextStep(3, 4, no)
		}
	else	{	NextStep(3, 4)
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 15)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	NextStep(3, 4);
	if	B(not no=no)
	then	{	Sent(no, no, open, 15)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[NextStep(3, 4); if B(not no=no) then Sent(no, no, open, 15); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	NextStep(3, 4);
	if	B(not no=no)
	then	{	Sent(no, no, open, 15)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(not no=no)
	then	{	Sent(no, no, open, 15)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(not no=no) then Sent(no, no, open, 15); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(not no=no)
	then	{	Sent(no, no, open, 15)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 3, 4),L2,0);
	if	B(L2=[actionresult([3,4])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 4, Clock)
		};
	NoNextStep(3, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 3, 4),L2,0); if B(L2=[actionresult([3,4])]) then {B(clock(Clock)); UpdatePosition(3, 4, Clock)}; NoNextStep(3, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoal(neco, 3, 4),L2,0);
	if	B(L2=[actionresult([3,4])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 4, Clock)
		};
	NoNextStep(3, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


a40[CTAH] moveStepToGoal returns: false
object notification: Position [subject=a40, id=null, cell=Cell [x=3, y=4], time=2015-05-27 15:23:06.142, clock=16]
org notification: Position [subject=a40, id=null, cell=Cell [x=3, y=4], time=2015-05-27 15:23:06.142, clock=16]
org notification: Position [subject=a40, id=null, cell=Cell [x=3, y=4], time=2015-05-27 15:23:06.142, clock=16]
Event processed UpdatePosition(3, 4, 16)
[Planbase]:{	NoNextStep(3, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(3, 4, 16)
}


[new scheduled]:[NoNextStep(3, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), UpdatePosition(3, 4, 16)]
[After]:{	NoNextStep(3, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	UpdatePosition(3, 4, 16)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[]
[After]:


org notification: Time [clock=20, time=2015-05-27 15:23:09.409]
org notification: Time [clock=20, time=2015-05-27 15:23:09.409]
object notification: Time [clock=20, time=2015-05-27 15:23:09.409]
object notification: Time [clock=20, time=2015-05-27 15:23:09.409]
object notification: Time [clock=20, time=2015-05-27 15:23:09.409]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(20)
Event processed UpdateClock(20)
[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


a10[CTAH] paths: 1000
Need to wait 3 more seconds
object notification: Time [clock=17, time=2015-05-27 15:23:12.68]
object notification: Time [clock=17, time=2015-05-27 15:23:12.68]
org notification: Time [clock=17, time=2015-05-27 15:23:12.68]
org notification: Time [clock=17, time=2015-05-27 15:23:12.68]
object notification: Time [clock=17, time=2015-05-27 15:23:12.68]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(17)
Event processed UpdateClock(17)
[Planbase]:{	UpdateClock(17)
}


[new scheduled]:[UpdateClock(17)]
[After]:{	UpdateClock(17)
}


[Planbase]:{	UpdateClock(17)
}


[new scheduled]:[UpdateClock(17)]
[After]:{	UpdateClock(17)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 2
[MSG] i'm: 2
Received a proposal creating event
org notification: Proposal [id=7281, agent=a20, agent2=a30, clock=17, time=2015-05-27 15:23:13.195]
org notification: Proposal [id=7281, agent=a20, agent2=a30, clock=17, time=2015-05-27 15:23:13.195]
[Planbase]:


[new scheduled]:[]
[After]:


Event processed @ctenv(functionToList(proposal(proposal, 1, 7281, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(proposal(proposal, 1, 7281, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(proposal(proposal, 1, 7281, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(proposal(proposal, 1, 7281, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@41ac387d
[CTAH] The created APLList : [proposal,1,7281,open]
[Planbase]:{	if	B([actionresult([proposal,1,7281,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,1,7281,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,1,7281,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B([actionresult([proposal,1,7281,open])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([proposal,1,7281,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,7281,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([proposal,1,7281,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,1,7281,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,1,7281,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([proposal,1,7281,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,7281,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([proposal,1,7281,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,7281,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([proposal,1,7281,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,7281,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([proposal,1,7281,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[if B([actionresult([proposal,1,7281,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([proposal,1,7281,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 7281, open)
		}
}


[new scheduled]:[if B(proposal=proposal) then ReceivedProposal(1, 7281, open)]
[After]:{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 7281, open)
		}
}


[Planbase]:{	ReceivedProposal(1, 7281, open)
}


[new scheduled]:[ReceivedProposal(1, 7281, open)]
[After]:{	ReceivedProposal(1, 7281, open)
}


[Planbase]:


[new scheduled]:[getScoreAfterExchange(2, 7281); if G(at(A, B, C)) then skip else makeResponse(7281, accept)]
[After]:{	getScoreAfterExchange(2, 7281);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(7281, accept)
		}
}


[Planbase]:{	GetScoreAfterExchange(7281, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(7281, accept)
		}
}


[new scheduled]:[GetScoreAfterExchange(7281, yes); if G(at(A, B, C)) then skip else makeResponse(7281, accept)]
[After]:{	GetScoreAfterExchange(7281, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(7281, accept)
		}
}


[Planbase]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(7281, accept)
		}
}


[new scheduled]:[if G(at(A, B, C)) then skip else makeResponse(7281, accept)]
[After]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(7281, accept)
		}
}


[Planbase]:{	makeResponse(7281, accept)
}


[new scheduled]:[makeResponse(7281, accept)]
[After]:{	makeResponse(7281, accept)
}


[Planbase]:{	sendResponse(accept, 7281)
}


[new scheduled]:[sendResponse(accept, 7281)]
[After]:{	sendResponse(accept, 7281)
}


[Planbase]:{	@ctenv(sendResponse(7281, accept),L1,0);
	Sent(accept, 7281)
}


[new scheduled]:[@ctenv(sendResponse(7281, accept),L1,0); Sent(accept, 7281)]
[After]:{	@ctenv(sendResponse(7281, accept),L1,0);
	Sent(accept, 7281)
}


org notification: Response [id=7281, response=accepted, clock=17, time=2015-05-27 15:23:13.674]
org notification: Response [id=7281, response=accepted, clock=17, time=2015-05-27 15:23:13.674]
[Planbase]:


[new scheduled]:[]
[After]:


a10[CTAH] path: 0
a10[CTAH] path: Path: [2][2] [3][2]

a10[CTAH] moveStepToGoalTest returns I have chip: [3,2,no,no]
Event processed UpdateClock(16)
Event processed UpdateClock(20)
Event processed UpdateClock(17)
[Planbase]:{	B(clock(Clock));
	if	B(tile(Color1, 3, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not no=no)
							then	{	NextStep(3, 2, no)
								}
							else	{	NextStep(3, 2)
								}
						}
				}
			else	{	if	B(not no=no)
					then	{	NextStep(3, 2, no)
						}
					else	{	NextStep(3, 2)
						}
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(16)
},
{	UpdateClock(20)
},
{	UpdateClock(17)
}


[new scheduled]:[B(clock(Clock)); if B(tile(Color1, 3, 2)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not no=no) then NextStep(3, 2, no) else NextStep(3, 2) else if B(not no=no) then NextStep(3, 2, no) else NextStep(3, 2); if B(not no=no) then Sent(no, no, open, Clock); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 4725), UpdateClock(16), UpdateClock(20), UpdateClock(17)]
[After]:{	B(clock(Clock));
	if	B(tile(Color1, 3, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not no=no)
							then	{	NextStep(3, 2, no)
								}
							else	{	NextStep(3, 2)
								}
						}
				}
			else	{	if	B(not no=no)
					then	{	NextStep(3, 2, no)
						}
					else	{	NextStep(3, 2)
						}
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, Clock)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(16)
},
{	UpdateClock(20)
},
{	UpdateClock(17)
}


[Planbase]:{	if	B(tile(Color1, 3, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not no=no)
							then	{	NextStep(3, 2, no)
								}
							else	{	NextStep(3, 2)
								}
						}
				}
			else	{	if	B(not no=no)
					then	{	NextStep(3, 2, no)
						}
					else	{	NextStep(3, 2)
						}
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 19)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[if B(tile(Color1, 3, 2)) then if B(prohibition(useColor(Color1, V2))) then if B(700>V2) then if B(not no=no) then NextStep(3, 2, no) else NextStep(3, 2) else if B(not no=no) then NextStep(3, 2, no) else NextStep(3, 2); if B(not no=no) then Sent(no, no, open, 19); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 4725)]
[After]:{	if	B(tile(Color1, 3, 2))
	then	{	if	B(prohibition(useColor(Color1, V2)))
			then	{	if	B(700>V2)
					then	{	if	B(not no=no)
							then	{	NextStep(3, 2, no)
								}
							else	{	NextStep(3, 2)
								}
						}
				}
			else	{	if	B(not no=no)
					then	{	NextStep(3, 2, no)
						}
					else	{	NextStep(3, 2)
						}
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 19)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	if	B(prohibition(useColor(blue, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not no=no)
					then	{	NextStep(3, 2, no)
						}
					else	{	NextStep(3, 2)
						}
				}
		}
	else	{	if	B(not no=no)
			then	{	NextStep(3, 2, no)
				}
			else	{	NextStep(3, 2)
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 19)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[if B(prohibition(useColor(blue, V2))) then if B(700>V2) then if B(not no=no) then NextStep(3, 2, no) else NextStep(3, 2) else if B(not no=no) then NextStep(3, 2, no) else NextStep(3, 2); if B(not no=no) then Sent(no, no, open, 19); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 4725)]
[After]:{	if	B(prohibition(useColor(blue, V2)))
	then	{	if	B(700>V2)
			then	{	if	B(not no=no)
					then	{	NextStep(3, 2, no)
						}
					else	{	NextStep(3, 2)
						}
				}
		}
	else	{	if	B(not no=no)
			then	{	NextStep(3, 2, no)
				}
			else	{	NextStep(3, 2)
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 19)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	if	B(700>100)
	then	{	if	B(not no=no)
			then	{	NextStep(3, 2, no)
				}
			else	{	NextStep(3, 2)
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 19)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[if B(700>100) then if B(not no=no) then NextStep(3, 2, no) else NextStep(3, 2); if B(not no=no) then Sent(no, no, open, 19); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 4725)]
[After]:{	if	B(700>100)
	then	{	if	B(not no=no)
			then	{	NextStep(3, 2, no)
				}
			else	{	NextStep(3, 2)
				}
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 19)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	if	B(not no=no)
	then	{	NextStep(3, 2, no)
		}
	else	{	NextStep(3, 2)
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 19)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[if B(not no=no) then NextStep(3, 2, no) else NextStep(3, 2); if B(not no=no) then Sent(no, no, open, 19); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 4725)]
[After]:{	if	B(not no=no)
	then	{	NextStep(3, 2, no)
		}
	else	{	NextStep(3, 2)
		};
	if	B(not no=no)
	then	{	Sent(no, no, open, 19)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	NextStep(3, 2);
	if	B(not no=no)
	then	{	Sent(no, no, open, 19)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[NextStep(3, 2); if B(not no=no) then Sent(no, no, open, 19); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 4725)]
[After]:{	NextStep(3, 2);
	if	B(not no=no)
	then	{	Sent(no, no, open, 19)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	if	B(not no=no)
	then	{	Sent(no, no, open, 19)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[if B(not no=no) then Sent(no, no, open, 19); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 4725)]
[After]:{	if	B(not no=no)
	then	{	Sent(no, no, open, 19)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 4725)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 4725)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 3, 2),L2,0);
	if	B(L2=[actionresult([3,2])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 2, Clock)
		};
	NoNextStep(3, 2);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 3, 2),L2,0); if B(L2=[actionresult([3,2])]) then {B(clock(Clock)); UpdatePosition(3, 2, Clock)}; NoNextStep(3, 2); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 4725)]
[After]:{	@ctenv(moveStepToGoal(neco, 3, 2),L2,0);
	if	B(L2=[actionresult([3,2])])
	then	{	B(clock(Clock));
			UpdatePosition(3, 2, Clock)
		};
	NoNextStep(3, 2);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
}


Need to wait 4 more seconds
org notification: Position [subject=a10, id=null, cell=Cell [x=3, y=2], time=2015-05-27 15:23:14.078, clock=17]
org notification: Position [subject=a10, id=null, cell=Cell [x=3, y=2], time=2015-05-27 15:23:14.078, clock=17]
object notification: Position [subject=a10, id=null, cell=Cell [x=3, y=2], time=2015-05-27 15:23:14.078, clock=17]
object notification: Points [subject=a10, time=2015-05-27 15:23:14.087, clock=17, value=900, id=null]
object notification: Points [subject=a10, time=2015-05-27 15:23:14.087, clock=17, value=900, id=null]
org notification: Position [subject=a20, id=null, cell=Cell [x=0, y=5], time=2015-05-27 15:23:17.244, clock=17]
org notification: Position [subject=a20, id=null, cell=Cell [x=0, y=5], time=2015-05-27 15:23:17.244, clock=17]
a10[CTAH] moveStepToGoal returns: [3,2]
Event processed UpdatePosition(3, 2, 17)
Event processed UpdatePoints(900)
Event processed UpdatePoints(900)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(3, 2, Clock);
	NoNextStep(3, 2);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
},
{	UpdatePosition(3, 2, 17)
},
{	UpdatePoints(900)
},
{	UpdatePoints(900)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(3, 2, Clock); NoNextStep(3, 2); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 4725), UpdatePosition(3, 2, 17), UpdatePoints(900), UpdatePoints(900)]
[After]:{	B(clock(Clock));
	UpdatePosition(3, 2, Clock);
	NoNextStep(3, 2);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
},
{	UpdatePosition(3, 2, 17)
},
{	UpdatePoints(900)
},
{	UpdatePoints(900)
}


[Planbase]:{	UpdatePosition(3, 2, 17);
	NoNextStep(3, 2);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[UpdatePosition(3, 2, 17); NoNextStep(3, 2); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), ReceivedMessage(accept, 4725)]
[After]:{	UpdatePosition(3, 2, 17);
	NoNextStep(3, 2);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=21, time=2015-05-27 15:23:19.411]
org notification: Time [clock=21, time=2015-05-27 15:23:19.411]
object notification: Time [clock=21, time=2015-05-27 15:23:19.411]
org notification: Time [clock=21, time=2015-05-27 15:23:19.411]
object notification: Time [clock=21, time=2015-05-27 15:23:19.411]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(21)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(21)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(21)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(21)
}


Event processed UpdateClock(21)
Event processed UpdateClock(21)
[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=18, time=2015-05-27 15:23:22.683]
org notification: Time [clock=18, time=2015-05-27 15:23:22.683]
object notification: Time [clock=18, time=2015-05-27 15:23:22.683]
org notification: Time [clock=18, time=2015-05-27 15:23:22.683]
object notification: Time [clock=18, time=2015-05-27 15:23:22.683]
[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(18)
Event processed UpdateClock(18)
Event processed UpdateClock(18)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(18)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(18)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(18)
}


[Planbase]:{	UpdateClock(18)
}


[new scheduled]:[UpdateClock(18)]
[After]:{	UpdateClock(18)
}


[Planbase]:{	UpdateClock(18)
}


[new scheduled]:[UpdateClock(18)]
[After]:{	UpdateClock(18)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=22, time=2015-05-27 15:23:29.413]
object notification: Time [clock=22, time=2015-05-27 15:23:29.413]
object notification: Time [clock=22, time=2015-05-27 15:23:29.413]
org notification: Time [clock=22, time=2015-05-27 15:23:29.413]
org notification: Time [clock=22, time=2015-05-27 15:23:29.413]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(22)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(22)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(22)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(22)
}


Event processed UpdateClock(22)
Event processed UpdateClock(22)
[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=19, time=2015-05-27 15:23:32.686]
object notification: Time [clock=19, time=2015-05-27 15:23:32.686]
org notification: Time [clock=19, time=2015-05-27 15:23:32.686]
object notification: Time [clock=19, time=2015-05-27 15:23:32.686]
org notification: Time [clock=19, time=2015-05-27 15:23:32.686]
[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(19)
Event processed UpdateClock(19)
Event processed UpdateClock(19)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(19)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(19)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(19)
}


[Planbase]:{	UpdateClock(19)
}


[new scheduled]:[UpdateClock(19)]
[After]:{	UpdateClock(19)
}


[Planbase]:{	UpdateClock(19)
}


[new scheduled]:[UpdateClock(19)]
[After]:{	UpdateClock(19)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


org notification: Time [clock=23, time=2015-05-27 15:23:39.415]
org notification: Time [clock=23, time=2015-05-27 15:23:39.415]
object notification: Time [clock=23, time=2015-05-27 15:23:39.415]
object notification: Time [clock=23, time=2015-05-27 15:23:39.415]
object notification: Time [clock=23, time=2015-05-27 15:23:39.415]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(23)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(23)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(23)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(23)
}


Event processed UpdateClock(23)
Event processed UpdateClock(23)
[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=1150, agent=a20, agent2=a10, clock=23, time=2015-05-27 15:23:40.223]
org notification: Proposal [id=1150, agent=a20, agent2=a10, clock=23, time=2015-05-27 15:23:40.223]
[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


Event processed @ctenv(functionToList(proposal(proposal, 1, 1150, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	@ctenv(functionToList(proposal(proposal, 1, 1150, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[ReceivedMessage(accept, 4725), @ctenv(functionToList(proposal(proposal, 1, 1150, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	@ctenv(functionToList(proposal(proposal, 1, 1150, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@61c9603
[CTAH] The created APLList : [proposal,1,1150,open]
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	if	B([actionresult([proposal,1,1150,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,1,1150,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,1,1150,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[ReceivedMessage(accept, 4725), if B([actionresult([proposal,1,1150,open])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([proposal,1,1150,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,1150,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	if	B([actionresult([proposal,1,1150,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,1,1150,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,1,1150,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	if	B([actionresult([proposal,1,1150,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,1150,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[ReceivedMessage(accept, 4725), if B([actionresult([proposal,1,1150,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,1150,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	if	B([actionresult([proposal,1,1150,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,1150,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	if	B([actionresult([proposal,1,1150,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[ReceivedMessage(accept, 4725), if B([actionresult([proposal,1,1150,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	if	B([actionresult([proposal,1,1150,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 1150, open)
		}
}


[new scheduled]:[ReceivedMessage(accept, 4725), if B(proposal=proposal) then ReceivedProposal(1, 1150, open)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 1150, open)
		}
}


[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	ReceivedProposal(1, 1150, open)
}


[new scheduled]:[ReceivedMessage(accept, 4725), ReceivedProposal(1, 1150, open)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	ReceivedProposal(1, 1150, open)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[getScoreAfterExchange(0, 1150); if G(at(A, B, C)) then skip else makeResponse(1150, accept), ReceivedMessage(accept, 4725)]
[After]:{	getScoreAfterExchange(0, 1150);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(1150, accept)
		}
},
{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	GetScoreAfterExchange(1150, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(1150, accept)
		}
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[GetScoreAfterExchange(1150, yes); if G(at(A, B, C)) then skip else makeResponse(1150, accept), ReceivedMessage(accept, 4725)]
[After]:{	GetScoreAfterExchange(1150, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(1150, accept)
		}
},
{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(1150, accept)
		}
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[if G(at(A, B, C)) then skip else makeResponse(1150, accept), ReceivedMessage(accept, 4725)]
[After]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(1150, accept)
		}
},
{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	makeResponse(1150, accept)
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[makeResponse(1150, accept), ReceivedMessage(accept, 4725)]
[After]:{	makeResponse(1150, accept)
},
{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	sendResponse(accept, 1150)
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[sendResponse(accept, 1150), ReceivedMessage(accept, 4725)]
[After]:{	sendResponse(accept, 1150)
},
{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	@ctenv(sendResponse(1150, accept),L1,0);
	Sent(accept, 1150)
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[@ctenv(sendResponse(1150, accept),L1,0); Sent(accept, 1150), ReceivedMessage(accept, 4725)]
[After]:{	@ctenv(sendResponse(1150, accept),L1,0);
	Sent(accept, 1150)
},
{	ReceivedMessage(accept, 4725)
}


org notification: Response [id=1150, response=accepted, clock=23, time=2015-05-27 15:23:40.735]
org notification: Response [id=1150, response=accepted, clock=23, time=2015-05-27 15:23:40.735]
[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=20, time=2015-05-27 15:23:42.688]
org notification: Time [clock=20, time=2015-05-27 15:23:42.688]
object notification: Time [clock=20, time=2015-05-27 15:23:42.688]
object notification: Time [clock=20, time=2015-05-27 15:23:42.688]
org notification: Time [clock=20, time=2015-05-27 15:23:42.688]
[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(20)
Event processed UpdateClock(20)
Event processed UpdateClock(20)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(20)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(20)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(20)
}


[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


[Planbase]:{	UpdateClock(20)
}


[new scheduled]:[UpdateClock(20)]
[After]:{	UpdateClock(20)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=24, time=2015-05-27 15:23:49.417]
object notification: Time [clock=24, time=2015-05-27 15:23:49.417]
object notification: Time [clock=24, time=2015-05-27 15:23:49.417]
org notification: Time [clock=24, time=2015-05-27 15:23:49.417]
org notification: Time [clock=24, time=2015-05-27 15:23:49.417]
Event processed UpdateClock(24)
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(24)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(24)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(24)
}


Event processed UpdateClock(24)
Event processed UpdateClock(24)
[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


org notification: Time [clock=21, time=2015-05-27 15:23:52.691]
org notification: Time [clock=21, time=2015-05-27 15:23:52.691]
object notification: Time [clock=21, time=2015-05-27 15:23:52.691]
object notification: Time [clock=21, time=2015-05-27 15:23:52.691]
object notification: Time [clock=21, time=2015-05-27 15:23:52.691]
[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[Planbase]:


[new scheduled]:[]
[After]:


[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(21)
Event processed UpdateClock(21)
Event processed UpdateClock(21)
[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(21)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(21)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(21)
}


[Planbase]:{	UpdateClock(21)
}


[new scheduled]:[UpdateClock(21)]
[After]:{	UpdateClock(21)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


org notification: Time [clock=25, time=2015-05-27 15:23:59.42]
org notification: Time [clock=25, time=2015-05-27 15:23:59.42]
object notification: Time [clock=25, time=2015-05-27 15:23:59.42]
object notification: Time [clock=25, time=2015-05-27 15:23:59.42]
object notification: Time [clock=25, time=2015-05-27 15:23:59.42]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(25)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(25)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(25)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(25)
}


Event processed UpdateClock(25)
Event processed UpdateClock(25)
[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


org notification: Time [clock=22, time=2015-05-27 15:24:02.694]
object notification: Time [clock=22, time=2015-05-27 15:24:02.694]
object notification: Time [clock=22, time=2015-05-27 15:24:02.694]
org notification: Time [clock=22, time=2015-05-27 15:24:02.694]
object notification: Time [clock=22, time=2015-05-27 15:24:02.694]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(22)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(22)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(22)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(22)
}


Event processed UpdateClock(22)
Event processed UpdateClock(22)
[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:{	UpdateClock(22)
}


[new scheduled]:[UpdateClock(22)]
[After]:{	UpdateClock(22)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


org notification: Time [clock=26, time=2015-05-27 15:24:09.422]
object notification: Time [clock=26, time=2015-05-27 15:24:09.422]
org notification: Time [clock=26, time=2015-05-27 15:24:09.422]
object notification: Time [clock=26, time=2015-05-27 15:24:09.422]
object notification: Time [clock=26, time=2015-05-27 15:24:09.422]
[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(26)
Event processed UpdateClock(26)
Event processed UpdateClock(26)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(26)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(26)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(26)
}


[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=23, time=2015-05-27 15:24:12.697]
object notification: Time [clock=23, time=2015-05-27 15:24:12.697]
org notification: Time [clock=23, time=2015-05-27 15:24:12.697]
object notification: Time [clock=23, time=2015-05-27 15:24:12.697]
org notification: Time [clock=23, time=2015-05-27 15:24:12.697]
[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(23)
Event processed UpdateClock(23)
Event processed UpdateClock(23)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(23)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(23)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(23)
}


[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:{	UpdateClock(23)
}


[new scheduled]:[UpdateClock(23)]
[After]:{	UpdateClock(23)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=27, time=2015-05-27 15:24:19.423]
object notification: Time [clock=27, time=2015-05-27 15:24:19.423]
object notification: Time [clock=27, time=2015-05-27 15:24:19.423]
org notification: Time [clock=27, time=2015-05-27 15:24:19.423]
org notification: Time [clock=27, time=2015-05-27 15:24:19.423]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(27)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(27)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(27)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(27)
}


Event processed UpdateClock(27)
Event processed UpdateClock(27)
[Planbase]:{	UpdateClock(27)
}


[new scheduled]:[UpdateClock(27)]
[After]:{	UpdateClock(27)
}


[Planbase]:{	UpdateClock(27)
}


[new scheduled]:[UpdateClock(27)]
[After]:{	UpdateClock(27)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


org notification: Time [clock=24, time=2015-05-27 15:24:22.699]
org notification: Time [clock=24, time=2015-05-27 15:24:22.699]
object notification: Time [clock=24, time=2015-05-27 15:24:22.699]
object notification: Time [clock=24, time=2015-05-27 15:24:22.699]
object notification: Time [clock=24, time=2015-05-27 15:24:22.699]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(24)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(24)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(24)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(24)
}


Event processed UpdateClock(24)
Event processed UpdateClock(24)
[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:{	UpdateClock(24)
}


[new scheduled]:[UpdateClock(24)]
[After]:{	UpdateClock(24)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=28, time=2015-05-27 15:24:29.426]
object notification: Time [clock=28, time=2015-05-27 15:24:29.426]
org notification: Time [clock=28, time=2015-05-27 15:24:29.426]
org notification: Time [clock=28, time=2015-05-27 15:24:29.426]
object notification: Time [clock=28, time=2015-05-27 15:24:29.426]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(28)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(28)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(28)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(28)
}


Event processed UpdateClock(28)
Event processed UpdateClock(28)
[Planbase]:{	UpdateClock(28)
}


[new scheduled]:[UpdateClock(28)]
[After]:{	UpdateClock(28)
}


[Planbase]:{	UpdateClock(28)
}


[new scheduled]:[UpdateClock(28)]
[After]:{	UpdateClock(28)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


org notification: Time [clock=25, time=2015-05-27 15:24:32.702]
org notification: Time [clock=25, time=2015-05-27 15:24:32.702]
object notification: Time [clock=25, time=2015-05-27 15:24:32.702]
object notification: Time [clock=25, time=2015-05-27 15:24:32.702]
object notification: Time [clock=25, time=2015-05-27 15:24:32.702]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(25)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(25)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(25)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(25)
}


Event processed UpdateClock(25)
Event processed UpdateClock(25)
[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:{	UpdateClock(25)
}


[new scheduled]:[UpdateClock(25)]
[After]:{	UpdateClock(25)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=29, time=2015-05-27 15:24:39.429]
object notification: Time [clock=29, time=2015-05-27 15:24:39.429]
org notification: Time [clock=29, time=2015-05-27 15:24:39.429]
org notification: Time [clock=29, time=2015-05-27 15:24:39.429]
object notification: Time [clock=29, time=2015-05-27 15:24:39.429]
Event processed UpdateClock(29)
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(29)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(29)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(29)
}


Event processed UpdateClock(29)
Event processed UpdateClock(29)
[Planbase]:{	UpdateClock(29)
}


[new scheduled]:[UpdateClock(29)]
[After]:{	UpdateClock(29)
}


[Planbase]:{	UpdateClock(29)
}


[new scheduled]:[UpdateClock(29)]
[After]:{	UpdateClock(29)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=26, time=2015-05-27 15:24:42.704]
object notification: Time [clock=26, time=2015-05-27 15:24:42.704]
object notification: Time [clock=26, time=2015-05-27 15:24:42.704]
org notification: Time [clock=26, time=2015-05-27 15:24:42.704]
org notification: Time [clock=26, time=2015-05-27 15:24:42.704]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(26)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(26)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(26)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(26)
}


Event processed UpdateClock(26)
Event processed UpdateClock(26)
[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


[Planbase]:{	UpdateClock(26)
}


[new scheduled]:[UpdateClock(26)]
[After]:{	UpdateClock(26)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=30, time=2015-05-27 15:24:49.432]
org notification: Time [clock=30, time=2015-05-27 15:24:49.432]
org notification: Time [clock=30, time=2015-05-27 15:24:49.432]
object notification: Time [clock=30, time=2015-05-27 15:24:49.432]
object notification: Time [clock=30, time=2015-05-27 15:24:49.432]
Event processed UpdateClock(30)
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(30)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(30)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(30)
}


Event processed UpdateClock(30)
Event processed UpdateClock(30)
[Planbase]:{	UpdateClock(30)
}


[new scheduled]:[UpdateClock(30)]
[After]:{	UpdateClock(30)
}


[Planbase]:{	UpdateClock(30)
}


[new scheduled]:[UpdateClock(30)]
[After]:{	UpdateClock(30)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=27, time=2015-05-27 15:24:52.707]
object notification: Time [clock=27, time=2015-05-27 15:24:52.707]
object notification: Time [clock=27, time=2015-05-27 15:24:52.707]
org notification: Time [clock=27, time=2015-05-27 15:24:52.707]
org notification: Time [clock=27, time=2015-05-27 15:24:52.707]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(27)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(27)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(27)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(27)
}


Event processed UpdateClock(27)
Event processed UpdateClock(27)
[Planbase]:{	UpdateClock(27)
}


[new scheduled]:[UpdateClock(27)]
[After]:{	UpdateClock(27)
}


[Planbase]:{	UpdateClock(27)
}


[new scheduled]:[UpdateClock(27)]
[After]:{	UpdateClock(27)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
org notification: Proposal [id=5477, agent=a20, agent2=a10, clock=27, time=2015-05-27 15:24:54.905]
org notification: Proposal [id=5477, agent=a20, agent2=a10, clock=27, time=2015-05-27 15:24:54.905]
Received a proposal creating event
Event processed @ctenv(functionToList(proposal(proposal, 1, 5477, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	@ctenv(functionToList(proposal(proposal, 1, 5477, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[ReceivedMessage(accept, 4725), @ctenv(functionToList(proposal(proposal, 1, 5477, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	@ctenv(functionToList(proposal(proposal, 1, 5477, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@77af06d0
[CTAH] The created APLList : [proposal,1,5477,open]
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	if	B([actionresult([proposal,1,5477,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,1,5477,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,1,5477,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[ReceivedMessage(accept, 4725), if B([actionresult([proposal,1,5477,open])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([proposal,1,5477,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,5477,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	if	B([actionresult([proposal,1,5477,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,1,5477,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,1,5477,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	if	B([actionresult([proposal,1,5477,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,5477,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[ReceivedMessage(accept, 4725), if B([actionresult([proposal,1,5477,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,5477,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	if	B([actionresult([proposal,1,5477,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,5477,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	if	B([actionresult([proposal,1,5477,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[ReceivedMessage(accept, 4725), if B([actionresult([proposal,1,5477,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	if	B([actionresult([proposal,1,5477,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 5477, open)
		}
}


[new scheduled]:[ReceivedMessage(accept, 4725), if B(proposal=proposal) then ReceivedProposal(1, 5477, open)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 5477, open)
		}
}


[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	ReceivedProposal(1, 5477, open)
}


[new scheduled]:[ReceivedMessage(accept, 4725), ReceivedProposal(1, 5477, open)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	ReceivedProposal(1, 5477, open)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[getScoreAfterExchange(0, 5477); if G(at(A, B, C)) then skip else makeResponse(5477, accept), ReceivedMessage(accept, 4725)]
[After]:{	getScoreAfterExchange(0, 5477);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(5477, accept)
		}
},
{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	GetScoreAfterExchange(5477, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(5477, accept)
		}
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[GetScoreAfterExchange(5477, yes); if G(at(A, B, C)) then skip else makeResponse(5477, accept), ReceivedMessage(accept, 4725)]
[After]:{	GetScoreAfterExchange(5477, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(5477, accept)
		}
},
{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(5477, accept)
		}
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[if G(at(A, B, C)) then skip else makeResponse(5477, accept), ReceivedMessage(accept, 4725)]
[After]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(5477, accept)
		}
},
{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	makeResponse(5477, accept)
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[makeResponse(5477, accept), ReceivedMessage(accept, 4725)]
[After]:{	makeResponse(5477, accept)
},
{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	sendResponse(accept, 5477)
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[sendResponse(accept, 5477), ReceivedMessage(accept, 4725)]
[After]:{	sendResponse(accept, 5477)
},
{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	@ctenv(sendResponse(5477, accept),L1,0);
	Sent(accept, 5477)
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[@ctenv(sendResponse(5477, accept),L1,0); Sent(accept, 5477), ReceivedMessage(accept, 4725)]
[After]:{	@ctenv(sendResponse(5477, accept),L1,0);
	Sent(accept, 5477)
},
{	ReceivedMessage(accept, 4725)
}


org notification: Response [id=5477, response=accepted, clock=27, time=2015-05-27 15:24:55.514]
org notification: Response [id=5477, response=accepted, clock=27, time=2015-05-27 15:24:55.514]
[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


org notification: Time [clock=31, time=2015-05-27 15:24:59.434]
object notification: Time [clock=31, time=2015-05-27 15:24:59.434]
object notification: Time [clock=31, time=2015-05-27 15:24:59.434]
org notification: Time [clock=31, time=2015-05-27 15:24:59.434]
object notification: Time [clock=31, time=2015-05-27 15:24:59.434]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(31)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(31)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(31)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(31)
}


Event processed UpdateClock(31)
Event processed UpdateClock(31)
[Planbase]:{	UpdateClock(31)
}


[new scheduled]:[UpdateClock(31)]
[After]:{	UpdateClock(31)
}


[Planbase]:{	UpdateClock(31)
}


[new scheduled]:[UpdateClock(31)]
[After]:{	UpdateClock(31)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=28, time=2015-05-27 15:25:02.709]
object notification: Time [clock=28, time=2015-05-27 15:25:02.709]
org notification: Time [clock=28, time=2015-05-27 15:25:02.709]
org notification: Time [clock=28, time=2015-05-27 15:25:02.709]
object notification: Time [clock=28, time=2015-05-27 15:25:02.709]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(28)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(28)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(28)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(28)
}


Event processed UpdateClock(28)
Event processed UpdateClock(28)
[Planbase]:{	UpdateClock(28)
}


[new scheduled]:[UpdateClock(28)]
[After]:{	UpdateClock(28)
}


[Planbase]:{	UpdateClock(28)
}


[new scheduled]:[UpdateClock(28)]
[After]:{	UpdateClock(28)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=32, time=2015-05-27 15:25:09.437]
object notification: Time [clock=32, time=2015-05-27 15:25:09.437]
object notification: Time [clock=32, time=2015-05-27 15:25:09.437]
org notification: Time [clock=32, time=2015-05-27 15:25:09.437]
org notification: Time [clock=32, time=2015-05-27 15:25:09.437]
Event processed UpdateClock(32)
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(32)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(32)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(32)
}


Event processed UpdateClock(32)
Event processed UpdateClock(32)
[Planbase]:{	UpdateClock(32)
}


[new scheduled]:[UpdateClock(32)]
[After]:{	UpdateClock(32)
}


[Planbase]:{	UpdateClock(32)
}


[new scheduled]:[UpdateClock(32)]
[After]:{	UpdateClock(32)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=29, time=2015-05-27 15:25:12.712]
org notification: Time [clock=29, time=2015-05-27 15:25:12.712]
object notification: Time [clock=29, time=2015-05-27 15:25:12.712]
object notification: Time [clock=29, time=2015-05-27 15:25:12.712]
org notification: Time [clock=29, time=2015-05-27 15:25:12.712]
Event processed UpdateClock(29)
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(29)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(29)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(29)
}


Event processed UpdateClock(29)
Event processed UpdateClock(29)
[Planbase]:{	UpdateClock(29)
}


[new scheduled]:[UpdateClock(29)]
[After]:{	UpdateClock(29)
}


[Planbase]:{	UpdateClock(29)
}


[new scheduled]:[UpdateClock(29)]
[After]:{	UpdateClock(29)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


org notification: Time [clock=33, time=2015-05-27 15:25:19.438]
org notification: Time [clock=33, time=2015-05-27 15:25:19.438]
object notification: Time [clock=33, time=2015-05-27 15:25:19.438]
object notification: Time [clock=33, time=2015-05-27 15:25:19.438]
object notification: Time [clock=33, time=2015-05-27 15:25:19.438]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(33)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(33)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(33)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(33)
}


Event processed UpdateClock(33)
Event processed UpdateClock(33)
[Planbase]:{	UpdateClock(33)
}


[new scheduled]:[UpdateClock(33)]
[After]:{	UpdateClock(33)
}


[Planbase]:{	UpdateClock(33)
}


[new scheduled]:[UpdateClock(33)]
[After]:{	UpdateClock(33)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=30, time=2015-05-27 15:25:22.713]
object notification: Time [clock=30, time=2015-05-27 15:25:22.713]
org notification: Time [clock=30, time=2015-05-27 15:25:22.713]
object notification: Time [clock=30, time=2015-05-27 15:25:22.713]
org notification: Time [clock=30, time=2015-05-27 15:25:22.713]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(30)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(30)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(30)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(30)
}


Event processed UpdateClock(30)
Event processed UpdateClock(30)
[Planbase]:{	UpdateClock(30)
}


[new scheduled]:[UpdateClock(30)]
[After]:{	UpdateClock(30)
}


[Planbase]:{	UpdateClock(30)
}


[new scheduled]:[UpdateClock(30)]
[After]:{	UpdateClock(30)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=34, time=2015-05-27 15:25:29.44]
object notification: Time [clock=34, time=2015-05-27 15:25:29.44]
org notification: Time [clock=34, time=2015-05-27 15:25:29.44]
object notification: Time [clock=34, time=2015-05-27 15:25:29.44]
org notification: Time [clock=34, time=2015-05-27 15:25:29.44]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(34)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(34)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(34)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(34)
}


Event processed UpdateClock(34)
Event processed UpdateClock(34)
[Planbase]:{	UpdateClock(34)
}


[new scheduled]:[UpdateClock(34)]
[After]:{	UpdateClock(34)
}


[Planbase]:{	UpdateClock(34)
}


[new scheduled]:[UpdateClock(34)]
[After]:{	UpdateClock(34)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=31, time=2015-05-27 15:25:32.719]
object notification: Time [clock=31, time=2015-05-27 15:25:32.719]
object notification: Time [clock=31, time=2015-05-27 15:25:32.719]
org notification: Time [clock=31, time=2015-05-27 15:25:32.719]
org notification: Time [clock=31, time=2015-05-27 15:25:32.719]
[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(31)
Event processed UpdateClock(31)
Event processed UpdateClock(31)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(31)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(31)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(31)
}


[Planbase]:{	UpdateClock(31)
}


[new scheduled]:[UpdateClock(31)]
[After]:{	UpdateClock(31)
}


[Planbase]:{	UpdateClock(31)
}


[new scheduled]:[UpdateClock(31)]
[After]:{	UpdateClock(31)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


org notification: Time [clock=35, time=2015-05-27 15:25:39.442]
object notification: Time [clock=35, time=2015-05-27 15:25:39.442]
object notification: Time [clock=35, time=2015-05-27 15:25:39.442]
object notification: Time [clock=35, time=2015-05-27 15:25:39.442]
org notification: Time [clock=35, time=2015-05-27 15:25:39.442]
Event processed UpdateClock(35)
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(35)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(35)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(35)
}


Event processed UpdateClock(35)
Event processed UpdateClock(35)
[Planbase]:{	UpdateClock(35)
}


[new scheduled]:[UpdateClock(35)]
[After]:{	UpdateClock(35)
}


[Planbase]:{	UpdateClock(35)
}


[new scheduled]:[UpdateClock(35)]
[After]:{	UpdateClock(35)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=32, time=2015-05-27 15:25:42.721]
org notification: Time [clock=32, time=2015-05-27 15:25:42.721]
object notification: Time [clock=32, time=2015-05-27 15:25:42.721]
org notification: Time [clock=32, time=2015-05-27 15:25:42.721]
object notification: Time [clock=32, time=2015-05-27 15:25:42.721]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(32)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(32)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(32)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(32)
}


Event processed UpdateClock(32)
Event processed UpdateClock(32)
[Planbase]:{	UpdateClock(32)
}


[new scheduled]:[UpdateClock(32)]
[After]:{	UpdateClock(32)
}


[Planbase]:{	UpdateClock(32)
}


[new scheduled]:[UpdateClock(32)]
[After]:{	UpdateClock(32)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


org notification: Time [clock=36, time=2015-05-27 15:25:49.445]
object notification: Time [clock=36, time=2015-05-27 15:25:49.445]
object notification: Time [clock=36, time=2015-05-27 15:25:49.445]
object notification: Time [clock=36, time=2015-05-27 15:25:49.445]
org notification: Time [clock=36, time=2015-05-27 15:25:49.445]
[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[After]:{	ReceivedMessage(accept, 4725)
}


Event processed UpdateClock(36)
Event processed UpdateClock(36)
Event processed UpdateClock(36)
[Planbase]:{	UpdateClock(36)
}


[new scheduled]:[UpdateClock(36)]
[After]:{	UpdateClock(36)
}


[Planbase]:{	UpdateClock(36)
}


[new scheduled]:[UpdateClock(36)]
[After]:{	UpdateClock(36)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(36)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(36)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(36)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=33, time=2015-05-27 15:25:52.724]
object notification: Time [clock=33, time=2015-05-27 15:25:52.724]
org notification: Time [clock=33, time=2015-05-27 15:25:52.724]
org notification: Time [clock=33, time=2015-05-27 15:25:52.724]
object notification: Time [clock=33, time=2015-05-27 15:25:52.724]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(33)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(33)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(33)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(33)
}


Event processed UpdateClock(33)
Event processed UpdateClock(33)
[Planbase]:{	UpdateClock(33)
}


[new scheduled]:[UpdateClock(33)]
[After]:{	UpdateClock(33)
}


[Planbase]:{	UpdateClock(33)
}


[new scheduled]:[UpdateClock(33)]
[After]:{	UpdateClock(33)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


org notification: Time [clock=37, time=2015-05-27 15:25:59.447]
object notification: Time [clock=37, time=2015-05-27 15:25:59.447]
org notification: Time [clock=37, time=2015-05-27 15:25:59.447]
object notification: Time [clock=37, time=2015-05-27 15:25:59.447]
object notification: Time [clock=37, time=2015-05-27 15:25:59.447]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(37)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(37)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(37)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(37)
}


Event processed UpdateClock(37)
Event processed UpdateClock(37)
[Planbase]:{	UpdateClock(37)
}


[new scheduled]:[UpdateClock(37)]
[After]:{	UpdateClock(37)
}


[Planbase]:{	UpdateClock(37)
}


[new scheduled]:[UpdateClock(37)]
[After]:{	UpdateClock(37)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=34, time=2015-05-27 15:26:02.727]
org notification: Time [clock=34, time=2015-05-27 15:26:02.727]
org notification: Time [clock=34, time=2015-05-27 15:26:02.727]
object notification: Time [clock=34, time=2015-05-27 15:26:02.727]
object notification: Time [clock=34, time=2015-05-27 15:26:02.727]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(34)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(34)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(34)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(34)
}


Event processed UpdateClock(34)
Event processed UpdateClock(34)
[Planbase]:{	UpdateClock(34)
}


[new scheduled]:[UpdateClock(34)]
[After]:{	UpdateClock(34)
}


[Planbase]:{	UpdateClock(34)
}


[new scheduled]:[UpdateClock(34)]
[After]:{	UpdateClock(34)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=38, time=2015-05-27 15:26:09.45]
org notification: Time [clock=38, time=2015-05-27 15:26:09.45]
org notification: Time [clock=38, time=2015-05-27 15:26:09.45]
object notification: Time [clock=38, time=2015-05-27 15:26:09.45]
object notification: Time [clock=38, time=2015-05-27 15:26:09.45]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(38)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(38)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(38)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(38)
}


Event processed UpdateClock(38)
Event processed UpdateClock(38)
[Planbase]:{	UpdateClock(38)
}


[new scheduled]:[UpdateClock(38)]
[After]:{	UpdateClock(38)
}


[Planbase]:{	UpdateClock(38)
}


[new scheduled]:[UpdateClock(38)]
[After]:{	UpdateClock(38)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=35, time=2015-05-27 15:26:12.729]
object notification: Time [clock=35, time=2015-05-27 15:26:12.729]
object notification: Time [clock=35, time=2015-05-27 15:26:12.729]
org notification: Time [clock=35, time=2015-05-27 15:26:12.729]
org notification: Time [clock=35, time=2015-05-27 15:26:12.729]
Event processed UpdateClock(35)
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(35)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(35)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(35)
}


Event processed UpdateClock(35)
Event processed UpdateClock(35)
[Planbase]:{	UpdateClock(35)
}


[new scheduled]:[UpdateClock(35)]
[After]:{	UpdateClock(35)
}


[Planbase]:{	UpdateClock(35)
}


[new scheduled]:[UpdateClock(35)]
[After]:{	UpdateClock(35)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=39, time=2015-05-27 15:26:19.452]
org notification: Time [clock=39, time=2015-05-27 15:26:19.452]
org notification: Time [clock=39, time=2015-05-27 15:26:19.452]
object notification: Time [clock=39, time=2015-05-27 15:26:19.452]
object notification: Time [clock=39, time=2015-05-27 15:26:19.452]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(39)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(39)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(39)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(39)
}


Event processed UpdateClock(39)
Event processed UpdateClock(39)
[Planbase]:{	UpdateClock(39)
}


[new scheduled]:[UpdateClock(39)]
[After]:{	UpdateClock(39)
}


[Planbase]:{	UpdateClock(39)
}


[new scheduled]:[UpdateClock(39)]
[After]:{	UpdateClock(39)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=36, time=2015-05-27 15:26:22.732]
org notification: Time [clock=36, time=2015-05-27 15:26:22.732]
object notification: Time [clock=36, time=2015-05-27 15:26:22.732]
org notification: Time [clock=36, time=2015-05-27 15:26:22.732]
object notification: Time [clock=36, time=2015-05-27 15:26:22.732]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(36)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(36)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(36)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(36)
}


Event processed UpdateClock(36)
Event processed UpdateClock(36)
[Planbase]:{	UpdateClock(36)
}


[new scheduled]:[UpdateClock(36)]
[After]:{	UpdateClock(36)
}


[Planbase]:{	UpdateClock(36)
}


[new scheduled]:[UpdateClock(36)]
[After]:{	UpdateClock(36)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


org notification: Time [clock=40, time=2015-05-27 15:26:29.455]
org notification: Time [clock=40, time=2015-05-27 15:26:29.455]
object notification: Time [clock=40, time=2015-05-27 15:26:29.455]
object notification: Time [clock=40, time=2015-05-27 15:26:29.455]
object notification: Time [clock=40, time=2015-05-27 15:26:29.455]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(40)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(40)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(40)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(40)
}


Event processed UpdateClock(40)
Event processed UpdateClock(40)
[Planbase]:{	UpdateClock(40)
}


[new scheduled]:[UpdateClock(40)]
[After]:{	UpdateClock(40)
}


[Planbase]:{	UpdateClock(40)
}


[new scheduled]:[UpdateClock(40)]
[After]:{	UpdateClock(40)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


org notification: Time [clock=37, time=2015-05-27 15:26:32.733]
org notification: Time [clock=37, time=2015-05-27 15:26:32.733]
object notification: Time [clock=37, time=2015-05-27 15:26:32.733]
object notification: Time [clock=37, time=2015-05-27 15:26:32.733]
object notification: Time [clock=37, time=2015-05-27 15:26:32.733]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(37)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(37)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(37)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(37)
}


Event processed UpdateClock(37)
Event processed UpdateClock(37)
[Planbase]:{	UpdateClock(37)
}


[new scheduled]:[UpdateClock(37)]
[After]:{	UpdateClock(37)
}


[Planbase]:{	UpdateClock(37)
}


[new scheduled]:[UpdateClock(37)]
[After]:{	UpdateClock(37)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


org notification: Time [clock=41, time=2015-05-27 15:26:39.457]
object notification: Time [clock=41, time=2015-05-27 15:26:39.457]
object notification: Time [clock=41, time=2015-05-27 15:26:39.457]
object notification: Time [clock=41, time=2015-05-27 15:26:39.457]
org notification: Time [clock=41, time=2015-05-27 15:26:39.457]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(41)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(41)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(41)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(41)
}


Event processed UpdateClock(41)
Event processed UpdateClock(41)
[Planbase]:{	UpdateClock(41)
}


[new scheduled]:[UpdateClock(41)]
[After]:{	UpdateClock(41)
}


[Planbase]:{	UpdateClock(41)
}


[new scheduled]:[UpdateClock(41)]
[After]:{	UpdateClock(41)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=38, time=2015-05-27 15:26:42.735]
org notification: Time [clock=38, time=2015-05-27 15:26:42.735]
object notification: Time [clock=38, time=2015-05-27 15:26:42.735]
org notification: Time [clock=38, time=2015-05-27 15:26:42.735]
object notification: Time [clock=38, time=2015-05-27 15:26:42.735]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(38)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(38)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(38)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(38)
}


Event processed UpdateClock(38)
Event processed UpdateClock(38)
[Planbase]:{	UpdateClock(38)
}


[new scheduled]:[UpdateClock(38)]
[After]:{	UpdateClock(38)
}


[Planbase]:{	UpdateClock(38)
}


[new scheduled]:[UpdateClock(38)]
[After]:{	UpdateClock(38)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


org notification: Time [clock=42, time=2015-05-27 15:26:49.458]
org notification: Time [clock=42, time=2015-05-27 15:26:49.458]
object notification: Time [clock=42, time=2015-05-27 15:26:49.458]
object notification: Time [clock=42, time=2015-05-27 15:26:49.458]
object notification: Time [clock=42, time=2015-05-27 15:26:49.458]
[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(42)
Event processed UpdateClock(42)
Event processed UpdateClock(42)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(42)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(42)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(42)
}


[Planbase]:{	UpdateClock(42)
}


[new scheduled]:[UpdateClock(42)]
[After]:{	UpdateClock(42)
}


[Planbase]:{	UpdateClock(42)
}


[new scheduled]:[UpdateClock(42)]
[After]:{	UpdateClock(42)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscourseMessage
[MSG] Message is of type: basicproposal
[MSG] Message is for: 0
[MSG] i'm: 0
Received a proposal creating event
org notification: Proposal [id=2803, agent=a20, agent2=a10, clock=42, time=2015-05-27 15:26:50.834]
org notification: Proposal [id=2803, agent=a20, agent2=a10, clock=42, time=2015-05-27 15:26:50.834]
[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


Event processed @ctenv(functionToList(proposal(proposal, 1, 2803, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	@ctenv(functionToList(proposal(proposal, 1, 2803, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[ReceivedMessage(accept, 4725), @ctenv(functionToList(proposal(proposal, 1, 2803, open)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	@ctenv(functionToList(proposal(proposal, 1, 2803, open)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@6b203ffb
[CTAH] The created APLList : [proposal,1,2803,open]
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	if	B([actionresult([proposal,1,2803,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,1,2803,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,1,2803,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[ReceivedMessage(accept, 4725), if B([actionresult([proposal,1,2803,open])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([proposal,1,2803,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,2803,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	if	B([actionresult([proposal,1,2803,open])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([proposal,1,2803,open])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([proposal,1,2803,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	if	B([actionresult([proposal,1,2803,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,2803,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[ReceivedMessage(accept, 4725), if B([actionresult([proposal,1,2803,open])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([proposal,1,2803,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	if	B([actionresult([proposal,1,2803,open])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([proposal,1,2803,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	if	B([actionresult([proposal,1,2803,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[new scheduled]:[ReceivedMessage(accept, 4725), if B([actionresult([proposal,1,2803,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	if	B([actionresult([proposal,1,2803,open])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedProposal(AGENT, ID, RESPONSE)
				}
		}
}


[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 2803, open)
		}
}


[new scheduled]:[ReceivedMessage(accept, 4725), if B(proposal=proposal) then ReceivedProposal(1, 2803, open)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	if	B(proposal=proposal)
	then	{	ReceivedProposal(1, 2803, open)
		}
}


[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	ReceivedProposal(1, 2803, open)
}


[new scheduled]:[ReceivedMessage(accept, 4725), ReceivedProposal(1, 2803, open)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	ReceivedProposal(1, 2803, open)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[getScoreAfterExchange(0, 2803); if G(at(A, B, C)) then skip else makeResponse(2803, accept), ReceivedMessage(accept, 4725)]
[After]:{	getScoreAfterExchange(0, 2803);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(2803, accept)
		}
},
{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	GetScoreAfterExchange(2803, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(2803, accept)
		}
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[GetScoreAfterExchange(2803, yes); if G(at(A, B, C)) then skip else makeResponse(2803, accept), ReceivedMessage(accept, 4725)]
[After]:{	GetScoreAfterExchange(2803, yes);
	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(2803, accept)
		}
},
{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(2803, accept)
		}
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[if G(at(A, B, C)) then skip else makeResponse(2803, accept), ReceivedMessage(accept, 4725)]
[After]:{	if	G(at(A, B, C))
	then	{	skip
		}
	else	{	makeResponse(2803, accept)
		}
},
{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	makeResponse(2803, accept)
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[makeResponse(2803, accept), ReceivedMessage(accept, 4725)]
[After]:{	makeResponse(2803, accept)
},
{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	sendResponse(accept, 2803)
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[sendResponse(accept, 2803), ReceivedMessage(accept, 4725)]
[After]:{	sendResponse(accept, 2803)
},
{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	@ctenv(sendResponse(2803, accept),L1,0);
	Sent(accept, 2803)
},
{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[@ctenv(sendResponse(2803, accept),L1,0); Sent(accept, 2803), ReceivedMessage(accept, 4725)]
[After]:{	@ctenv(sendResponse(2803, accept),L1,0);
	Sent(accept, 2803)
},
{	ReceivedMessage(accept, 4725)
}


org notification: Response [id=2803, response=accepted, clock=42, time=2015-05-27 15:26:51.503]
org notification: Response [id=2803, response=accepted, clock=42, time=2015-05-27 15:26:51.503]
[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


org notification: Time [clock=39, time=2015-05-27 15:26:52.737]
org notification: Time [clock=39, time=2015-05-27 15:26:52.737]
object notification: Time [clock=39, time=2015-05-27 15:26:52.737]
object notification: Time [clock=39, time=2015-05-27 15:26:52.737]
object notification: Time [clock=39, time=2015-05-27 15:26:52.737]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(39)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(39)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(39)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(39)
}


Event processed UpdateClock(39)
Event processed UpdateClock(39)
[Planbase]:{	UpdateClock(39)
}


[new scheduled]:[UpdateClock(39)]
[After]:{	UpdateClock(39)
}


[Planbase]:{	UpdateClock(39)
}


[new scheduled]:[UpdateClock(39)]
[After]:{	UpdateClock(39)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=43, time=2015-05-27 15:26:59.461]
object notification: Time [clock=43, time=2015-05-27 15:26:59.461]
org notification: Time [clock=43, time=2015-05-27 15:26:59.461]
object notification: Time [clock=43, time=2015-05-27 15:26:59.461]
org notification: Time [clock=43, time=2015-05-27 15:26:59.461]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


Event processed UpdateClock(43)
[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(43)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(43)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(43)
}


Event processed UpdateClock(43)
Event processed UpdateClock(43)
[Planbase]:{	UpdateClock(43)
}


[new scheduled]:[UpdateClock(43)]
[After]:{	UpdateClock(43)
}


[Planbase]:{	UpdateClock(43)
}


[new scheduled]:[UpdateClock(43)]
[After]:{	UpdateClock(43)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


object notification: Time [clock=40, time=2015-05-27 15:27:02.74]
org notification: Time [clock=40, time=2015-05-27 15:27:02.74]
org notification: Time [clock=40, time=2015-05-27 15:27:02.74]
object notification: Time [clock=40, time=2015-05-27 15:27:02.74]
object notification: Time [clock=40, time=2015-05-27 15:27:02.74]
Event processed UpdateClock(40)
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(40)
}


[new scheduled]:[ReceivedMessage(accept, 4725), UpdateClock(40)]
[After]:{	ReceivedMessage(accept, 4725)
},
{	UpdateClock(40)
}


Event processed UpdateClock(40)
Event processed UpdateClock(40)
[Planbase]:{	UpdateClock(40)
}


[new scheduled]:[UpdateClock(40)]
[After]:{	UpdateClock(40)
}


[Planbase]:{	UpdateClock(40)
}


[new scheduled]:[UpdateClock(40)]
[After]:{	UpdateClock(40)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


[Planbase]:{	ReceivedMessage(accept, 4725)
}


[new scheduled]:[ReceivedMessage(accept, 4725)]
[After]:{	ReceivedMessage(accept, 4725)
}


