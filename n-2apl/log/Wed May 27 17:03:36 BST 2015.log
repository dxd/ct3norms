2015-05-27 17:03:38,005 CONFIG [com.gigaspaces.logger] - Log file: /Users/dxd/git/ct3/logs/2015-05-27~17.03-gigaspaces-service-128.243.23.149-40298.log
-------------------------last log tuples start--------------------------------
Time [clock=4, time=2015-05-27 17:03:05.65]
-------------------------last log tuples end----------------------------------
[CTAH] started agent 10
[CTAH] Added a new agent to the game by the name of 10.
[ENV] added agent a10
[CTAH] started agent 30
[CTAH] Added a new agent to the game by the name of 30.
[ENV] added agent a30
[CTAH] started agent 40
[CTAH] Added a new agent to the game by the name of 40.
[ENV] added agent a40
org notification: Time [clock=1, time=2015-05-27 17:03:48.86]
object notification: Time [clock=1, time=2015-05-27 17:03:48.86]
object notification: Time [clock=1, time=2015-05-27 17:03:48.86]
object notification: Time [clock=1, time=2015-05-27 17:03:48.86]
#########################Game started
#########################Game started
#########################Game started
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is 
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
setPhases in ClientGameStatus, the current phase is Norm Phase
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-27 17:03:54.088, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-27 17:03:54.088, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-27 17:03:54.088, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=0], subject=brown, time=2015-05-27 17:03:54.088, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-27 17:03:54.115, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-27 17:03:54.115, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-27 17:03:54.115, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=1], subject=brown, time=2015-05-27 17:03:54.115, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-27 17:03:54.12, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-27 17:03:54.12, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-27 17:03:54.12, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=2], subject=white, time=2015-05-27 17:03:54.12, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-27 17:03:54.127, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-27 17:03:54.127, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-27 17:03:54.127, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=3], subject=yellow, time=2015-05-27 17:03:54.127, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-27 17:03:54.131, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-27 17:03:54.131, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-27 17:03:54.131, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=4], subject=brown, time=2015-05-27 17:03:54.131, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-27 17:03:54.135, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-27 17:03:54.135, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-27 17:03:54.135, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=5], subject=blue, time=2015-05-27 17:03:54.135, clock=0]
org notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-27 17:03:54.14, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-27 17:03:54.14, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-27 17:03:54.14, clock=0]
object notification: Tile [id=null, cell=Cell [x=0, y=6], subject=brown, time=2015-05-27 17:03:54.14, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-27 17:03:54.144, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-27 17:03:54.144, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-27 17:03:54.144, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=0], subject=brown, time=2015-05-27 17:03:54.144, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-27 17:03:54.151, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-27 17:03:54.151, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-27 17:03:54.151, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=1], subject=yellow, time=2015-05-27 17:03:54.151, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-27 17:03:54.156, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-27 17:03:54.156, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-27 17:03:54.156, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=2], subject=white, time=2015-05-27 17:03:54.156, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-27 17:03:54.159, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-27 17:03:54.159, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-27 17:03:54.159, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=3], subject=white, time=2015-05-27 17:03:54.159, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-27 17:03:54.164, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-27 17:03:54.164, clock=0]
#########################Game Initialized
AGENT Thread-11: current phase name: Norm Phase
we have 1 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
#########################Game Initialized
AGENT Thread-15: current phase name: Norm Phase
we have 1 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
#########################Game Initialized
AGENT Thread-13: current phase name: Norm Phase
we have 1 goals
we have GoalWeight: 100  DistWeight: -10  ChipWeight: 5  CommWeight: 0 scoring
[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


[Planbase]:{	initialize
}


[new scheduled]:[initialize]
[After]:{	initialize
}


Event processed UpdateClock(1)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateClock(1)
Event processed UpdateClock(1)
Event processed UpdateTile(brown, 0, 0)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateTile(brown, 0, 1)
Event processed UpdateTile(brown, 0, 0)
Event processed @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed UpdateTile(white, 0, 2)
Event processed UpdateTile(brown, 0, 0)
Event processed UpdateTile(yellow, 0, 3)
Event processed UpdateTile(brown, 0, 1)
Event processed UpdateTile(brown, 0, 4)
Event processed UpdateTile(white, 0, 2)
Event processed UpdateTile(blue, 0, 5)
Event processed UpdateTile(yellow, 0, 3)
Event processed UpdateTile(brown, 0, 6)
Event processed UpdateTile(brown, 0, 4)
Event processed UpdateTile(brown, 0, 1)
Event processed UpdateTile(white, 0, 2)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(yellow, 0, 3)
Event processed UpdateTile(yellow, 1, 1)
Event processed UpdateTile(brown, 0, 4)
Event processed UpdateTile(blue, 0, 5)
Event processed UpdateTile(white, 1, 2)
Event processed UpdateTile(brown, 0, 6)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(white, 1, 3)
Event processed UpdateTile(blue, 0, 5)
Event processed UpdateTile(brown, 0, 6)
Event processed UpdateTile(yellow, 1, 1)
Event processed UpdateTile(brown, 1, 0)
Event processed UpdateTile(white, 1, 2)
Event processed UpdateTile(yellow, 1, 1)
Event processed UpdateTile(white, 1, 2)
Event processed UpdateTile(white, 1, 3)
Event processed UpdateTile(white, 1, 3)
Event processed UpdateTile(blue, 1, 4)
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateTile(brown, 0, 0), UpdateTile(brown, 0, 1), UpdateTile(white, 0, 2), UpdateTile(yellow, 0, 3), UpdateTile(brown, 0, 4), UpdateTile(blue, 0, 5), UpdateTile(brown, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(yellow, 1, 1), UpdateTile(white, 1, 2), UpdateTile(white, 1, 3), UpdateTile(blue, 1, 4)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
},
{	UpdateTile(blue, 1, 4)
}


[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateTile(brown, 0, 0), UpdateTile(brown, 0, 1), UpdateTile(white, 0, 2), UpdateTile(yellow, 0, 3), UpdateTile(brown, 0, 4), UpdateTile(blue, 0, 5), UpdateTile(brown, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(yellow, 1, 1), UpdateTile(white, 1, 2), UpdateTile(white, 1, 3)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@4cd5a86c
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
}


[new scheduled]:[getPhase; getId; B(agentId(ID)); getRole(ID); getPos, UpdateClock(1), @ctenv(functionToList(message(game_initialized)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE), UpdateTile(brown, 0, 0), UpdateTile(brown, 0, 1), UpdateTile(white, 0, 2), UpdateTile(yellow, 0, 3), UpdateTile(brown, 0, 4), UpdateTile(blue, 0, 5), UpdateTile(brown, 0, 6), UpdateTile(brown, 1, 0), UpdateTile(yellow, 1, 1), UpdateTile(white, 1, 2), UpdateTile(white, 1, 3)]
[After]:{	getPhase;
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	UpdateClock(1)
},
{	@ctenv(functionToList(message(game_initialized)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
},
{	UpdateTile(brown, 0, 0)
},
{	UpdateTile(brown, 0, 1)
},
{	UpdateTile(white, 0, 2)
},
{	UpdateTile(yellow, 0, 3)
},
{	UpdateTile(brown, 0, 4)
},
{	UpdateTile(blue, 0, 5)
},
{	UpdateTile(brown, 0, 6)
},
{	UpdateTile(brown, 1, 0)
},
{	UpdateTile(yellow, 1, 1)
},
{	UpdateTile(white, 1, 2)
},
{	UpdateTile(white, 1, 3)
}


[CTAH] Array of Terms: [Lapapl.data.Term;@1d0ca25a
[CTAH] The created APLList : [game_initialized]
[CTAH] Array of Terms: [Lapapl.data.Term;@79a5b7b4
[CTAH] The created APLList : [game_initialized]
[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[GetPhase(normphase); getId; B(agentId(ID)); getRole(ID); getPos, if B([actionresult([game_initialized])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	GetPhase(normphase);
	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	if	B([actionresult([game_initialized])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([game_initialized])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[new scheduled]:[getId; B(agentId(ID)); getRole(ID); getPos, ReceivedEvent(game_initialized)]
[After]:{	getId;
	B(agentId(ID));
	getRole(ID);
	getPos
},
{	ReceivedEvent(game_initialized)
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, @ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(0); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(0);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, @ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[Initialize, @ctenv(getAgentId,L1,0); B(L1=[actionresult(X)]); GetAgentId(X); B(agentId(ID)); getRole(ID); getPos]
[After]:{	Initialize
},
{	@ctenv(getAgentId,L1,0);
	B(L1=[actionresult(X)]);
	GetAgentId(X);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(3); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(3);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[GetAgentId(2); B(agentId(ID)); getRole(ID); getPos]
[After]:{	GetAgentId(2);
	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getRole(0);
	getPos
}


[new scheduled]:[getRole(0); getPos]
[After]:{	getRole(0);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[new scheduled]:[B(agentId(ID)); getRole(ID); getPos]
[After]:{	B(agentId(ID));
	getRole(ID);
	getPos
}


[Planbase]:{	getRole(2);
	getPos
}


[new scheduled]:[getRole(2); getPos]
[After]:{	getRole(2);
	getPos
}


[Planbase]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(0),L1,0); B(L1=[actionresult(X)]); GetRole(0, X); getPos]
[After]:{	@ctenv(getRole(0),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(0, X);
	getPos
}


[Planbase]:{	getRole(3);
	getPos
}


[new scheduled]:[getRole(3); getPos]
[After]:{	getRole(3);
	getPos
}


[Planbase]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(2),L1,0); B(L1=[actionresult(X)]); GetRole(2, X); getPos]
[After]:{	@ctenv(getRole(2),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(2, X);
	getPos
}


[Planbase]:{	GetRole(0, ra);
	getPos
}


[new scheduled]:[GetRole(0, ra); getPos]
[After]:{	GetRole(0, ra);
	getPos
}


[Planbase]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[new scheduled]:[@ctenv(getRole(3),L1,0); B(L1=[actionresult(X)]); GetRole(3, X); getPos]
[After]:{	@ctenv(getRole(3),L1,0);
	B(L1=[actionresult(X)]);
	GetRole(3, X);
	getPos
}


[Planbase]:{	GetRole(2, none);
	getPos
}


[new scheduled]:[GetRole(2, none); getPos]
[After]:{	GetRole(2, none);
	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	GetRole(3, none);
	getPos
}


[new scheduled]:[GetRole(3, none); getPos]
[After]:{	GetRole(3, none);
	getPos
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	getPos
}


[new scheduled]:[getPos]
[After]:{	getPos
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[CTAH] Agentposition: [0,0]
[CTAH] Agentposition: [6,6]
[Planbase]:{	B(clock(C));
	GetAgentPos(0, 0, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(0, 0, C)]
[After]:{	B(clock(C));
	GetAgentPos(0, 0, C)
}


[Planbase]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[new scheduled]:[@ctenv(getAgentPos,L1,0); B(L1=[actionresult([X,Y])]); B(clock(C)); GetAgentPos(X, Y, C)]
[After]:{	@ctenv(getAgentPos,L1,0);
	B(L1=[actionresult([X,Y])]);
	B(clock(C));
	GetAgentPos(X, Y, C)
}


[Planbase]:{	B(clock(C));
	GetAgentPos(6, 6, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(6, 6, C)]
[After]:{	B(clock(C));
	GetAgentPos(6, 6, C)
}


[CTAH] Agentposition: [0,6]
[Planbase]:{	GetAgentPos(0, 0, 1)
}


[new scheduled]:[GetAgentPos(0, 0, 1)]
[After]:{	GetAgentPos(0, 0, 1)
}


[Planbase]:{	B(clock(C));
	GetAgentPos(0, 6, C)
}


[new scheduled]:[B(clock(C)); GetAgentPos(0, 6, C)]
[After]:{	B(clock(C));
	GetAgentPos(0, 6, C)
}


[Planbase]:{	GetAgentPos(6, 6, 1)
}


[new scheduled]:[GetAgentPos(6, 6, 1)]
[After]:{	GetAgentPos(6, 6, 1)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	GetAgentPos(0, 6, 1)
}


[new scheduled]:[GetAgentPos(0, 6, 1)]
[After]:{	GetAgentPos(0, 6, 1)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[After]:


setPhases in ClientGameStatus, the current phase is Communication Phase
setPhases in ClientGameStatus, the current phase is Communication Phase
setPhases in ClientGameStatus, the current phase is Communication Phase
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:


[new scheduled]:[]
[Planbase]:


[new scheduled]:[]
[After]:


[After]:


Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
Event processed @ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[Planbase]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[@ctenv(functionToList(message(phasechange)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	@ctenv(functionToList(message(phasechange)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@70019a64
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@4636acab
[CTAH] The created APLList : [phasechange]
[CTAH] Array of Terms: [Lapapl.data.Term;@78b353d4
[CTAH] The created APLList : [phasechange]
[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[new scheduled]:[if B([actionresult([phasechange])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B([actionresult([phasechange])]=[actionresult([TYPE])])
	then	{	ReceivedEvent(TYPE)
		}
	else	{	if	B([actionresult([phasechange])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
			then	{	if	B(TYPE=proposal)
					then	{	ReceivedProposal(AGENT, ID, RESPONSE)
						}
				}
		}
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:{	ReceivedEvent(phasechange)
}


[new scheduled]:[ReceivedEvent(phasechange)]
[After]:{	ReceivedEvent(phasechange)
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:


[new scheduled]:[update]
[After]:{	update
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[getPhase; B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	getPhase;
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[Planbase]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


[new scheduled]:[@ctenv(getPhase,L1,0); B(L1=[actionresult(X)]); GetPhase(X); B(clock(Clock)); if B(event(phasechange)) then Updated]
[After]:{	@ctenv(getPhase,L1,0);
	B(L1=[actionresult(X)]);
	GetPhase(X);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
}


object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-27 17:03:54.164, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=4], subject=blue, time=2015-05-27 17:03:54.164, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-27 17:03:54.167, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-27 17:03:54.167, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-27 17:03:54.168, clock=0]
org notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-27 17:03:54.168, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-27 17:03:54.17, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-27 17:03:54.172, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-27 17:03:54.174, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-27 17:03:54.176, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-27 17:03:54.177, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-27 17:03:54.178, clock=0]
org notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-27 17:03:54.18, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-27 17:03:54.181, clock=0]
object notification: Time [clock=2, time=2015-05-27 17:03:58.885]
object notification: Time [clock=3, time=2015-05-27 17:04:08.887]
object notification: Time [clock=4, time=2015-05-27 17:04:18.89]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-27 17:03:54.167, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-27 17:03:54.168, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-27 17:03:54.17, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-27 17:03:54.172, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-27 17:03:54.174, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-27 17:03:54.176, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-27 17:03:54.177, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=5], subject=brown, time=2015-05-27 17:03:54.167, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-27 17:03:54.178, clock=0]
object notification: Tile [id=null, cell=Cell [x=1, y=6], subject=yellow, time=2015-05-27 17:03:54.168, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-27 17:03:54.18, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-27 17:03:54.17, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-27 17:03:54.181, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-27 17:03:54.172, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-27 17:03:54.183, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-27 17:03:54.174, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-27 17:03:54.184, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-27 17:03:54.186, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-27 17:03:54.187, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-27 17:03:54.189, clock=0]
object notification: Time [clock=2, time=2015-05-27 17:03:58.885]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-27 17:03:54.19, clock=0]
org notification: Time [clock=2, time=2015-05-27 17:03:58.885]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-27 17:03:54.191, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-27 17:03:54.192, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-27 17:03:54.194, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-27 17:03:54.195, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-27 17:03:54.196, clock=0]
org notification: Time [clock=3, time=2015-05-27 17:04:08.887]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-27 17:03:54.176, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-27 17:03:54.177, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-27 17:03:54.178, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-27 17:03:54.18, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-27 17:03:54.181, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-27 17:03:54.183, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-27 17:03:54.184, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-27 17:03:54.186, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-27 17:03:54.187, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-27 17:03:54.189, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-27 17:03:54.19, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-27 17:03:54.191, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-27 17:03:54.192, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-27 17:03:54.194, clock=0]
org notification: Time [clock=4, time=2015-05-27 17:04:18.89]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-27 17:03:54.197, clock=0]
object notification: Time [clock=3, time=2015-05-27 17:04:08.887]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-27 17:03:54.198, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-27 17:03:54.195, clock=0]
object notification: Time [clock=4, time=2015-05-27 17:04:18.89]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-27 17:03:54.199, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-27 17:03:54.196, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-27 17:03:54.183, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-27 17:03:54.197, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-27 17:03:54.184, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-27 17:03:54.198, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-27 17:03:54.199, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-27 17:03:54.2, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-27 17:03:54.186, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-27 17:03:54.201, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-27 17:03:54.202, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-27 17:03:54.187, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-27 17:03:54.203, clock=0]
object notification: Time [clock=2, time=2015-05-27 17:03:58.885]
org notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-27 17:03:54.189, clock=0]
object notification: Time [clock=3, time=2015-05-27 17:04:08.887]
object notification: Time [clock=4, time=2015-05-27 17:04:18.89]
org notification: Group [name=g, ra=a10, clock=0, time=2015-05-27 17:03:54.292]
object notification: Tile [id=null, cell=Cell [x=2, y=0], subject=white, time=2015-05-27 17:03:54.17, clock=0]
org notification: Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-27 17:03:54.19, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=1], subject=white, time=2015-05-27 17:03:54.172, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=2], subject=brown, time=2015-05-27 17:03:54.174, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=3], subject=blue, time=2015-05-27 17:03:54.176, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=4], subject=white, time=2015-05-27 17:03:54.177, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=5], subject=brown, time=2015-05-27 17:03:54.178, clock=0]
object notification: Tile [id=null, cell=Cell [x=2, y=6], subject=brown, time=2015-05-27 17:03:54.18, clock=0]
org notification: Goal [id=null, cell=Cell [x=3, y=3], agent=null, time=2015-05-27 17:03:54.242, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=0], subject=white, time=2015-05-27 17:03:54.181, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=1], subject=yellow, time=2015-05-27 17:03:54.183, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-27 17:03:54.2, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=2], subject=blue, time=2015-05-27 17:03:54.184, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=3], subject=blue, time=2015-05-27 17:03:54.186, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=4], subject=yellow, time=2015-05-27 17:03:54.187, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=5], subject=yellow, time=2015-05-27 17:03:54.189, clock=0]
object notification: Tile [id=null, cell=Cell [x=3, y=6], subject=white, time=2015-05-27 17:03:54.19, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-27 17:03:54.191, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-27 17:03:54.201, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-27 17:03:54.192, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-27 17:03:54.194, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-27 17:03:54.202, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-27 17:03:54.204, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-27 17:03:54.195, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-27 17:03:54.205, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-27 17:03:54.196, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-27 17:03:54.203, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-27 17:03:54.206, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-27 17:03:54.197, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-27 17:03:54.207, clock=0]
object notification: Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-27 17:03:54.198, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-27 17:03:54.204, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-27 17:03:54.199, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-27 17:03:54.208, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-27 17:03:54.2, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-27 17:03:54.205, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-27 17:03:54.209, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-27 17:03:54.206, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-27 17:03:54.21, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-27 17:03:54.207, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-27 17:03:54.201, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-27 17:03:54.202, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-27 17:03:54.203, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-27 17:03:54.208, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-27 17:03:54.204, clock=0]
object notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-27 17:03:54.205, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-27 17:03:54.206, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-27 17:03:54.209, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-27 17:03:54.207, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-27 17:03:54.208, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-27 17:03:54.209, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-27 17:03:54.21, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-27 17:03:54.21, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-27 17:03:54.211, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-27 17:03:54.211, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-27 17:03:54.212, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-27 17:03:54.212, clock=0]
object notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-27 17:03:54.211, clock=0]
object notification: Prohibition [subject=a30, prohibition=[rejectRequests], sanction=[reduce(a30, 500)], clock=4, time=2015-05-27 17:04:25.326]
object notification: Prohibition [subject=a10, prohibition=[rejectRequests], sanction=[reduce(a10, 500)], clock=4, time=2015-05-27 17:04:25.315]
object notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-27 17:03:54.212, clock=0]
object notification: Prohibition [subject=a10, prohibition=[moveTooFast], sanction=[reduce(a10, 300)], clock=4, time=2015-05-27 17:04:25.377]
object notification: Prohibition [subject=a40, prohibition=[rejectRequests], sanction=[reduce(a40, 500)], clock=4, time=2015-05-27 17:04:25.371]
object notification: Prohibition [subject=a30, prohibition=[moveTooFast], sanction=[reduce(a30, 300)], clock=4, time=2015-05-27 17:04:25.384]
object notification: Prohibition [subject=a40, prohibition=[moveTooFast], sanction=[reduce(a40, 300)], clock=4, time=2015-05-27 17:04:25.391]
Event processed UpdateTile(brown, 1, 5)
Event processed UpdateTile(yellow, 1, 6)
Event processed UpdateClock(2)
Event processed UpdateClock(3)
Event processed UpdateClock(4)
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(white, 2, 1)
Event processed UpdateTile(brown, 2, 2)
Event processed UpdateTile(blue, 1, 4)
Event processed UpdateTile(blue, 2, 3)
Event processed UpdateClock(2)
Event processed UpdateTile(white, 2, 4)
Event processed UpdateClock(3)
Event processed UpdateTile(brown, 2, 5)
Event processed UpdateClock(4)
Event processed UpdateTile(brown, 2, 6)
Event processed UpdateTile(brown, 1, 5)
Event processed UpdateTile(white, 3, 0)
Event processed UpdateTile(yellow, 1, 6)
Event processed UpdateTile(yellow, 3, 1)
Event processed UpdateTile(white, 2, 0)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(white, 2, 1)
Event processed UpdateTile(blue, 3, 3)
Event processed UpdateTile(brown, 2, 2)
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(blue, 2, 3)
Event processed UpdateTile(yellow, 3, 5)
Event processed UpdateTile(white, 2, 4)
Event processed UpdateTile(white, 3, 6)
Event processed UpdateTile(brown, 2, 5)
Event processed UpdateTile(brown, 4, 0)
Event processed UpdateTile(brown, 2, 6)
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(white, 3, 0)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(yellow, 3, 1)
Event processed UpdateTile(blue, 4, 3)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(brown, 4, 4)
Event processed UpdateTile(blue, 3, 3)
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(yellow, 3, 5)
Event processed UpdateTile(yellow, 4, 5)
Event processed UpdateTile(white, 3, 6)
Event processed UpdateTile(brown, 4, 6)
Event processed UpdateTile(brown, 4, 0)
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(yellow, 5, 0)
Event processed UpdateTile(yellow, 4, 2)
Event processed UpdateTile(white, 5, 1)
Event processed UpdateTile(blue, 4, 3)
Event processed UpdateTile(brown, 5, 2)
Event processed UpdateTile(brown, 4, 4)
Event processed UpdateTile(yellow, 5, 3)
object notification: Obligation [subject=a10, obligation=[surround(3, 3)], sanction=[reduce(g, 700)], deadline=34, time=2015-05-27 17:04:25.425, clock=4]
Event processed UpdateTile(yellow, 4, 5)
Event processed UpdateTile(blue, 5, 4)
Event processed UpdateTile(brown, 4, 6)
Event processed UpdateTile(brown, 5, 5)
Event processed UpdateTile(yellow, 5, 0)
Event processed UpdateTile(white, 5, 6)
Event processed UpdateTile(white, 5, 1)
Event processed UpdateTile(blue, 6, 0)
Event processed UpdateTile(brown, 5, 2)
Event processed UpdateTile(brown, 6, 1)
Event processed UpdateTile(yellow, 5, 3)
Event processed UpdateTile(white, 6, 2)
Event processed UpdateTile(blue, 5, 4)
Event processed UpdateTile(brown, 6, 3)
Event processed UpdateTile(brown, 5, 5)
Event processed UpdateTile(white, 6, 4)
Event processed UpdateTile(white, 5, 6)
Event processed UpdateTile(brown, 6, 5)
Event processed UpdateTile(blue, 6, 0)
Event processed UpdateTile(white, 6, 6)
Event processed UpdateTile(brown, 6, 1)
Event processed adoptProhibition(rejectRequests, reduce(a40, 500))
Event processed UpdateTile(white, 6, 2)
Event processed adoptProhibition(moveTooFast, reduce(a40, 300))
Event processed UpdateTile(brown, 6, 3)
Event processed UpdateTile(white, 6, 4)
org notification: Tile [id=null, cell=Cell [x=4, y=0], subject=brown, time=2015-05-27 17:03:54.191, clock=0]
Event processed UpdateTile(blue, 1, 4)
Event processed UpdateTile(brown, 6, 5)
Event processed UpdateTile(brown, 1, 5)
Event processed UpdateTile(white, 6, 6)
Event processed adoptProhibition(rejectRequests, reduce(a30, 500))
Event processed UpdateTile(yellow, 1, 6)
Event processed UpdateTile(white, 2, 0)
Event processed adoptProhibition(moveTooFast, reduce(a30, 300))
Event processed UpdateTile(white, 2, 1)
org notification: Tile [id=null, cell=Cell [x=4, y=1], subject=blue, time=2015-05-27 17:03:54.192, clock=0]
Event processed UpdateTile(brown, 2, 2)
Event processed UpdateClock(2)
[Planbase]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateClock(2)
},
{	UpdateClock(3)
},
{	UpdateClock(4)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
},
{	adoptProhibition(rejectRequests, reduce(a40, 500))
},
{	adoptProhibition(moveTooFast, reduce(a40, 300))
}


[new scheduled]:[GetPhase(communicationphase); B(clock(Clock)); if B(event(phasechange)) then Updated, UpdateTile(brown, 1, 5), UpdateTile(yellow, 1, 6), UpdateClock(2), UpdateClock(3), UpdateClock(4), UpdateTile(white, 2, 0), UpdateTile(white, 2, 1), UpdateTile(brown, 2, 2), UpdateTile(blue, 2, 3), UpdateTile(white, 2, 4), UpdateTile(brown, 2, 5), UpdateTile(brown, 2, 6), UpdateTile(white, 3, 0), UpdateTile(yellow, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(blue, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(yellow, 3, 5), UpdateTile(white, 3, 6), UpdateTile(brown, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(blue, 4, 3), UpdateTile(brown, 4, 4), UpdateTile(yellow, 4, 5), UpdateTile(brown, 4, 6), UpdateTile(yellow, 5, 0), UpdateTile(white, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(yellow, 5, 3), UpdateTile(blue, 5, 4), UpdateTile(brown, 5, 5), UpdateTile(white, 5, 6), UpdateTile(blue, 6, 0), UpdateTile(brown, 6, 1), UpdateTile(white, 6, 2), UpdateTile(brown, 6, 3), UpdateTile(white, 6, 4), UpdateTile(brown, 6, 5), UpdateTile(white, 6, 6), adoptProhibition(rejectRequests, reduce(a40, 500)), adoptProhibition(moveTooFast, reduce(a40, 300))]
[After]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateClock(2)
},
{	UpdateClock(3)
},
{	UpdateClock(4)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
},
{	adoptProhibition(rejectRequests, reduce(a40, 500))
},
{	adoptProhibition(moveTooFast, reduce(a40, 300))
}


Event processed UpdateTile(blue, 2, 3)
Event processed UpdateTile(white, 2, 4)
org notification: Tile [id=null, cell=Cell [x=4, y=2], subject=yellow, time=2015-05-27 17:03:54.194, clock=0]
Event processed UpdateTile(brown, 2, 5)
Event processed UpdateTile(brown, 2, 6)
Event processed UpdateTile(white, 3, 0)
Event processed UpdateTile(yellow, 3, 1)
Event processed UpdateTile(blue, 3, 2)
Event processed UpdateTile(blue, 3, 3)
Event processed UpdateTile(yellow, 3, 4)
Event processed UpdateTile(yellow, 3, 5)
org notification: Tile [id=null, cell=Cell [x=4, y=3], subject=blue, time=2015-05-27 17:03:54.195, clock=0]
Event processed UpdateTile(white, 3, 6)
Event processed UpdateTile(brown, 4, 0)
Event processed UpdateTile(blue, 4, 1)
Event processed UpdateTile(yellow, 4, 2)
[Planbase]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateClock(2)
},
{	UpdateClock(3)
},
{	UpdateClock(4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
},
{	adoptProhibition(rejectRequests, reduce(a30, 500))
},
{	adoptProhibition(moveTooFast, reduce(a30, 300))
}


[new scheduled]:[GetPhase(communicationphase); B(clock(Clock)); if B(event(phasechange)) then Updated, UpdateTile(blue, 1, 4), UpdateClock(2), UpdateClock(3), UpdateClock(4), UpdateTile(brown, 1, 5), UpdateTile(yellow, 1, 6), UpdateTile(white, 2, 0), UpdateTile(white, 2, 1), UpdateTile(brown, 2, 2), UpdateTile(blue, 2, 3), UpdateTile(white, 2, 4), UpdateTile(brown, 2, 5), UpdateTile(brown, 2, 6), UpdateTile(white, 3, 0), UpdateTile(yellow, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(blue, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(yellow, 3, 5), UpdateTile(white, 3, 6), UpdateTile(brown, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(yellow, 4, 2), UpdateTile(blue, 4, 3), UpdateTile(brown, 4, 4), UpdateTile(yellow, 4, 5), UpdateTile(brown, 4, 6), UpdateTile(yellow, 5, 0), UpdateTile(white, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(yellow, 5, 3), UpdateTile(blue, 5, 4), UpdateTile(brown, 5, 5), UpdateTile(white, 5, 6), UpdateTile(blue, 6, 0), UpdateTile(brown, 6, 1), UpdateTile(white, 6, 2), UpdateTile(brown, 6, 3), UpdateTile(white, 6, 4), UpdateTile(brown, 6, 5), UpdateTile(white, 6, 6), adoptProhibition(rejectRequests, reduce(a30, 500)), adoptProhibition(moveTooFast, reduce(a30, 300))]
[After]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateClock(2)
},
{	UpdateClock(3)
},
{	UpdateClock(4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	UpdateTile(white, 6, 6)
},
{	adoptProhibition(rejectRequests, reduce(a30, 500))
},
{	adoptProhibition(moveTooFast, reduce(a30, 300))
}


Event processed UpdateClock(3)
Event processed UpdateTile(blue, 4, 3)
Event processed UpdateClock(4)
Event processed UpdateTile(brown, 4, 4)
Event processed UpdateTile(yellow, 4, 5)
Event processed UpdateTile(brown, 4, 6)
Event processed UpdateTile(yellow, 5, 0)
org notification: Tile [id=null, cell=Cell [x=4, y=4], subject=brown, time=2015-05-27 17:03:54.196, clock=0]
Event processed UpdateTile(white, 5, 1)
Event processed UpdateTile(brown, 5, 2)
org notification: Tile [id=null, cell=Cell [x=4, y=5], subject=yellow, time=2015-05-27 17:03:54.197, clock=0]
Event processed UpdateTile(yellow, 5, 3)
Event processed UpdateTile(blue, 5, 4)
Event processed UpdateTile(brown, 5, 5)
Event processed UpdateTile(white, 5, 6)
org notification: Tile [id=null, cell=Cell [x=4, y=6], subject=brown, time=2015-05-27 17:03:54.198, clock=0]
Event processed UpdateTile(blue, 6, 0)
Event processed UpdateTile(brown, 6, 1)
Event processed UpdateTile(white, 6, 2)
Event processed UpdateTile(brown, 6, 3)
org notification: Tile [id=null, cell=Cell [x=5, y=0], subject=yellow, time=2015-05-27 17:03:54.199, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=1], subject=white, time=2015-05-27 17:03:54.2, clock=0]
Event processed UpdateTile(white, 6, 4)
Event processed UpdateTile(brown, 6, 5)
Event processed adoptProhibition(rejectRequests, reduce(a10, 500))
org notification: Tile [id=null, cell=Cell [x=5, y=2], subject=brown, time=2015-05-27 17:03:54.201, clock=0]
Event processed UpdateTile(white, 6, 6)
Event processed adoptProhibition(moveTooFast, reduce(a10, 300))
org notification: Tile [id=null, cell=Cell [x=5, y=3], subject=yellow, time=2015-05-27 17:03:54.202, clock=0]
Event processed adoptObligation(surround(3, 3), 34, reduce(g, 700))
org notification: Tile [id=null, cell=Cell [x=5, y=4], subject=blue, time=2015-05-27 17:03:54.203, clock=0]
org notification: Tile [id=null, cell=Cell [x=5, y=5], subject=brown, time=2015-05-27 17:03:54.204, clock=0]
[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated, AdoptP(rejectRequests(500)); aprohibition(rejectRequests(500) -> reduce(500), priority 0), AdoptP(movedTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


org notification: Tile [id=null, cell=Cell [x=5, y=6], subject=white, time=2015-05-27 17:03:54.205, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=0], subject=blue, time=2015-05-27 17:03:54.206, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=1], subject=brown, time=2015-05-27 17:03:54.207, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=2], subject=white, time=2015-05-27 17:03:54.208, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=3], subject=brown, time=2015-05-27 17:03:54.209, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=4], subject=white, time=2015-05-27 17:03:54.21, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=5], subject=brown, time=2015-05-27 17:03:54.211, clock=0]
org notification: Tile [id=null, cell=Cell [x=6, y=6], subject=white, time=2015-05-27 17:03:54.212, clock=0]
[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated, AdoptP(rejectRequests(500)); aprohibition(rejectRequests(500) -> reduce(500), priority 0), AdoptP(movedTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateClock(2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateClock(3)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateClock(4)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	adoptProhibition(rejectRequests, reduce(a10, 500))
},
{	UpdateTile(white, 6, 6)
},
{	adoptProhibition(moveTooFast, reduce(a10, 300))
},
{	adoptObligation(surround(3, 3), 34, reduce(g, 700))
}


[new scheduled]:[GetPhase(communicationphase); B(clock(Clock)); if B(event(phasechange)) then Updated, UpdateTile(blue, 1, 4), UpdateTile(brown, 1, 5), UpdateTile(yellow, 1, 6), UpdateTile(white, 2, 0), UpdateTile(white, 2, 1), UpdateTile(brown, 2, 2), UpdateClock(2), UpdateTile(blue, 2, 3), UpdateTile(white, 2, 4), UpdateTile(brown, 2, 5), UpdateTile(brown, 2, 6), UpdateTile(white, 3, 0), UpdateTile(yellow, 3, 1), UpdateTile(blue, 3, 2), UpdateTile(blue, 3, 3), UpdateTile(yellow, 3, 4), UpdateTile(yellow, 3, 5), UpdateTile(white, 3, 6), UpdateTile(brown, 4, 0), UpdateTile(blue, 4, 1), UpdateTile(yellow, 4, 2), UpdateClock(3), UpdateTile(blue, 4, 3), UpdateClock(4), UpdateTile(brown, 4, 4), UpdateTile(yellow, 4, 5), UpdateTile(brown, 4, 6), UpdateTile(yellow, 5, 0), UpdateTile(white, 5, 1), UpdateTile(brown, 5, 2), UpdateTile(yellow, 5, 3), UpdateTile(blue, 5, 4), UpdateTile(brown, 5, 5), UpdateTile(white, 5, 6), UpdateTile(blue, 6, 0), UpdateTile(brown, 6, 1), UpdateTile(white, 6, 2), UpdateTile(brown, 6, 3), UpdateTile(white, 6, 4), UpdateTile(brown, 6, 5), adoptProhibition(rejectRequests, reduce(a10, 500)), UpdateTile(white, 6, 6), adoptProhibition(moveTooFast, reduce(a10, 300)), adoptObligation(surround(3, 3), 34, reduce(g, 700))]
[After]:{	GetPhase(communicationphase);
	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	UpdateTile(blue, 1, 4)
},
{	UpdateTile(brown, 1, 5)
},
{	UpdateTile(yellow, 1, 6)
},
{	UpdateTile(white, 2, 0)
},
{	UpdateTile(white, 2, 1)
},
{	UpdateTile(brown, 2, 2)
},
{	UpdateClock(2)
},
{	UpdateTile(blue, 2, 3)
},
{	UpdateTile(white, 2, 4)
},
{	UpdateTile(brown, 2, 5)
},
{	UpdateTile(brown, 2, 6)
},
{	UpdateTile(white, 3, 0)
},
{	UpdateTile(yellow, 3, 1)
},
{	UpdateTile(blue, 3, 2)
},
{	UpdateTile(blue, 3, 3)
},
{	UpdateTile(yellow, 3, 4)
},
{	UpdateTile(yellow, 3, 5)
},
{	UpdateTile(white, 3, 6)
},
{	UpdateTile(brown, 4, 0)
},
{	UpdateTile(blue, 4, 1)
},
{	UpdateTile(yellow, 4, 2)
},
{	UpdateClock(3)
},
{	UpdateTile(blue, 4, 3)
},
{	UpdateClock(4)
},
{	UpdateTile(brown, 4, 4)
},
{	UpdateTile(yellow, 4, 5)
},
{	UpdateTile(brown, 4, 6)
},
{	UpdateTile(yellow, 5, 0)
},
{	UpdateTile(white, 5, 1)
},
{	UpdateTile(brown, 5, 2)
},
{	UpdateTile(yellow, 5, 3)
},
{	UpdateTile(blue, 5, 4)
},
{	UpdateTile(brown, 5, 5)
},
{	UpdateTile(white, 5, 6)
},
{	UpdateTile(blue, 6, 0)
},
{	UpdateTile(brown, 6, 1)
},
{	UpdateTile(white, 6, 2)
},
{	UpdateTile(brown, 6, 3)
},
{	UpdateTile(white, 6, 4)
},
{	UpdateTile(brown, 6, 5)
},
{	adoptProhibition(rejectRequests, reduce(a10, 500))
},
{	UpdateTile(white, 6, 6)
},
{	adoptProhibition(moveTooFast, reduce(a10, 300))
},
{	adoptObligation(surround(3, 3), 34, reduce(g, 700))
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[if B(event(phasechange)) then Updated, aprohibition(rejectRequests(500) -> reduce(500), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[if B(event(phasechange)) then Updated, aprohibition(rejectRequests(500) -> reduce(500), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	adoptz(surround(3, 3, 700) : 27 May 2015 16:21:05 GMT, priority 10)
}


[new scheduled]:[B(clock(Clock)); if B(event(phasechange)) then Updated, AdoptP(rejectRequests(500)); aprohibition(rejectRequests(500) -> reduce(500), priority 0), AdoptP(movedTooFast(300)); aprohibition(moveTooFast(300) -> reduce(300), priority 0), adoptz(surround(3, 3, 700) : 27 May 2015 16:21:05 GMT, priority 10)]
[After]:{	B(clock(Clock));
	if	B(event(phasechange))
	then	{	Updated
		}
},
{	AdoptP(rejectRequests(500));
	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	AdoptP(movedTooFast(300));
	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
},
{	adoptz(surround(3, 3, 700) : 27 May 2015 16:21:05 GMT, priority 10)
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:{	Updated
}


[new scheduled]:[Updated]
[After]:{	Updated
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[new scheduled]:[Surround(3, 3); sendSouth(a10, 3, 3, 100); sendWest(a20, 3, 3, 100); sendEast(a30, 3, 3, 100); sendNorth(a40, 3, 3, 100); color(white, a10, yes, 100); color(white, a20, yes, 100); color(white, a30, yes, 100); color(white, a40, yes, 100); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), if B(event(phasechange)) then Updated, aprohibition(rejectRequests(500) -> reduce(500), priority 0), aprohibition(moveTooFast(300) -> reduce(300), priority 0)]
[After]:{	if	B(event(phasechange))
	then	{	Updated
		}
},
{	Surround(3, 3);
	sendSouth(a10, 3, 3, 100);
	sendWest(a20, 3, 3, 100);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 100);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	aprohibition(rejectRequests(500) -> reduce(500), priority 0)
},
{	aprohibition(moveTooFast(300) -> reduce(300), priority 0)
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	Updated
},
{	sendSouth(a10, 3, 3, 100);
	sendWest(a20, 3, 3, 100);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 100);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[Updated, sendSouth(a10, 3, 3, 100); sendWest(a20, 3, 3, 100); sendEast(a30, 3, 3, 100); sendNorth(a40, 3, 3, 100); color(white, a10, yes, 100); color(white, a20, yes, 100); color(white, a30, yes, 100); color(white, a40, yes, 100); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	Updated
},
{	sendSouth(a10, 3, 3, 100);
	sendWest(a20, 3, 3, 100);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 100);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[Planbase]:{	@ctenv(setGoal(a10, 3, 2, 3, 3, 100),L,0);
	sendWest(a20, 3, 3, 100);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 100);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a10, 3, 2, 3, 3, 100),L,0); sendWest(a20, 3, 3, 100); sendEast(a30, 3, 3, 100); sendNorth(a40, 3, 3, 100); color(white, a10, yes, 100); color(white, a20, yes, 100); color(white, a30, yes, 100); color(white, a40, yes, 100); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	@ctenv(setGoal(a10, 3, 2, 3, 3, 100),L,0);
	sendWest(a20, 3, 3, 100);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 100);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


agent writes: SetGoal [id=null, agent=a10, cell=Cell [x=3, y=2], goal=Cell [x=3, y=3], sanction=100, clock=4, time=2015-05-27 17:04:26.607]
org notification: SetGoal [id=null, agent=a10, cell=Cell [x=3, y=2], goal=Cell [x=3, y=3], sanction=100, clock=4, time=2015-05-27 17:04:26.607]
object notification: Obligation [subject=a10, obligation=[at(3, 2, a10)], sanction=[reduce(a10, 700)], deadline=30, time=2015-05-27 17:04:26.623, clock=4]
Event processed adoptObligation(at(3, 2, a10), 30, reduce(a10, 700))
[Planbase]:{	@ctenv(setGoal(a20, 2, 3, 3, 3, 100),L,0);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 100);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptObligation(at(3, 2, a10), 30, reduce(a10, 700))
}


[new scheduled]:[@ctenv(setGoal(a20, 2, 3, 3, 3, 100),L,0); sendEast(a30, 3, 3, 100); sendNorth(a40, 3, 3, 100); color(white, a10, yes, 100); color(white, a20, yes, 100); color(white, a30, yes, 100); color(white, a40, yes, 100); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), adoptObligation(at(3, 2, a10), 30, reduce(a10, 700))]
[After]:{	@ctenv(setGoal(a20, 2, 3, 3, 3, 100),L,0);
	sendEast(a30, 3, 3, 100);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 100);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptObligation(at(3, 2, a10), 30, reduce(a10, 700))
}


agent writes: SetGoal [id=null, agent=a20, cell=Cell [x=2, y=3], goal=Cell [x=3, y=3], sanction=100, clock=4, time=2015-05-27 17:04:26.715]
org notification: SetGoal [id=null, agent=a20, cell=Cell [x=2, y=3], goal=Cell [x=3, y=3], sanction=100, clock=4, time=2015-05-27 17:04:26.715]
[Planbase]:{	@ctenv(setGoal(a30, 4, 3, 3, 3, 100),L,0);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 100);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptz(at(3, 2, 700) : 27 May 2015 16:21:06 GMT, priority 10)
}


[new scheduled]:[@ctenv(setGoal(a30, 4, 3, 3, 3, 100),L,0); sendNorth(a40, 3, 3, 100); color(white, a10, yes, 100); color(white, a20, yes, 100); color(white, a30, yes, 100); color(white, a40, yes, 100); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), adoptz(at(3, 2, 700) : 27 May 2015 16:21:06 GMT, priority 10)]
[After]:{	@ctenv(setGoal(a30, 4, 3, 3, 3, 100),L,0);
	sendNorth(a40, 3, 3, 100);
	color(white, a10, yes, 100);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptz(at(3, 2, 700) : 27 May 2015 16:21:06 GMT, priority 10)
}


agent writes: SetGoal [id=null, agent=a30, cell=Cell [x=4, y=3], goal=Cell [x=3, y=3], sanction=100, clock=4, time=2015-05-27 17:04:26.804]
org notification: SetGoal [id=null, agent=a30, cell=Cell [x=4, y=3], goal=Cell [x=3, y=3], sanction=100, clock=4, time=2015-05-27 17:04:26.804]
object notification: Obligation [subject=a30, obligation=[at(4, 3, a30)], sanction=[reduce(a30, 700)], deadline=30, time=2015-05-27 17:04:26.808, clock=4]
[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	@ctenv(setGoal(a40, 3, 4, 3, 3, 100),L,0);
	color(white, a10, yes, 100);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(setGoal(a40, 3, 4, 3, 3, 100),L,0); color(white, a10, yes, 100); color(white, a20, yes, 100); color(white, a30, yes, 100); color(white, a40, yes, 100); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(setGoal(a40, 3, 4, 3, 3, 100),L,0);
	color(white, a10, yes, 100);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


Event processed adoptObligation(at(4, 3, a30), 30, reduce(a30, 700))
agent writes: SetGoal [id=null, agent=a40, cell=Cell [x=3, y=4], goal=Cell [x=3, y=3], sanction=100, clock=4, time=2015-05-27 17:04:26.917]
org notification: SetGoal [id=null, agent=a40, cell=Cell [x=3, y=4], goal=Cell [x=3, y=3], sanction=100, clock=4, time=2015-05-27 17:04:26.917]
object notification: Obligation [subject=a40, obligation=[at(3, 4, a40)], sanction=[reduce(a40, 700)], deadline=30, time=2015-05-27 17:04:26.921, clock=4]
[Planbase]:{	adoptObligation(at(4, 3, a30), 30, reduce(a30, 700))
}


[new scheduled]:[adoptObligation(at(4, 3, a30), 30, reduce(a30, 700))]
[After]:{	adoptObligation(at(4, 3, a30), 30, reduce(a30, 700))
}


[Planbase]:


[new scheduled]:[]
[After]:


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(setColor(a10, white, yes, 100),L,0);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(setColor(a10, white, yes, 100),L,0); color(white, a20, yes, 100); color(white, a30, yes, 100); color(white, a40, yes, 100); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(setColor(a10, white, yes, 100),L,0);
	color(white, a20, yes, 100);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


Event processed adoptObligation(at(3, 4, a40), 30, reduce(a40, 700))
[Planbase]:{	adoptz(at(4, 3, 700) : 27 May 2015 16:21:06 GMT, priority 10)
}


[new scheduled]:[adoptz(at(4, 3, 700) : 27 May 2015 16:21:06 GMT, priority 10)]
[After]:{	adoptz(at(4, 3, 700) : 27 May 2015 16:21:06 GMT, priority 10)
}


agent writes: Color [id=null, color=white, agent=a10, type=yes, sanction=100, time=2015-05-27 17:04:27.055, clock=4]
[Planbase]:{	adoptObligation(at(3, 4, a40), 30, reduce(a40, 700))
}


[new scheduled]:[adoptObligation(at(3, 4, a40), 30, reduce(a40, 700))]
[After]:{	adoptObligation(at(3, 4, a40), 30, reduce(a40, 700))
}


org notification: Color [id=null, color=white, agent=a10, type=yes, sanction=100, time=2015-05-27 17:04:27.055, clock=4]
object notification: Obligation [subject=a10, obligation=[color(white, a10)], sanction=[reduce(a10, 100)], deadline=24, time=2015-05-27 17:04:27.067, clock=4]
Event processed adoptObligation(color(white, a10), 24, reduce(a10, 100))
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(setColor(a20, white, yes, 100),L,0);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptObligation(color(white, a10), 24, reduce(a10, 100))
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(setColor(a20, white, yes, 100),L,0); color(white, a30, yes, 100); color(white, a40, yes, 100); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), adoptObligation(color(white, a10), 24, reduce(a10, 100))]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(setColor(a20, white, yes, 100),L,0);
	color(white, a30, yes, 100);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptObligation(color(white, a10), 24, reduce(a10, 100))
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:{	adoptz(at(3, 4, 700) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[adoptz(at(3, 4, 700) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	adoptz(at(3, 4, 700) : 27 May 2015 16:21:07 GMT, priority 10)
}


agent writes: Color [id=null, color=white, agent=a20, type=yes, sanction=100, time=2015-05-27 17:04:27.218, clock=4]
org notification: Color [id=null, color=white, agent=a20, type=yes, sanction=100, time=2015-05-27 17:04:27.218, clock=4]
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(setColor(a30, white, yes, 100),L,0);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(setColor(a30, white, yes, 100),L,0); color(white, a40, yes, 100); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(setColor(a30, white, yes, 100),L,0);
	color(white, a40, yes, 100);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A1,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A1,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[Planbase]:


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


agent writes: Color [id=null, color=white, agent=a30, type=yes, sanction=100, time=2015-05-27 17:04:27.374, clock=4]
org notification: Color [id=null, color=white, agent=a30, type=yes, sanction=100, time=2015-05-27 17:04:27.374, clock=4]
object notification: Obligation [subject=a30, obligation=[color(white, a30)], sanction=[reduce(a30, 100)], deadline=24, time=2015-05-27 17:04:27.381, clock=4]
Event processed adoptObligation(color(white, a30), 24, reduce(a30, 100))
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(setColor(a40, white, yes, 100),L,0);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
}


[new scheduled]:[if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(setColor(a40, white, yes, 100),L,0); color(blue, a10, no, 100); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(setColor(a40, white, yes, 100),L,0);
	color(blue, a10, no, 100);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	B([A1,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptObligation(color(white, a30), 24, reduce(a30, 100))
}


[new scheduled]:[B([A1,B]=[4,3]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptObligation(color(white, a30), 24, reduce(a30, 100))]
[After]:{	B([A1,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptObligation(color(white, a30), 24, reduce(a30, 100))
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A1,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A1,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


agent writes: Color [id=null, color=white, agent=a40, type=yes, sanction=100, time=2015-05-27 17:04:27.534, clock=4]
org notification: Color [id=null, color=white, agent=a40, type=yes, sanction=100, time=2015-05-27 17:04:27.534, clock=4]
object notification: Obligation [subject=a40, obligation=[color(white, a40)], sanction=[reduce(a40, 100)], deadline=24, time=2015-05-27 17:04:27.538, clock=4]
Event processed adoptObligation(color(white, a40), 24, reduce(a40, 100))
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(setColor(a10, blue, no, 100),L,0);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(setColor(a10, blue, no, 100),L,0); color(blue, a20, no, 100); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(setColor(a10, blue, no, 100),L,0);
	color(blue, a20, no, 100);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	B([A1,B]=[3,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptObligation(color(white, a40), 24, reduce(a40, 100))
}


[new scheduled]:[B([A1,B]=[3,4]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptObligation(color(white, a40), 24, reduce(a40, 100))]
[After]:{	B([A1,B]=[3,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptObligation(color(white, a40), 24, reduce(a40, 100))
}


agent writes: Color [id=null, color=blue, agent=a10, type=no, sanction=100, time=2015-05-27 17:04:27.692, clock=4]
org notification: Color [id=null, color=blue, agent=a10, type=no, sanction=100, time=2015-05-27 17:04:27.692, clock=4]
object notification: Prohibition [subject=a10, prohibition=[color(blue, a10)], sanction=[reduce(a10, 100)], clock=4, time=2015-05-27 17:04:27.695]
Event processed adoptProhibition(color(blue, a10), reduce(a10, 100))
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(setColor(a20, blue, no, 100),L,0);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	adoptProhibition(color(blue, a10), reduce(a10, 100))
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(setColor(a20, blue, no, 100),L,0); color(blue, a30, no, 100); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), adoptProhibition(color(blue, a10), reduce(a10, 100))]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(setColor(a20, blue, no, 100),L,0);
	color(blue, a30, no, 100);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	adoptProhibition(color(blue, a10), reduce(a10, 100))
}


[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


agent writes: Color [id=null, color=blue, agent=a20, type=no, sanction=100, time=2015-05-27 17:04:27.838, clock=4]
org notification: Color [id=null, color=blue, agent=a20, type=no, sanction=100, time=2015-05-27 17:04:27.838, clock=4]
a30[CTAH] going goal: 4,3 color: neco
[Planbase]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
}


[new scheduled]:[if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), @ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0);
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(setColor(a30, blue, no, 100),L,0);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(setColor(a30, blue, no, 100),L,0); color(blue, a40, no, 100); dropgoal(surround(3, 3, 700) : Infinite, priority 10), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), AdoptP(useColor(blue, 100)); aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(setColor(a30, blue, no, 100),L,0);
	color(blue, a40, no, 100);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


a40[CTAH] going goal: 3,4 color: neco
agent writes: Color [id=null, color=blue, agent=a30, type=no, sanction=100, time=2015-05-27 17:04:28.007, clock=4]
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(setColor(a40, blue, no, 100),L,0);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), @ctenv(setColor(a40, blue, no, 100),L,0); dropgoal(surround(3, 3, 700) : Infinite, priority 10), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	@ctenv(setColor(a40, blue, no, 100),L,0);
	dropgoal(surround(3, 3, 700) : Infinite, priority 10)
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


agent writes: Color [id=null, color=blue, agent=a40, type=no, sanction=100, time=2015-05-27 17:04:28.128, clock=4]
[Planbase]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A1,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A1,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	B([A1,B]=[3,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[B([A1,B]=[3,2]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	B([A1,B]=[3,2]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 2, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(blue, no, 3, 2, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 3, 2, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(not ID=no)
	then	{	NextStep(Xa, Ya, ID);
			Sent(ID, Agent, open, Clock)
		}
	else	{	NextStep(Xa, Ya)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	B(clock(Clock));
	if	B(not ID=no)
	then	{	NextStep(Xa, Ya, ID);
			Sent(ID, Agent, open, Clock)
		}
	else	{	NextStep(Xa, Ya)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(not ID=no)
	then	{	NextStep(Xa, Ya, ID);
			Sent(ID, Agent, open, 4)
		}
	else	{	NextStep(Xa, Ya)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, 4)} else NextStep(Xa, Ya); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(not ID=no)
	then	{	NextStep(Xa, Ya, ID);
			Sent(ID, Agent, open, 4)
		}
	else	{	NextStep(Xa, Ya)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


org notification: Color [id=null, color=blue, agent=a30, type=no, sanction=100, time=2015-05-27 17:04:28.007, clock=4]
object notification: Time [clock=5, time=2015-05-27 17:04:28.894]
object notification: Time [clock=5, time=2015-05-27 17:04:28.894]
org notification: Time [clock=5, time=2015-05-27 17:04:28.894]
object notification: Time [clock=5, time=2015-05-27 17:04:28.894]
object notification: Prohibition [subject=a30, prohibition=[color(blue, a30)], sanction=[reduce(a30, 100)], clock=5, time=2015-05-27 17:04:29.212]
org notification: Color [id=null, color=blue, agent=a40, type=no, sanction=100, time=2015-05-27 17:04:28.128, clock=4]
object notification: Prohibition [subject=a40, prohibition=[color(blue, a40)], sanction=[reduce(a40, 100)], clock=5, time=2015-05-27 17:04:29.22]
Event processed UpdateClock(5)
[Planbase]:{	NextStep(Xa, Ya);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(5)
}


[new scheduled]:[NextStep(Xa, Ya); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), UpdateClock(5)]
[After]:{	NextStep(Xa, Ya);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(5)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, X1, Y1),L2,0);
	if	B(L2=[actionresult([X1,Y1])])
	then	{	B(clock(Clock));
			UpdatePosition(X1, Y1, Clock)
		};
	NoNextStep(X1, Y1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, X1, Y1),L2,0); if B(L2=[actionresult([X1,Y1])]) then {B(clock(Clock)); UpdatePosition(X1, Y1, Clock)}; NoNextStep(X1, Y1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 0)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	@ctenv(moveStepToGoal(neco, X1, Y1),L2,0);
	if	B(L2=[actionresult([X1,Y1])])
	then	{	B(clock(Clock));
			UpdatePosition(X1, Y1, Clock)
		};
	NoNextStep(X1, Y1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 0))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


a40[CTAH] paths: 1000
Need to wait 3 more seconds
a30[CTAH] paths: 1000
a30[CTAH] path: 0
a30[CTAH] path: Path: [6][6] [6][5] [5][5] [4][5] [4][4] [4][3]

a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] moveStepToGoalTest proposals: null
a30[CTAH] found a chip....: (R:6,C:5)
a30[CTAH] moveStepToGoalTest sent proposal for: [6,5,1,1233]
Event processed UpdateClock(5)
Event processed adoptProhibition(color(blue, a30), reduce(a30, 100))
org notification: Proposal [id=1233, agent=a30, agent2=a20, clock=5, time=2015-05-27 17:04:33.682]
[Planbase]:{	B(clock(Clock));
	if	B(not 1233=no)
	then	{	NextStep(6, 5, 1233);
			Sent(1233, 1, open, Clock)
		}
	else	{	NextStep(6, 5)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
},
{	UpdateClock(5)
},
{	adoptProhibition(color(blue, a30), reduce(a30, 100))
}


[new scheduled]:[B(clock(Clock)); if B(not 1233=no) then {NextStep(6, 5, 1233); Sent(1233, 1, open, Clock)} else NextStep(6, 5); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10), UpdateClock(5), adoptProhibition(color(blue, a30), reduce(a30, 100))]
[After]:{	B(clock(Clock));
	if	B(not 1233=no)
	then	{	NextStep(6, 5, 1233);
			Sent(1233, 1, open, Clock)
		}
	else	{	NextStep(6, 5)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
},
{	UpdateClock(5)
},
{	adoptProhibition(color(blue, a30), reduce(a30, 100))
}


[Planbase]:{	if	B(not 1233=no)
	then	{	NextStep(6, 5, 1233);
			Sent(1233, 1, open, 4)
		}
	else	{	NextStep(6, 5)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[if B(not 1233=no) then {NextStep(6, 5, 1233); Sent(1233, 1, open, 4)} else NextStep(6, 5); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10), AdoptP(useColor(blue, 100)); aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	if	B(not 1233=no)
	then	{	NextStep(6, 5, 1233);
			Sent(1233, 1, open, 4)
		}
	else	{	NextStep(6, 5)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[Planbase]:{	NextStep(6, 5, 1233);
	Sent(1233, 1, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[NextStep(6, 5, 1233); Sent(1233, 1, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10), aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	NextStep(6, 5, 1233);
	Sent(1233, 1, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[Planbase]:{	Sent(1233, 1, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[Sent(1233, 1, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	Sent(1233, 1, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


a40[CTAH] path: 0
a40[CTAH] path: Path: [6][0] [6][1] [6][2] [6][3] [5][3] [4][3] [4][4] [3][4]

a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] moveStepToGoalTest proposals: null
a40[CTAH] found a chip....: (R:6,C:1)
a40[CTAH] moveStepToGoalTest sent proposal for: [6,1,1,976]
org notification: Proposal [id=976, agent=a40, agent2=a20, clock=5, time=2015-05-27 17:04:36.365]
[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


Event processed UpdateClock(5)
Event processed adoptProhibition(color(blue, a40), reduce(a40, 100))
[Planbase]:{	B(clock(Clock));
	if	B(not 976=no)
	then	{	NextStep(6, 1, 976);
			Sent(976, 1, open, Clock)
		}
	else	{	NextStep(6, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(5)
},
{	adoptProhibition(color(blue, a40), reduce(a40, 100))
}


[new scheduled]:[B(clock(Clock)); if B(not 976=no) then {NextStep(6, 1, 976); Sent(976, 1, open, Clock)} else NextStep(6, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), UpdateClock(5), adoptProhibition(color(blue, a40), reduce(a40, 100))]
[After]:{	B(clock(Clock));
	if	B(not 976=no)
	then	{	NextStep(6, 1, 976);
			Sent(976, 1, open, Clock)
		}
	else	{	NextStep(6, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(5)
},
{	adoptProhibition(color(blue, a40), reduce(a40, 100))
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(not 976=no)
	then	{	NextStep(6, 1, 976);
			Sent(976, 1, open, 4)
		}
	else	{	NextStep(6, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[if B(not 976=no) then {NextStep(6, 1, 976); Sent(976, 1, open, 4)} else NextStep(6, 1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), AdoptP(useColor(blue, 100)); aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	if	B(not 976=no)
	then	{	NextStep(6, 1, 976);
			Sent(976, 1, open, 4)
		}
	else	{	NextStep(6, 1)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	AdoptP(useColor(blue, 100));
	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	NextStep(6, 1, 976);
	Sent(976, 1, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[new scheduled]:[NextStep(6, 1, 976); Sent(976, 1, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), aprohibition(useColor(blue, 100) -> reduce(100), priority 0)]
[After]:{	NextStep(6, 1, 976);
	Sent(976, 1, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	aprohibition(useColor(blue, 100) -> reduce(100), priority 0)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	Sent(976, 1, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[Sent(976, 1, open, 4); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	Sent(976, 1, open, 4);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


object notification: Time [clock=6, time=2015-05-27 17:04:38.895]
object notification: Time [clock=6, time=2015-05-27 17:04:38.895]
org notification: Time [clock=6, time=2015-05-27 17:04:38.895]
object notification: Time [clock=6, time=2015-05-27 17:04:38.895]
Event processed UpdateClock(6)
Event processed UpdateClock(6)
[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(6)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), UpdateClock(6)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(6)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
},
{	UpdateClock(6)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10), UpdateClock(6)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
},
{	UpdateClock(6)
}


[Planbase]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(5>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(5>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


object notification: Time [clock=7, time=2015-05-27 17:04:48.897]
object notification: Time [clock=7, time=2015-05-27 17:04:48.897]
org notification: Time [clock=7, time=2015-05-27 17:04:48.897]
object notification: Time [clock=7, time=2015-05-27 17:04:48.897]
Event processed UpdateClock(7)
[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
},
{	UpdateClock(7)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10), UpdateClock(7)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
},
{	UpdateClock(7)
}


Event processed UpdateClock(7)
[Planbase]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(7)
}


[new scheduled]:[if B(6>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), UpdateClock(7)]
[After]:{	if	B(6>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdateClock(7)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 2
[MSG] i'm: 2
AGENT : got response to offer
Event processed @ctenv(functionToList(message(response, 1233, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
org notification: Response [id=1233, response=accepted, clock=7, time=2015-05-27 17:04:50.701]
[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
},
{	@ctenv(functionToList(message(response, 1233, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10), @ctenv(functionToList(message(response, 1233, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
},
{	@ctenv(functionToList(message(response, 1233, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[CTAH] Array of Terms: [Lapapl.data.Term;@48657e45
[CTAH] The created APLList : [response,1233,accept]
[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
},
{	if	B([actionresult([response,1233,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,1233,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,1233,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10), if B([actionresult([response,1233,accept])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([response,1233,accept])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([response,1233,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
},
{	if	B([actionresult([response,1233,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,1233,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,1233,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 1233)
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10), if B(response=response) then ReceivedMessage(accept, 1233)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 1233)
		}
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
},
{	ReceivedMessage(accept, 1233)
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 5, 1233); ReceivedMessage(noresponse, 1233)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10), ReceivedMessage(accept, 1233)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 5, 1233);
			ReceivedMessage(noresponse, 1233)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
},
{	ReceivedMessage(accept, 1233)
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


Received a class edu.harvard.eecs.airg.coloredtrails.shared.discourse.BasicProposalDiscussionDiscourseMessage
[MSG] Message is of type: basicproposaldiscussion
[MSG] Message is for: 3
[MSG] i'm: 3
AGENT : got response to offer
org notification: Response [id=976, response=accepted, clock=7, time=2015-05-27 17:04:51.001]
[Planbase]:{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


Event processed @ctenv(functionToList(message(response, 976, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)
[Planbase]:{	@ctenv(moveStepToGoal(neco, 6, 5),L2,0);
	if	B(L2=[actionresult([6,5])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 5, Clock)
		};
	NoNextStep(6, 5, 1233);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 6, 5),L2,0); if B(L2=[actionresult([6,5])]) then {B(clock(Clock)); UpdatePosition(6, 5, Clock)}; NoNextStep(6, 5, 1233); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	@ctenv(moveStepToGoal(neco, 6, 5),L2,0);
	if	B(L2=[actionresult([6,5])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 5, Clock)
		};
	NoNextStep(6, 5, 1233);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 976, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), @ctenv(functionToList(message(response, 976, accept)),LIST,0); if B(LIST=[actionresult([TYPE,ID])]) then if B(TYPE=proposal) then {ReceivedMessage(TYPE, ID, open); adopta(received(TYPE, ID, closed) : Infinite, priority 10)} else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B(LIST=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	@ctenv(functionToList(message(response, 976, accept)),LIST,0);
	if	B(LIST=[actionresult([TYPE,ID])])
	then	{	if	B(TYPE=proposal)
			then	{	ReceivedMessage(TYPE, ID, open);
					adopta(received(TYPE, ID, closed) : Infinite, priority 10)
				}
		}
	else	{	if	B(LIST=[actionresult([TYPE,ID,RESPONSE])])
			then	{	if	B(TYPE=response)
					then	{	ReceivedMessage(RESPONSE, ID)
						}
				}
			else	{	if	B(LIST=[actionresult([TYPE])])
					then	{	ReceivedEvent(TYPE)
						}
					else	{	if	B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])])
							then	{	if	B(TYPE=proposal)
									then	{	ReceivedProposal(AGENT, ID, RESPONSE)
										}
								}
						}
				}
		}
}


a30[CTAH] moveStepToGoal returns: no
[CTAH] Array of Terms: [Lapapl.data.Term;@ee33634
[CTAH] The created APLList : [response,976,accept]
org notification: Position [subject=a30, id=null, cell=Cell [x=6, y=5], time=2015-05-27 17:04:51.11, clock=7]
object notification: Position [subject=a30, id=null, cell=Cell [x=6, y=5], time=2015-05-27 17:04:51.11, clock=7]
Event processed UpdatePosition(6, 5, 7)
[Planbase]:{	NoNextStep(6, 5, 1233);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
},
{	UpdatePosition(6, 5, 7)
}


[new scheduled]:[NoNextStep(6, 5, 1233); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10), UpdatePosition(6, 5, 7)]
[After]:{	NoNextStep(6, 5, 1233);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
},
{	UpdatePosition(6, 5, 7)
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B([actionresult([response,976,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,976,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,976,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), if B([actionresult([response,976,accept])]=[actionresult([TYPE,ID,RESPONSE])]) then if B(TYPE=response) then ReceivedMessage(RESPONSE, ID) else if B([actionresult([response,976,accept])]=[actionresult([TYPE])]) then ReceivedEvent(TYPE) else if B([actionresult([response,976,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then if B(TYPE=proposal) then ReceivedProposal(AGENT, ID, RESPONSE)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B([actionresult([response,976,accept])]=[actionresult([TYPE,ID,RESPONSE])])
	then	{	if	B(TYPE=response)
			then	{	ReceivedMessage(RESPONSE, ID)
				}
		}
	else	{	if	B([actionresult([response,976,accept])]=[actionresult([TYPE])])
			then	{	ReceivedEvent(TYPE)
				}
			else	{	if	B([actionresult([response,976,accept])]=[actionresult([TYPE,AGENT,ID,RESPONSE])])
					then	{	if	B(TYPE=proposal)
							then	{	ReceivedProposal(AGENT, ID, RESPONSE)
								}
						}
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	adoptz(useColor(white, 100) : 27 May 2015 16:21:07 GMT, priority 10)
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 976)
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), if B(response=response) then ReceivedMessage(accept, 976)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	if	B(response=response)
	then	{	ReceivedMessage(accept, 976)
		}
}


[Planbase]:


[new scheduled]:[if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	ReceivedMessage(accept, 976)
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), ReceivedMessage(accept, 976)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	ReceivedMessage(accept, 976)
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A1,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A1,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(7>4+5) then {NoNextStep(6, 1, 976); ReceivedMessage(noresponse, 976)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(7>4+5)
	then	{	NoNextStep(6, 1, 976);
			ReceivedMessage(noresponse, 976)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	B([A1,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[B([A1,B]=[4,3]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	B([A1,B]=[4,3]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 4, 3, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(blue, no, 4, 3, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 4, 3, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, 6, 1),L2,0);
	if	B(L2=[actionresult([6,1])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 1, Clock)
		};
	NoNextStep(6, 1, 976);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, 6, 1),L2,0); if B(L2=[actionresult([6,1])]) then {B(clock(Clock)); UpdatePosition(6, 1, Clock)}; NoNextStep(6, 1, 976); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	@ctenv(moveStepToGoal(neco, 6, 1),L2,0);
	if	B(L2=[actionresult([6,1])])
	then	{	B(clock(Clock));
			UpdatePosition(6, 1, Clock)
		};
	NoNextStep(6, 1, 976);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


Need to wait 3 more seconds
org notification: Position [subject=a40, id=null, cell=Cell [x=6, y=1], time=2015-05-27 17:04:51.512, clock=7]
object notification: Position [subject=a40, id=null, cell=Cell [x=6, y=1], time=2015-05-27 17:04:51.512, clock=7]
[Planbase]:{	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(not ID=no)
	then	{	NextStep(Xa, Ya, ID);
			Sent(ID, Agent, open, Clock)
		}
	else	{	NextStep(Xa, Ya)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	B(clock(Clock));
	if	B(not ID=no)
	then	{	NextStep(Xa, Ya, ID);
			Sent(ID, Agent, open, Clock)
		}
	else	{	NextStep(Xa, Ya)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(not ID=no)
	then	{	NextStep(Xa, Ya, ID);
			Sent(ID, Agent, open, 7)
		}
	else	{	NextStep(Xa, Ya)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, 7)} else NextStep(Xa, Ya); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(not ID=no)
	then	{	NextStep(Xa, Ya, ID);
			Sent(ID, Agent, open, 7)
		}
	else	{	NextStep(Xa, Ya)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	NextStep(Xa, Ya);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[NextStep(Xa, Ya); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	NextStep(Xa, Ya);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, X1, Y1),L2,0);
	if	B(L2=[actionresult([X1,Y1])])
	then	{	B(clock(Clock));
			UpdatePosition(X1, Y1, Clock)
		};
	NoNextStep(X1, Y1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, X1, Y1),L2,0); if B(L2=[actionresult([X1,Y1])]) then {B(clock(Clock)); UpdatePosition(X1, Y1, Clock)}; NoNextStep(X1, Y1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 6, 5)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	@ctenv(moveStepToGoal(neco, X1, Y1),L2,0);
	if	B(L2=[actionresult([X1,Y1])])
	then	{	B(clock(Clock));
			UpdatePosition(X1, Y1, Clock)
		};
	NoNextStep(X1, Y1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 6, 5))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


a40[CTAH] moveStepToGoal returns: [6,1]
Event processed UpdatePosition(6, 1, 7)
[Planbase]:{	B(clock(Clock));
	UpdatePosition(6, 1, Clock);
	NoNextStep(6, 1, 976);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdatePosition(6, 1, 7)
}


[new scheduled]:[B(clock(Clock)); UpdatePosition(6, 1, Clock); NoNextStep(6, 1, 976); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100), UpdatePosition(6, 1, 7)]
[After]:{	B(clock(Clock));
	UpdatePosition(6, 1, Clock);
	NoNextStep(6, 1, 976);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
},
{	UpdatePosition(6, 1, 7)
}


[Planbase]:{	UpdatePosition(6, 1, 7);
	NoNextStep(6, 1, 976);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[UpdatePosition(6, 1, 7); NoNextStep(6, 1, 976); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	UpdatePosition(6, 1, 7);
	NoNextStep(6, 1, 976);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	NoNextStep(6, 1, 976);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[NoNextStep(6, 1, 976); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	NoNextStep(6, 1, 976);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if G(at(X, Y, V)) then B([A1,B]=[X,Y]) else if B(tile(neco, X, Y)) then B([A1,B]=[X,Y]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	G(at(X, Y, V))
	then	{	B([A1,B]=[X,Y])
		}
	else	{	if	B(tile(neco, X, Y))
			then	{	B([A1,B]=[X,Y])
				}
		};
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	B([A1,B]=[3,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[B([A1,B]=[3,4]); if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	B([A1,B]=[3,4]);
	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, A1, B, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, A1, B, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(prohibition(useColor(Color2, V3))) then if B(V3>700) then @ctenv(moveStepToGoalTest(Color2, no, 3, 4, 8),L1,0) else @ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(prohibition(useColor(Color2, V3)))
	then	{	if	B(V3>700)
			then	{	@ctenv(moveStepToGoalTest(Color2, no, 3, 4, 8),L1,0)
				}
		}
	else	{	@ctenv(moveStepToGoalTest(neco, any, 3, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 3, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(100>700) then @ctenv(moveStepToGoalTest(blue, no, 3, 4, 8),L1,0); if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(100>700)
	then	{	@ctenv(moveStepToGoalTest(blue, no, 3, 4, 8),L1,0)
		};
	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(L1=[actionresult([Xa,Ya,Agent,ID])]) then {B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya)}; if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(L1=[actionresult([Xa,Ya,Agent,ID])])
	then	{	B(clock(Clock));
			if	B(not ID=no)
			then	{	NextStep(Xa, Ya, ID);
					Sent(ID, Agent, open, Clock)
				}
			else	{	NextStep(Xa, Ya)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	B(clock(Clock));
	if	B(not ID=no)
	then	{	NextStep(Xa, Ya, ID);
			Sent(ID, Agent, open, Clock)
		}
	else	{	NextStep(Xa, Ya)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[B(clock(Clock)); if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, Clock)} else NextStep(Xa, Ya); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	B(clock(Clock));
	if	B(not ID=no)
	then	{	NextStep(Xa, Ya, ID);
			Sent(ID, Agent, open, Clock)
		}
	else	{	NextStep(Xa, Ya)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(not ID=no)
	then	{	NextStep(Xa, Ya, ID);
			Sent(ID, Agent, open, 7)
		}
	else	{	NextStep(Xa, Ya)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(not ID=no) then {NextStep(Xa, Ya, ID); Sent(ID, Agent, open, 7)} else NextStep(Xa, Ya); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(not ID=no)
	then	{	NextStep(Xa, Ya, ID);
			Sent(ID, Agent, open, 7)
		}
	else	{	NextStep(Xa, Ya)
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	NextStep(Xa, Ya);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[NextStep(Xa, Ya); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	NextStep(Xa, Ya);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[findNextStep(neco, 700); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	findNextStep(neco, 700);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[Planbase]:{	@ctenv(moveStepToGoal(neco, X1, Y1),L2,0);
	if	B(L2=[actionresult([X1,Y1])])
	then	{	B(clock(Clock));
			UpdatePosition(X1, Y1, Clock)
		};
	NoNextStep(X1, Y1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


[new scheduled]:[@ctenv(moveStepToGoal(neco, X1, Y1),L2,0); if B(L2=[actionresult([X1,Y1])]) then {B(clock(Clock)); UpdatePosition(X1, Y1, Clock)}; NoNextStep(X1, Y1); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 700), if B(tile(white, 0, 6)) then dropgoal(useColor(white, 100) : Infinite, priority 10) else if B(prohibition(useColor(white, V2))) then if B(V2>100) then dropgoal(useColor(white, 100) : Infinite, priority 10) else findNextStep(white, 100); if B(receivedP(A, MSGID, open)) then if B(scoreAfterExchange(MSGID, Score)) then respond(MSGID, 100)]
[After]:{	@ctenv(moveStepToGoal(neco, X1, Y1),L2,0);
	if	B(L2=[actionresult([X1,Y1])])
	then	{	B(clock(Clock));
			UpdatePosition(X1, Y1, Clock)
		};
	NoNextStep(X1, Y1);
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 700)
				}
		}
},
{	if	B(tile(white, 0, 6))
	then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
		}
	else	{	if	B(prohibition(useColor(white, V2)))
			then	{	if	B(V2>100)
					then	{	dropgoal(useColor(white, 100) : Infinite, priority 10)
						}
				}
			else	{	findNextStep(white, 100)
				}
		};
	if	B(receivedP(A, MSGID, open))
	then	{	if	B(scoreAfterExchange(MSGID, Score))
			then	{	respond(MSGID, 100)
				}
		}
}


object notification: Time [clock=8, time=2015-05-27 17:04:58.9]
object notification: Time [clock=8, time=2015-05-27 17:04:58.9]
object notification: Time [clock=8, time=2015-05-27 17:04:58.9]
org notification: Time [clock=8, time=2015-05-27 17:04:58.9]
object notification: Time [clock=9, time=2015-05-27 17:05:08.903]
object notification: Time [clock=9, time=2015-05-27 17:05:08.903]
org notification: Time [clock=9, time=2015-05-27 17:05:08.903]
object notification: Time [clock=9, time=2015-05-27 17:05:08.903]
object notification: Time [clock=10, time=2015-05-27 17:05:18.906]
org notification: Time [clock=10, time=2015-05-27 17:05:18.906]
object notification: Time [clock=10, time=2015-05-27 17:05:18.906]
object notification: Time [clock=10, time=2015-05-27 17:05:18.906]
setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
setPhases in ClientGameStatus, the current phase is Movement Phase
object notification: Time [clock=11, time=2015-05-27 17:05:28.909]
object notification: Time [clock=11, time=2015-05-27 17:05:28.909]
object notification: Time [clock=11, time=2015-05-27 17:05:28.909]
org notification: Time [clock=11, time=2015-05-27 17:05:28.909]
object notification: Time [clock=12, time=2015-05-27 17:05:38.913]
object notification: Time [clock=12, time=2015-05-27 17:05:38.913]
org notification: Time [clock=12, time=2015-05-27 17:05:38.913]
object notification: Time [clock=12, time=2015-05-27 17:05:38.913]
object notification: Time [clock=13, time=2015-05-27 17:05:48.917]
object notification: Time [clock=13, time=2015-05-27 17:05:48.917]
org notification: Time [clock=13, time=2015-05-27 17:05:48.917]
object notification: Time [clock=13, time=2015-05-27 17:05:48.917]
object notification: Time [clock=14, time=2015-05-27 17:05:58.921]
object notification: Time [clock=14, time=2015-05-27 17:05:58.921]
org notification: Time [clock=14, time=2015-05-27 17:05:58.921]
object notification: Time [clock=14, time=2015-05-27 17:05:58.921]
object notification: Time [clock=15, time=2015-05-27 17:06:08.924]
object notification: Time [clock=15, time=2015-05-27 17:06:08.924]
org notification: Time [clock=15, time=2015-05-27 17:06:08.924]
object notification: Time [clock=15, time=2015-05-27 17:06:08.924]
object notification: Time [clock=16, time=2015-05-27 17:06:18.928]
object notification: Time [clock=16, time=2015-05-27 17:06:18.928]
org notification: Time [clock=16, time=2015-05-27 17:06:18.928]
object notification: Time [clock=16, time=2015-05-27 17:06:18.928]
object notification: Time [clock=17, time=2015-05-27 17:06:28.931]
object notification: Time [clock=17, time=2015-05-27 17:06:28.931]
object notification: Time [clock=17, time=2015-05-27 17:06:28.931]
org notification: Time [clock=17, time=2015-05-27 17:06:28.931]
object notification: Time [clock=18, time=2015-05-27 17:06:38.934]
object notification: Time [clock=18, time=2015-05-27 17:06:38.934]
org notification: Time [clock=18, time=2015-05-27 17:06:38.934]
object notification: Time [clock=18, time=2015-05-27 17:06:38.934]
