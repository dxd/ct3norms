BeliefUpdates:
{ true } 												AdoptP(New) 				{ prohibition(New) }


PC-rules:
event(obligation([Goal],Deadline,[Sanction]),ctenv) <- true | {
   adoptObligation(Goal, Deadline, Sanction)
}

event(prohibition([State],[Sanction]),ctenv) <- true | {

   adoptProhibition(State,Sanction)
}

event(clock(Clock),ctenv) <- true | {
   UpdateClock(Clock)
}
event(points(Points),ctenv) <- true | {
   UpdatePoints(Points)
}
event(position(X,Y,Clock),ctenv) <- true | {
   UpdatePosition(X,Y,Clock)
}
event(tile(Color,X,Y,Clock),ctenv) <- true | {
   UpdateTile(Color,X,Y)
}

adoptProhibition(at(X,Y,_), reduce(_,Value)) <- true | {
    aprohibition(at(X,Y) -> reduce(Value))
}
adoptProhibition(color(Color,Thing), reduce(_,Value)) <- true | {
	AdoptP(useColor(Color,Value));
    aprohibition(useColor(Color) -> reduce(Value))
}
//TODO remove hack
adoptProhibition(rejectRequests(Thing), reduce(_,Value)) <- clock(100) | {
    aprohibition(receivedP(closed(reject),Thing) -> reduce(Value))
}
adoptProhibition(moveTooFast(Thing), reduce(_,Value)) <- clock(100) | {
    aprohibition(moveTooFast(x) -> reduce(Value))
}

//{	adoptProhibition(rejectRequests(a40), reduce(a40, 500))
//},
//{	adoptProhibition(moveTooFast(a40), reduce(a40, 300))
//}

adoptObligation(at(X,Y,_), D, reduce(_,Value)) <- true | {
    adoptz(at(X,Y,Value) : D -> reduce(Value))
}
adoptObligation(surround(X,Y), D, reduce(Group,Sanction)) <- true | {
    adoptz(surround(X,Y,Sanction) : D -> reduce(Sanction))
}
adoptObligation(color(Color,Thing), D, reduce(Group,Sanction)) <- not useColor(Color) | {
    adoptz(useColor(Color,Sanction) : D -> reduce(Sanction))
}
adoptObligation(acceptRequests(Thing), D, reduce(Group,Sanction)) <- true | {
    adoptz(acceptRequests(Sanction) : D -> reduce(Sanction))
}
adoptObligation(makeMove(X,Y,Thing), D, reduce(Group,Sanction)) <- true | {
    adoptz(makeMove(X,Y,Sanction) : D -> reduce(Sanction))
}

event(FUNCTION, NAME) <- true | {
	@ctenv( functionToList(FUNCTION), LIST); 
	if B(LIST=[actionresult([TYPE,ID])]) then { 
		//Received a proposal
		if B(TYPE=proposal) then {
			ReceivedMessage(TYPE,ID,open);
			//make response
			adopta(received(TYPE,ID,closed))
		}
	}
	else if B(LIST=[actionresult([TYPE,ID,RESPONSE])]) then {	
		// Received a response
		if B(TYPE=response) then {
			ReceivedMessage(RESPONSE,ID)
		} 
	}
	else if B(LIST=[actionresult([TYPE])]) then {
		// Received an event
		ReceivedEvent(TYPE)
	}
	else if B(LIST=[actionresult([TYPE,AGENT,ID,RESPONSE])]) then {	
		// Received a proposal
		if B(TYPE=proposal) then {
			ReceivedProposal(AGENT,ID,RESPONSE)
			//adopta(receivedP(AGENT,ID,RESPONSE))
		}
	}	
}

Sanctions:
	reduce(50)  -> 1,
	reduce(100) -> 2,
	reduce(150) -> 3,
	reduce(200) -> 4,
	reduce(250) -> 5,
	reduce(300) -> 6,
	reduce(400) -> 7, 
	reduce(500) -> 8,
	reduce(700) -> 9,
	reduce(1000) -> 10